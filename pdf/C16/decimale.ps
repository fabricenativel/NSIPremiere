%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C16/decimale.dvi
%%CreationDate: Sat Feb  5 07:00:07 2022
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: LMSans10-Bold LMSans12-Regular LMSans8-Regular
%%+ LMSans10-Regular LMRoman10-Regular LMRoman7-Regular
%%+ LMMathSymbols7-Regular LMRomanCaps10-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C16/decimale.ps
%+ /home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C16/decimale.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2022.02.05:1100
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgf16{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf17{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf18{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf19{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf20{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf21{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf22{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash
3.00003 0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto
-1.65689 3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689
-1.65689 -3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689
3.00003 0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc
pgfstr grestore newpath  grestore} bind def

 /pgf23{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRomanCaps10-Regular
%!PS-AdobeFont-1.0: LMRomanCaps10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRomanCaps10-Regular known{/LMRomanCaps10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRomanCaps10-Regular)readonly def
/FamilyName(LMRomanCaps10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRomanCaps10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-496 -290 1501 1100}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53E3095EF5AF4F01AA2B5C2934E5345
1D88D311DB46915432DD0F408112AADBDE54032868560673D08129A1793B6FDD
D1D82ACA35A8223DA18ED7A03094DE92156D5D0B42FF6C449A1823CEF7555FCA
B35573829AE5A55A1381600C734661125E28C2C51EAD103F3DD496F6EA7096EE
8FD3BEFA4FBD7391DF4FAAFA38FCC474FC632D8A8C890F5276629AC2552B74C5
3C8C4B1DF8FC58A3050CDF2357DD1F98E83C4D077AEE399C268ED59CDE9DFA68
BFE8629B52E8DC41DEEC0C9E84BDEA39B4AC552839755CBE2DC820864DC9612F
16D1A532150DE0137F647DAE154785D152CEE57AE3FF8F671B20EFA22C5711DC
B9F8AA784F222AE1183B01E2AAC6254D7994624D1B351DFF6CBF3B4F7B1DEC63
CCA90AEB60F15A33F727877927E80AC8722C27C584FB671FEB518D1DE33FAA48
3173C60B382AA1F0B22369BE368CBF749E7559509205B38DF4326DF6A6161C4F
E3553EE51C42032B00F69252E9043B7928B2824FCDB5189B3020CF1D596C59B2
135BC9D16D037D87C31B091D7C4DDDFAAB32D68F9C396CA3BF22BD6824BFE582
93520934A63EB6473935B1EB4801E3ED6475320DBFBA8C2F3F98F03DB06C3F05
B0B06847EA50E8220C87171F32F759EC361701793C97953550ECA6D4B28EC2FD
607D51FF237723D79DF208680711F2DAA6172AEBF28B736756CFE9D56EEF0156
FCC46EA96AFB2A804A3BEE06E0A59EC3652633189E85E68B5F3EFA7CBF91E3E1
D7472E66CCE86A28D2FE799AB043DA1C74EFBEB5C5AE6123A71702861463B56D
7BC98F38D9C0B29C25645142AD8BE57953956B838F815285B8802EE4BD0817BC
404C04D71B0FDFF6DC455B51B305A005DD7796527CD8561337EFB990C47DCC87
E2A042ECD49871111D71785275257C303761638CB0EF14492762F5A1CB7BD472
F0B01BB09FC6863455F33DE4BEF212E60A9021B94F42EE04735AF673E3D24A74
35BBA4EE640862CC2C49FD18BFD4A21FA259DED7A5F13C74E62BB9A4633098E0
15F6E5DD084E687F8909E2288265BB98D64189CEA29065AA87E8BB636C3FA965
32FA00F88F4C98217A140A3162D903EDE2880C3743AE61EA1D3E2DA8EFD0F95E
E88605CF6872260A0C808EB620E9F9156627EEF4B4F07CFF943A70AA730E2B56
3A5912AA256C9519F4F8A46E512BBA9F099FD0A4E11C873E88DFFCD25D0F0805
B0EA04ED10F3D442573A56648C90B3D8C4C44741A535D965E48F0F4AD114076E
79FD9D0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AE17F756273333E84F341
637A1BDB292EADD055C971FFA94B4E72EE284C44A9C294B2B18D9A2E50D90BEA
A161415478975E25D1E928C5867A495F88565BA02CEBBA62BBF3976782EE4B45
DF434B01660CFF3F89AB4FEF6BC7F7D7F83EED9F947931149B6CFA3CC38B537B
6C89BBCCE6C448AC5C61D17285F9E2E321C96C5501772C32C2B6183CA0BB5DEE
4B7C3C8F0D77EBB70D341E595B5A7BFE2B471EAC3CE6C0BB9A046AFF0D3CDE8F
81C142E70727135017B39A5A1AFBA562AA96BAD4D66958AA329DDE6CAB90B3FE
38E49F75EC083CE28D488E75BBF597DB49E3F42610D596C1D91A878EE680EB84
C857186645C467EC0164AB6086D2C2D95C1BA20D36E2E8C1494640BCF0294FF2
103926BD4D83104F9B660EFF434CCDDC96CC25E9F54CDC9E19D966D068DAEE4E
1255BF293797A1BD1FAAB9AF2BAB48057DE0E3C276E3A5117350E877FFF97EAE
242EFCE7ADE5DAB83C34AC97C66C21F4CE4812FA0F007C12820899207C35F3B0
14133645FB9F8E53A6E2A1CC08CED4D33CE9B69E7A5D0E31726EC3BF9FD98C0A
E5BA1BCF5166779F26081CE1DCF8FCBF985B41005EA0771D91D5727FB447795C
A639A5C9057E97FDC795EE6B7C39AF1AB0338BACA1A1E179F1AF0EABA623864E
553A210AE8C03A525E467DF8744A8B6DB57E04C99BF7F568041BF90B5EEC2B73
9A109B37B07E8A668E68D117A3E0C46B11617838874E7F840DAB45050FC413A5
037107717FB43013DA06FF41184DEF3526C06FD5BAB6F3763BD358D6931EEA4A
860E1A17079A59DEB9C7A4C0FC68AF583ECCBE6FE0329A031820D4D1DA9D11F0
2D650DFEAAD917E7F290E617903792223A2AA23AE7069154690EB370F940BAE2
395473B7C2F70EB4DF0E94468FBA1B6D5F1CCF350E3930ADAE5249B3D5CAE21B
281B22FAE6EE3AF85762C36421F291360670443326A44F1F4EA0E002D8B94CDA
144057B4D5F9FD416ADBAD209422879682A8D0D249CDBAB31345F45FCE24252E
D45316EA9E34A9EA03A6C950682BD7E72A81DC4FB2B9CCCA501761022009926B
5F55C9CB2855D5D049D3C73CBEF771A594437E6E1C6B0F15FB3102DB7A3DDCB5
3BF882D33E5A43EF201EC0B415DC701E8FE4FD3505B993F5CFDB502635117336
387D170AB42F95FFE8C79DD1C5CD4860749F82198FFFDAE1393586EFD3956EE1
0F7A3EC03DBC1045CDBCCCC3950C6C443E1EB25180C92F0640CE6A8AF3AE7EB1
81C2E4C11086C2ADDBAEFF30348287C9C3FA8B34A76654DD7AD692702C462BC8
6360DF3B3C743459AB088BEA49C5D06D6EB67124373543A2C18439DB2227247B
30A41C72B8836026F60961F8EA96BF0A4F3E778B9002DD7488DAD1A42BC257C3
C7149CB99114E73DDD3F9A78BBE152E1BAD8C1A22328682504131249C8468ADA
F74760105E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFFD065CAD27B9EB202
0C908E91E81B07A92AD544D202816662873464594EBF58A0B38A156331EEAA0D
0BC24BB44DFFFCBF4181A86F0A4BD25C3921CD2BA8360AAD322C021122E962CD
756DE48DA93798FBDD034F4304D5EDBBA164DC9E9B3414D00E9F5B712394804B
D4BDA26FE7C2418EEB63B7E393108CADDA24C91C1962272359F2535FA1D1A508
FB5023D07D392FDDDE2AC0E0708B430846E137E6CA0B5436653A968FE24DF8D4
6D2003B45B60BB1B6D62DA735DA6689C2C03F196ADC11B27E608674E546D2074
A3AD2FDED543CBEB81B9271E5EDD5DEAA97BC86C948570063933291D78AB5298
EA92E13430C7CA1FC658FA031AAD0EA5B01D22253D6C26BF3F435E6A6E9147BC
1B68EA135225157DBB906F75C799F437E74F0E185AD518B7E446C30415CE5799
01D43D8E2B08A04783C5E1AB77A3E641BFCD7753EC20A9D8AED089AF77F0C5D8
96228A3AF8A96329A5F0EA14F929D5598F4437AB944A06B5EEC3343EB29A9271
70DB0EA31A11EE7634FD75CAEAA480F411AFB3A933234276082E17993B297043
B2F75674AA08FF419E5CBFB6407856406CC9C52353EAB3C79BAAEFD74B08910F
452C7FD271C1B9BACA52194DCABDB4284B77C573C5A7EEA60AC017A3CBD6BA59
A1AC2BACF1545011EA84CB75B2C5ED13C702870ECCCD60554EE8C5D4B9F2FB5A
92DA2D93B04417CC9240E9C692407250E7D47C97F9B3A11C8CB3EA31F589BDA6
00E115E70395E2E4C0A29284FD2C9A8740851EDC442490FAE8321683AE4A530F
EAC44A63E2B90731652CCDDBEEC58F573951454FE7AFA29CDDEF96E951AAA9B8
EEB3F9BD5F13210AEC71AED98317186244404D4812EB1E27A42058A387726A74
FD74B84CEABDA95CAA798540DFB193A897AEC52D74BB6747FB9CD5A633DF5375
2834D9E6147A844A7DC46DFC69EB7B63E6126545B566CA3099246CC6E5F85E04
5FE750DA4A9B403FD293CC4363897147A165FB658A4E7A74EE6C22C2737A8107
63C405C5DD41D7ADF7112DB70AEF68FF3B8773848FB918BD1D4D4963B96902F3
A84599D73EB3303D7B74883137EA5EEE14B739F60D45D102706C99D92E1CA501
846CC8AB6FB3AD6AC55575E66721F58FC39D634E3C68CB3E2E24D61819BC8515
9520ADC69ACA26ED5D96EF04C2AD0153759083DBE7DA9B89D877992A8DC821FB
5A141A58CC2A46228F2F642101F5B23CE1ED3A79F2C6006E04619B81578C0EA3
C3A72402DFB9B35C8E59BF582621648F48CC413EDED067EF9BEEEA1134788A6F
839F2C2FB22529A38153E830445FFF661BCCCA767DB0BCACA4693DF0370A9804
2E527BD65EC1E77D32A07DD7E1149715178A46263EFFFBE20CF045D1F128CA45
50BA9D6D6DA61B84D00CBC9FAE5924F8209ED49D597C20A0CAD1C2D3424E9CD5
8A179A2BB40AC54D2E45D206928BE43A964D2311F07753D0CE4ED2AD6198A473
F1F9EA821DEE99E27D331F0559477F0CF1D9731533BEFE67747FCBD3460F9E80
3E409065E158DA49560DBF9060489CEEBE735CE28EE4ABC81450157CB7DDACCB
72A0FB560345386569D9DEE8754EBA551B635693EC4FEEA9CDAE3564D5DB1DC8
0645A5DFBEDC32C58223FB032506BA87BA582862CCFE1FD43197B1C7953BD8F4
DA1AEDEC773D5C063965683DCBA5BAA51ED9F1F601F0F088C4C2859090964202
143D72C13B747461135CBEC72D82A7C1602B824629FA3F773B665ADFF0135A65
ACB5311765991CFE59744E7CC201895FC7C2415439EA0112F1804CEFA65F5653
92ECDDDC6641E651C4CAC35F163BC67A18CC18839FDC4EB001A723EE59734A18
EB12CD7C54DBA9F8C47428CFC2B96879AC6792E812426A33CD78A844120B5B67
120BA7884AE4336F3FEBD08B7B93B550CC6D1ED120AC16308B6DD2B9A8F686D6
AA020E49172C02DA888DE03EC12D4EA38E7D327F0F4C117F34AB17610F5D7F76
C207FAF88C8FAEF2476515A41387CA09174006C8F2125DB485D1F37C940A8F4B
3E4DCC91413C3273DAC2A3FD2C49E3C9AB8FF8EFC8DA34C873E57D38B01DF487
3772137582971F3249E6694A24DA005C84176455BA74C8A97447861732DFDA1A
5752B5222EDD9012B45CF0DF0644B2E5B7AE5DA72EFE54D294768DE021DDC1A7
C76EF77C6E740449BEE713B7E40F77F7F6EBB4BF933204D9E5E28D522591D17C
997D66D0491D2D29CFA7F4C88869E2D53DBAB54563CC5357F755C48E49F4F103
4A8645A68D436C42FAE21F2C158167C6BA509BED34E0B0DA099434D7FE957C3D
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1D8B592CDD4375AD01D63E8F687
46B8029C831A0871A8F9F2E264EC10133C444A86EF7C38608D246A1B4379C45A
7C34D82EBEACACC718F5905E864DD54CA062EA1FF406D9E2E42031876A1CFCE5
8D611A8435A8459CAAD2B618D4BF9115DAC5B425EC8BA4590DD3555C2E4BB601
97FBB232487FD786E57CA1229401BF634D445C93FDC157796BFA5502F105FB79
F31A554D8BF98B8303CFD661ABF9A72CA0629AA65989A7AA9AC8B6930AE574DD
D32FF4BD7C970D933C47EA4515043C418049903E3F36885AD45509FC3CF6F31E
975595338AAC667E1ACC0A3D0AF0B6A0995FA0FA6A1C7BF34A0E25EFB2AD7503
D23492E7E980B2C4324736378E0843451E4D9840AF87F800D3B6E0248AC51AEB
F052E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DACA0535AC90368B31AB3110
CB4EB8D00DF6246BA012FA3416E1EAF822DCAA6C0C4142A552F0D97037FD695F
92137A8CEB212797BBE778DCDB2D0F6726BCF115DA15374CB688BB2F98BDC3B7
21DB34D4C6186E5CB2E597FE2055304950D905D6AFB4390B62A3173B522240F0
D3AB72588D98BAC8AEF2D4837251BBBF065C283B7C7B3BD08D7708CF72309950
D176CFAA1D155312586A9ADC136D9155C3C6ACBDEF8BA575387DD0D73162CDDD
96166F795921D90204DB9F3E3FBE084A2DECAA1964AD31D9D2F4743E73B73557
69B7ED30FCFA10238AB9E263F42C980A603B024C1844C08D06E40C58072E7D12
43257B02B8CAFF2AC2FB7868A7FC61E6AD2CF8C5CA6111D592F4184FABB849A3
676A8D175D44E71B9CEB49676700958F17D09D8B8D37746E5AB46052350D2D3D
6947F4B53D2B14FD50B4CEF4398D2D2BE7E7A3103A10B82E0E27702BF83306A0
C3A89D9AD2A517E03614C8349282F97AF2292BEEF24F886427E846C0BD15A807
62263CD8C96EAA02F137C2134A47241E3F15A881F6A2FE15BD745CE175B92169
7F9D9FF0803559FEA211098B4B45E88443AFB83F96DECD5E0B32C5EA329CB342
00253C789CF8F0CC740618BA5DCDAD4693F4E17363864CC8AB69FF9238E0B18A
F4114B94CDF5DADB44EAF5DB260D8B8BC3027ADFF7DBE2AD88CA3261C59CFC1E
C0418A91E44F1718D13CF485B3CAE0E01B327EE29107319D27F242A8681C2397
F448C46BA164AC7BE0C0A73FB423A2AD05E28D490FE15EBC6A6956477E8B7DAA
F1AE28A6B253A55B77C969975DADE58C1A863D53B67DFFDE2F48652558A2D707
BE5A2C968491730CC85A6FAC2CF9D670F1FB69EB4966334402F76388AD6AB9DB
661A04037C111998C99A0A09C9002478AA31E4240F13D73182F04410A11A88EB
D5278ACEC4A55F1A082D537B3C1EE890A6FD2ECD5F4D5DE99814AD4A07983923
64FE0BEFFF89A5599AA47087D62EBF48C20DCB99FD2BAE6853877991059EA431
7ACD1B3B44D9E5F789B7877ADFBD0F5BF0D86E0DC7B68A3F2D8B66E59BE53EDA
B3DA137D59CC6EFA0F579F8A1C5E4FFF0AF7FF5CCE31B93E4048CFBFCDADF56B
75CC3A9291183CA5F1FCD9BACF833A9D58F384DC27B11B3380AED6F7A6719B66
AA3E4CF7A10D86C2E63BB1BCEFB27E668CB9A72C46083DD42729C37C41DB7347
D16B9C41AAE346617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A1CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B1FBCC83587A2536500DAFBE0CA7772A5
89F8D9CDE0932B5D3A1819CB2732460837EDC62035D7D232AD000EDC4598F22B
950DDB38150538219C18735C6FE1823BC63C569503A4B5CBCCDFEEFC01872476
101D65E487A587BCA95243A1EB5BA0431C918A879828150795CF2BA78D4E55F1
FDBABB8BF813CB9DB27CB44AA47AA0D4E648240D872FB7614B5068382C766444
22AE18999FFE37981189CADA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0524
BC6A4F583F56C127E3666DF8476D5A8A6CC0A5B1420DDB2B7E75B0A8C76AA6C9
98C9AD482CED7C243C9688323D96A3F96517CFF904BA26767486441050388419
88EAA2FE0155EA8DC3F8EA9DB943789A191542089E218EF40FB4942319C28B52
2ABAF817F506EF45F7262128F935F4893B87C2220034C6F979B5B3DE3BA5858C
38C9C1337A638C0E5C575727665665C88AD38E13EB02AC3AE5CF08B53BAB7FD1
3E263C2549247D8DF74C6863D43B0266C927FC0C7682845F3E4266B7D327312E
FB770916FBAA37015011999870F0AD19B5EB1B9D54BBE7593C45B8F41C203368
AB891AA0006AFDE458F28C88624B7CD1FEC7F9EF2C74697D12EF1AC78B34E566
672E71A0A5B53E6FEB67E477C72E6CDA1458BC8DB8E1DA62D42F448933905E64
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CF5F095DCFF46884A1AD7C81
AD55FEE036634EFB88A2B1ED19E37CF0B527D14F008E134FA0711FE40BC8A925
3E5027D8FE5FE873E98EEF621E059DF969C14E19E1CB4EB43B64E6957AEEF5C1
7D832383CC11E5D6419158E6A838BB3106F54CEB953F0C16D9F1CEF47274C469
0FA0620F50E5BB14A0F359C4C172951461E884747D6E5D29114039F59776D65F
0A6D9E5088AD245098A9CFAE5B44CB364AE68381B4DD8789E1D35D4AE06A0511
07EA4D90D3FFD25223604AF01B5F46C739DDC81B47978F0BDBD79F9A6A53DA20
0FB56DC483BBA3EEA535009B3A8AC750DA63EDE128761D164A9843955BBFEC72
13307B78378886F93C1C822EFA66A75E01A68758FD97C5928BB2B1DCDB63CA10
90BA2CDF850F9E1A5C5856D41D8FB730E048E0EA435515BF52FD453207213F3E
13FC83A36F2D86CBF4AAC4ABBFA39688BB222A81685006706434FFEF6D6EE0E7
0900D14EF927A2F0C3A8BE6E4CBC44070FC79D85C273074A7E31F7C63BC4DA2C
8E1C1CEA7000F63CA5BF75389D057C364EB8747A414F55FB4FDEB79A695E89B5
B2C3987863CB4B29ED6BC20B0687BF97346B111AAD8EDD835B26DEE73E360BA2
4603A6B42398895F1F95D5F0D0225D8EDA64581718ADF5FBD7277E57E9919BD1
0558E3A5022F158043BEB6A6820566EAD71325D69BF3460E9C3C7E0C0F1BB457
048ED47325A221E91DC93BC429BB517890A8F857C2F54BA01FAAC221D701C672
36E08C7A56288E339620A52776770935A6A193FA21A3DC25DEE1FF03955E5671
C075DD53A5A82FE7F773815B2AA555BB03CE19B2B72268C40F772CFA2CD7A598
A024222D413287F7481B9AC0E13B169DD71090499B415AD8AAFD99AB5DE2BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23E63378F5339306A9F79BF2523B16A
083F710C102E07B67194745D7159FCDBB10B6459273EFD03520F2483A9E6C0E5
665B54CFCA5BBE96B39E69D388D9229C1E361D6C47FF84A49AE0C70F71EA41B0
2E1DDF2DE8630CFC5F2C8AE1E5BCD78411D194A831BD263880153BECC873A9C7
1796A7807E2345AD02481ACECEE7243887DBA28E28217389829F4D31CECC14EB
7C948E6E6E104A080B9441E0BC3624493ED50AB68A0B22A779D7D816629D1E36
FBA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886DCB7291933374888A65847
44692F87A67A218BFBCC8896E57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243
E79E7B7164A60BC32326C2D36742C0D71D21C63AA4DEC82918F11F62984C5F85
3516C1419DF929D29EAF4490A01F57EEC3A27B18E547B77AB0DD203BA47E66E3
B8932462C277481778614D372B043761D928D66FCB9D760D3096B5CAB2A1DD50
A23E443D8A30572DD2A12550B2D61B5B8D3DA00ECDF9FEBE424C8D607EF6BABA
6D1482E9C494671BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C6F27C5348D0
4809C49896E18909ECD6892BFD2B0D73A84B6E682E463E69702266FBCF04AC9A
0CAB64076EB9EA884B2F5A13400556D1D07217CE900C16506F570143710E9AEE
87EB93711F2A49C15DD57EA42ECA4E6E8D58BC4A195405629408224D07020749
9DF2F43E7D52E442E951CEB1C926563979CAD433B91341797AC8D4E9842A2025
15A73ADB4AEAA456ACCF3FA9FD5C0D7DE2197E5C96CA1E77BBDA711E73F6CF45
F31613A24A30023BEA9A207E8E4E119B5356CED765F73F6935478D5133B9E761
4922209C25478E0A63F78F3460EDD4F64B4D2A5B3E660B614F62A53AB284FAE1
FEB947C50CE8BE18F24922B066F392E4321F75C42A86C70CC8E4AE8F6F84FC65
3EAE2D03CBEBEDA67F83FA8F1322A68097441DA3511D8FE63394AA5E6B7F441A
D12126999FA71ECFDD70607C4FFA2A1D6C138C8A750A892DDAEF50284D2CEADF
C997B78F9AF18E63822DA479E4279465A6CBD43EB5B5DB8B72E96306900A09C9
002478AA31E4240F13D73182F04410A119C72285F06F1773BAEB6FC8CD2EAC6F
0799C903D18C64FE378916128CCEBF8943967A33F856A40BA5B302782175203C
082BC703ED67F8956F3C757799D61A801701C34E5F0311D00A7FF64F31505AAE
C9170516D38C247C25CC98E436D6B0129745977065519D41FEA05DE277A2B681
6846BF7BEEBF9D323B549CAD581F17DB11717FE745194FD74DDFA29EF38C14A7
D31F074565A14EB60996DCAA0762F3C701390274F4A233B7C21EABC56271E0D2
6F4D8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D51564ABBBFD16D44724C916
7C7F909DCEC3005810B42BD9CA1B33DDC4B3D69A6DDA20E104C5BAB68F3D943A
9B0E24B8327345DBD550F4D3A85FEB2007E09F408B6FB0408AEBF36BB9459C6F
41B3B4EE5B63571F18E7077F1990611E243FB8A327EFE9CBBBE8F9B76ABA9F6F
7335FDFC57213D5D25DAA9FF60D639DE068E6459B14ADFA9FA485D2B692C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1E40A4D3F1B93134816B1E636A2327F6
240BFF595E24EF8941707987E8E672F486552480FFE3D56EF1EC01FC6D827091
334762A700EE46CCFF0F8222069A239E9C090C056C50ED33CCDF1DC4CD54AF2B
27F3898D35DBACB95E33FD81D89FFDEA459395AEB1FD2A2313C4619C3924D6CB
4C7156FED518164901F83DF3BAA6A0ED3E1145BF13B94FD26442237EE2121C14
F116A1114838B333EF11ACBCEC26CB9945AA4F8F616FCC76E4B0D7BA8C76364C
F343FDCB3945F586BFB542B229FECFCD917788FCB6F16B6C1C40E3E00F45773D
C20480C8D6BB75756FFD8F5C7A6D66A69276CF920B7BEC2E368A095DC1E3A421
F0C532042E003906F07403A54AAA87A7CC1465CB48ABFD9A879E5B8A847E9323
2C034664E2C43DF499BE3810C38A4BA01A31B5C80138263B8E0DA1FCC4238D71
517DA16343332416C4BFE510F180C63CD039D399B1D9C4208BDE9F2A8208512E
1E9EB36A96421288D8A846DA9F3D3B8DC89359340E6D6E4BB80425136F59F84D
8B2D3548C5EA909142D33AE8B2BDCC9705D1EC8848293ECD9599CAADB700A176
76B96C607DC49759734D8F1EBBF10A7E363AFBA180CC2897C588A09FDB14647F
570BBEE55DC7F2AED3E75B7AAE70ADAA461BAE73B4CBBA029A5BD8AB7E658340
5263C510185BC34AAC67226177133AA7CD431BB67C5261595CA2A18E0FD97413
5F38D540014D38ED97AC4F6058C1B834BD195096C9A61145921EBA98A70B52C5
BCA89089361DA0D7AB8B979BD91DBF43FB52495F20DFBF159A58F3D4BCCF3638
857C25C73B78F5C35FF0DD1AE8036C3620836DA8BB5CE31BAA722DDB36BA5642
CE4110C57A3A4D95D4D5188EBD111ADAF13004B95BB6A1F91C919C28F67F64AA
534A2AF512C1F2BC5BEE9F21801512D2455DD4B94E0C5EF66E5F4252E5511A19
172AE7E16B6E84C13265E7A78843F80CD719C44633862B102690CA956190CC61
CEF424A54E62107D2ADA1C19405B9CB4C39694E52AAA56E56F82678A4327EB6C
A34EB5A6A8B1C41ECCB9418C1094CBAB96EE405DCF58E3A569DF07092225A683
511770EAC39ED55DADB32778CAE943CE6E928D5C8A44F0B691350DC0E4B38E4B
5B5868A34E643E6075C7A82C17F569049E4A119632C47683095845CE5281573D
CCA18F596C2A638DFA3A2A0E4088072A3C9E36431D9A9656D60135F7B7941CCD
EA0BC0168ADAE8A1716BCAB61A1FBE56DE145488C0306C6EE589C2E71F0433B9
B8200015BEE977FEA781C3B8034170F9FCF6324AECC2554A56897CBF7F8B7139
ADF77EC4DA414C2CC5424CBACBFF09AB4F4962A697CA30668A1809DD72B71A4B
BF6C618A4EE64F0673FBCDF58BAD19C9CFA9D528D104702E4AD8F19711F44C14
87A8A062B0E7D307423CF2852AD05690FE1912DDF6CFDCB995609788A176928B
EB2B6E6007ACE26260537E178406C35173ADA131F8880C15E753D7BF2E4BC089
2953EAD550817FB700822EB157C4BE8DE18B2AC08FBC05291063120165B4379B
1A4DC9D967DBF6AE8C59B9584224CD65C6361095861A84EA1B7A991DD837F2E3
96EA1B598CDC2B459A81B19A090AA25E8D0036616784228ACBA46F5DDF43D3CA
439B4506CCFE90F24ED9CA8B3498FEDD429B1B1B8550F2219E7EF9CC64983581
38BF2645040109A3D2D98CB563D4CEB5C030A7D2F6DBF55063AB7EEC2FC100F1
26DBD977068AC186C94D6BDC3E849EABF685A634431D9FCCDFCB4A1195C76A6A
D5138A35588B794EF9FE03CDD26508432F9ACEEC0C86CE8744277F5C32166AB5
39082917BFF7EF652D589681C60B99DD4F132248742876953526D119551A8B29
CCFE9D9B35C9A04CDB15B160C3E2B285BBCFE14C06C490185488510704D87E32
41AB1B0AE52F898A234931F910D5DFE85FE2218C80C58E34DF3EA0718B7C8E2D
6511B059092391D17C997D66D0491D2D29CFA7F4C88869E2D53DB8DE6F4258E1
A49C6B865B75EAA21C02F7007978FF715C0E3EF03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE1FCA3BF72DB85657F4A3558D4585AD1918E86DAACB86231F261
EBA0BB60C59D40F48DF92AF2EB6EC67815D27BA9BB672751D8A658C45E07B955
8E776E94EC0991B31A4BE92420B6D9F5E6FA1855513B7131C7A04B00038E48F3
936442CB14BD2C5658C938BC685FADEC8C6514A728C83D7E00DFD4EDBF4044F0
E247D957956045B16131155F4296C5D97BC3D1F1C93A6E82767543FEF3277C1D
AC4869CFA865B49FAFAEE9506D2F10DEE673E177D6279ABFFF8E757851AA4497
5855AB9D1E3310DC01B08B5CAB5346609FCB048910F3D70211659CDBCE05F073
3AF96804623A11636472F5845AF507C8EBA6518215D75034119AF4A4A9D8A9F9
24028ED77937B477662CCCE77BADAA08B20B9392171DBF9964BBEC03013F324B
D4B1E3053E4E12EF73AD5B6DC764101CD4CBC3FC2A4F1010CC1DE442DDC48044
4449DB76A321ED1517E750F551AAC934621B52AC90EE56F9DEE0666C2484BBCE
C64AC7004C28C6681794C0E2CA89BB581FF57DDBFF7865063A2AFC57C76819BE
9B78D0F4DD3B3B23D69A58E2C82C1981EB8E18B5EE80058433952B6985256120
82298F0E6E36968C8C0932BA0E02AA42C71D9E27302A88E52BB8B1924F057B9A
498D69CCFBFE7E3062895E706E20DE8096399754FB32677CFC456E5CBE116BC3
DFC67B18E95621D03FAEE1831A15D5205891AF008F869D7AF5E4EF1989FD377E
9724F1BD2A06FC203245246BE57408FCC7B3586AEF5F4BDD49CBC31AA72B65C3
BBEF8EDD9B4EEC32CD7D3C7C2FEC51FE0DA9A33F1C12A392750F3D1D4FE99AF4
D9A1772129A3C3490B8B4529805E0E306E95001663F0EE156891E1537A7E03BD
98EE97FA23D768F48EA462E9C8ADE136814E40E9494038C8C4146D9E400A2CF7
0467645A2898C551E43963ACD7E7868CAA4488EE815D40E28CA54BDEF9122801
8A6DF526D5C66A9F11AEC07A100C7CCF00A1BBB7177AD139137E1E992023356C
5C546DEE5401E08A00FD38A70551FF9C8A68CEEEC3E24A8A8D78F1B9CA757727
B2A7D3A46798F5F975A2784717BCE6E4D0B66E0000BA7FDB864CFE04BD7CE607
0FC5EF576B1DE985AAAC8126AEABC40B64A430C0AA868759E4C0A2689D828D2B
468A3858BB337F0E6842EC5D9C0D5D2596ACBE7E4BB9B5198903BEE40A9F1FEE
2CE3375D67D77D11B92C07A9CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADD
DA75ABA8C339C5AAB51AB884232E9D200A40A68E4799E5E842BFA51FFFCEAE9E
1A97661A47326B6308D41B37E844E66954DA9032B1333396FD545000E364E7E6
A79BD95977419E006D51A92C2CF0046A5F542DBC264C611E8BD569D4E7894668
52BDABAADD6B9E6E1B71655C46DE2F505615AB470D93AC31E7FC99288D9FB5EB
919A1D92B466676E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE8A29332C5
DA24457DF7F2AFBA61F8B754C7582A8C089F5553B7617187C50EE0D0D7941F08
41112068656190221491CAE0922A3C733FB9D45F81757CFC8ED6BAB5630EDD86
4ECFE0D6959D5114EAAF1612C970CAA2C9472CA9736B50613961F9E542A99E1E
9EAB27BEF2BCF74FB40E6263AD649C32D00F99B504DD1602FBCC202CC8046C60
9E8D29EB8FCDA4F0323901508EC6D0D3A034E320755C9FBA42428460AC283786
C0E4C0F45DA2C8C78EE355C3B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2719BC14013E7859D68CDF0BDCFE954601924C473B761EA72FE8B82C2A961083
82D4DE8073A483A2C65E3AACDF4106A11D6366AF685F88D99F32705FFB5C3190
91904AA6F8C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE6ACF6E51395ED67
AD441581D7A43EC3324CFF3DAB7E17D9D291D0CF9CB9086D116D56152BCE3296
95FE8A830CCF318CF0DDD078FF2E319A37EB5CEFDBF36492D265A24D538031F5
D1B00F3C41E627B1DB9876EE658C50AB2BD9D2B92C897D83ABBA76105BFF7E79
29B8B36A0F3C3F8378B427A87086EA10A597E1623529F8734C0E096F1BCE149F
8B0F4C80FD9ED2073D21FF50B841774BC20AA8870AA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6ED0358B085054144022BE6620E3BE3BCFF07C029D465A074
684244F63F8367906C7C4648EF33244ECEF4405FCD839685C2BD7D5FC1353416
8DDBA44083519C586F6BCA610DA67BCBB18285BD9C0C838711A76C5B5D57F356
EA414904DCBB1C1FF12E5BFED5253156E3A76B45CE938395E129746ACA103A34
C38A7E6808E1BA082060EE975BBEE0EE2360D53A6C2EB0393A21C2984E95892F
8AB221D586720A71FAFBE2C80951B24AAACDF129B2BB843A35372A2FAE18AFAC
C74586D3DD54067F7779D9DA069D7897314C617685D05AE401C710E8EC03A64D
8C462D8E458ED29A12F56A9D3FC1A5A59BB391F99ED1BC64F8850BD7F2551F3C
144EC0BFA8529787A6F7E7F29C2C9D31F4094F9E218E053ED37FBC0EB204AAD2
53FF338FEC59B284251A985F7377BEAA49275B5E62BC871BCFAE9AB64224D592
847AE57C85675CF04BFD1410B56E616F68C39FF5608FEAEC6E72A40B22AB733D
F071D6B92B62F165192F48C0198F2957A103CB2F0D1F55AA122628853277D256
C2107390CC3E2D2BBEB1220329E86A68680D1F9DA963B401CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A137AEAE50529E1F15174DF4AE9067EC4E67725672D65
4D5081FCF2663644C985191135F0156722F0BF1DFACDE24649CA49CBA47F93F0
201678944115499724D8B9052FB4F6E0375B8F8640A75773638943DE96B8C4EA
EC254CBA1E05D8C31B9C3178133782ACD3465C5CA2D45C688F3CDDED343F64C6
CAC65D8218E75ECDA7292A0F2FBB4F6B9DA8379C3AADF23AB9DC687ACA989BF8
6F24F23F6F74F71AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C3EDBAED08
9845046259EA79899713DD1E567F28531E7B25EEE41EAC3D35A3AAF9348E13F1
671DB099C4BA1079D778A6FA8FA13E04D067B55F84954495EA3D40E2620204AD
69A42D29B4D95429C7651244276269FA385532E9B57F1C2D2652933D4F316B85
7DD80D0BF6EC0333F920B9031F7626389BD3E392CFB2EEDE173452C0642741F3
C72D84A0DB18152D56A72ECE236FD3A3914574309A3384CE66C909B7040538B5
E7DE80B6DE055DC28C1B394FBCEA0BDDFC44213AD960278AA498A967D890C295
77ED868877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA4E8A5DAE149F6483523
881EDF02DAEDAE3EE928160342AE6170A01E13666A84DFEBC5A5DC04BFB1D49B
F5BEB4A8F19D264A7F4B1C259E4B1010AC355CD9D1DD0C6F18999CC47EB3AAC7
B89EEEB9E2F9CFC6BCDFD9A438C10C8C604E64AB2F9488EA7B1344329A6DE47F
D59BF4A2987AD80BF0054F72ED0CA0451E5D8A813AD6697E53A43ACACCADDACB
20AB6BFCBDD95D322B8478B7485BE9C86F055D7217D0F46FDC29D08D6CD71B9E
1DE1C50C1C3C85C14940A830DDD392F93F6CE1294B62411E6DF77D4A4A4D889F
D9D7A6AC1A896380F2762679E60FA6E763176E1B2512B04580233972D9211954
9CBE53B0896667EC7ED9C97F909B8B374E4975E93D9FD32DFA0AE84699D182CF
6C029A8E6564460CBE4D5EE06C24C4F502E4EB602446673621049928B01E78C6
FC5FC52B1CB9BBE02BB81F2886C558B9F2EB0504A2F8002B1B13E2A496759FF4
2496772170C511EE704B4308A3727F64393E392FB6E0369BEFA855C8CF4E76AE
27517A9B3ACEEE42F3101F44998749B33FFFB35AD715BB0DCDBB2D35B51730CB
8CC9D14A39917EA3055C85D171C0378299712D1177AA7469F470279E73A0EB1F
BE7B70C8CE0AE57426572795B0826AC0D3E445C98DBCFBB63EAE33B6E75C7E71
157123DE44DE684057683F923A2126FE2A788552F7A3483384B6E646EC0415CF
6D4002CD9FA8779392B0A780E97EEBD2450DDD1ABDBA993B98A90E50CBF66121
08A4F43DBE0FE09467C33DA6A1C61F02BC5847C65C187E5B23DEC4C625C286EB
9AC7E30F0BEE1991402F2BC62D606C038AF2B098A79351897E7B6222B6D73635
3AC4E3D4C203CC50342491D2F70A528226650D38258FE2EADA6E4E1D582F4723
F2143CD07E0E6958254B6D96C9E5485E26B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA0AFCC480F261D7CE694477F749F82E5B4AFFE12BA90C032157C7688
7E325784917AE505A158C5B3D37C1041ECCA0BA811777B5019CCAC36997DFE14
2D7DD000A0E766DFE0F272E311047B6227781696AD545FBE5A80E2A32D7F8462
912966E9E97A67D036FCC3FC5375A979B78F473EE7AF6AFC189BF5E14FD0D21D
656B3EF50D47E923F43BEA1BE16CC04EB2A966CBF4FE707BC7472D56ED0C13A9
66448345074B1F2C00C537A79FFCBB1A784959B43E58965C260A89E7E3BB7ADE
BA9C882AAEE60A026DA25D51A46651A1EE03A2CA61DE42D78AEF016749873529
5CFFA292D5B7A1FADD93BD3CC207D8623EB59F6B3FDF302403A9C2D794743851
18652EB37CB7021F80792262A4D2F354389D1ADE3C1E4BA1EB8855BBFECA191D
4B80212DECEE21CB16BE0DD2A5B6AE12B959415091545A96B78F6F4DDB5CDAB0
611B3248836DD9E54650EE2D2F3EB92489594667525BAF1656DE0175464EE264
860B6E310854C80BEC744D529624024E35566FF0EF71D60ABD9581F43AFD7EE4
A7099844282972DDAB121A040D3D7CC97870F88C3874BD5C497F391141F2094F
8EAB4CC90B12E10F8AE6DC2081CC4C4860CBC1DC3427060C9118E755156C02A9
9A7EF38084D649289E4600F5A67256788F406EFD36886F531DB9D7ECA48701B5
D4511FF86644AE56F46392D5804039C0FF5C49D1AD996A67AB0914D83D859C06
AA049CA26AAE7F316592E7DE134F775A835D46A69D1C4BBD6B53124D7433EEB4
4C724ED69C8697D06A5246DF0C49444B5390076A43C82C91B982B19D7AA8B615
16F4BE3585A899E98988CAFF8DCCEBF494D5676912D5E868E3877779F910B174
AF933326ABB47935AC900487A2273F6AA2BF735C312FEA9A1AC7289E4B43B953
D2EC568761231C3119E073DB7DEED7DC4A04968B69F792644FA8B627CF923CFD
F8CAF8B9C8FB9AC27C8F2C2F86FEEE11AA06BBC0027C40E0F9DE9385F79D5989
98FCADE704A1035C780BD03AF71BAE6A930CD02B6C4D07D6D0998EA18EC7CBE2
73105CE6378A2ED913F14D20C272D14060533ADF2FAB44A60E6395AF687EC88E
429815282D632366039F37D3D55E93A63A397B46FBB2B6757DD564C0BF55E0AC
8EC66E031CE51B2D7D27AB41A21D646C236DDEEF1A23DA64A61F0DBF36B86A59
893F277DDD906E28FFFDFAD7E4B7610E6A108DE7F71F178FC7448D4C2E985072
E0811881511DDFA4A3C730DD7CF5C1E29104673D7270F35D580E8F3BA9BC94F1
31ED0110C946D421B42532E5BD4FE3D8B242EDF647251781ED6CE249DEDCA4A1
FC94E0ACCAB225D733E123302C0C9B054E97386886E8AB5D03167D702466832B
32DC035DFAF601E2EB6615E116FA9A44B8D0586FACDA34A0D0DC74662C3F4FA1
736A4D67CE0650766E29A79AD6ACAE003485A4C21B389F45F8022593DF513D31
54E07738A2E39D6AC9429F1A359112CA28BD92DC4EDA5C72C6F813D53F1E9C37
34B81C2CB5207702A9A0194F0DA8D335635EE2174E2DB99DAE9AF89BEE304763
BBA1AA81F9D74B24FA7EACEFBCAC72DA4AF7C3A7C06483A7FE49E9118C94F79A
DB280E5CC383595D57C51F4C969C464C1CB1712283C42A77AE7874BD4EE0AB63
64E2FA747EE9A89161F93F178D7A24AB2C747B80BDF0816DA99795CA28792796
8E85C3FE71046BF6F87A97CD03FB8CB1FA267164742287C9F05BAB96F90F2374
8B2DA4315C703763D6B35A4836A2AA71B39B7AF614B09A3D9FE54E8B1AADF323
785074E2F023CF26547355053A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3E
2ECFC061F2F9BAAF636F17EB88960EA70F1F0F037DDF2061921A72E46589CC08
EA87EECFDF36B819B07306C00D700345CA2E6113E992D2BE44DD9B12DA394FF3
5F44EFD4D133019C4ADC916AA6F4F5FE8A642DA2E54F42220C01688C94717B2F
1204BBE9A32B02C569FE47B75784AF1D9300E4D8EC13C0B542DB50991CB26D44
DFA0957D4DD0665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E0D981C2149AB5
368FF41481D6B8DE8662E73CAE558AC3FDD6C48D353FC68A77014365407D48C1
350E58ECA8C0532F762F64A11900664ED4E6D4DAFDF0C64F9446C356216312C5
F614AAEE0D8590A3A26854ED51C4A9A1C13E40363B10533A8BE1080729D86FEA
A2193FA6D6C34422C34643DA9557ADE417810A48AA2D73D0E0E9674BD4C83958
81C15ACFCEBD5772A959E2C99D13BA11BFAFF1112E2CCB84677CE03DA00972FD
3106F8FB5AEA60ACB194FB8FD49395A70058C942F80C2313118CDFEFF258E569
E39372E34E3FF5AD87298C696722D1D562D4A8478555769EC2C44150D849A0C7
D966B2EE653CDBDBE9C8F352887F8DB03D70F9E692F0A5A3160110CD4097E3E1
FFD0B18758DF9ADE231B76140270F0A05D53FD964DF5CB87A377ADBF202718B9
E47B1DB784435B7EDEA4BD19388DDF3C5B474F5374D80D469AED90BA08D8A04E
A2CF32810C68ABDAE536D95D46BCDAAFAA5A8301F7DDCD3BFE10B6C23F1C7ACA
39A6117CE4DB91E197AE348634BF44B2108CE10CCBFA1B838169A4577A9B225A
BF538D4B10A9C5FDC801B144AF82BBCCC3E63B027A4C3070D38586C67E8A16C5
60DBC0D4941CB6DF6A0D1E7492A6DE009C0F464678859A03070758C38629FC34
410FAEDB24E5DA8ABA2868658526B74727FCB164F21405F988059A1BCCE6038D
184DC74E2E186A664391B7B84E2281ABBAB44B8B81D92F63481CCEFBF4264ED8
900D17D9632421541DC60BB39BB060ED6495AE98F6798010F76FBF67CA47E5CE
09E60F0839874318C8389E298F554671CE327B099B0AB9BDB8192271B478CE0B
38151243D996CA5AEF4354211E3953CD7AD90239C1FFCA061A21652100B8E2F3
DCA6DAAB758BD7FA7D29C266129C91A2A5804ABE9DBD230FB37711C0E606B1CD
01AF00122F9A948F54FDFAC13A9C437607321D3E4C10059C1091823B03DC61BD
809BB14C7D4FD2C4E6057BE5F5C51A242002726250A2AB4E8AC7F70BCD0AEE3C
4CCE6E1793589423B942DFF7E8267BE5FCB0B209B090009718A49C6D7256EBE0
D843690DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E2C44D18720A9F9D707C
9D341698A75314282E4770738AE96FBE5811DD097EB0065B1E01ABF5E2D8428D
248B16047FD72F0059E35DFEF5A8F444C41D300E540D53723F45F0E20277695C
CC2E54A25041A959AC738AB6CDEA6486B7EB9914CE42558ABC90B623AFF1FA2C
B3EE64202FB703CBE8249A14C37B54C54CD69DAD2A5C2183103109D6F82129B1
301EE091D9F7A4D345114235F4BA289528C04940A830DDD392F93F6CE1294B62
411E6DF77D4A4B7EEDDB6330756507D8BDB3F97266E6A31040AE138A8469E758
4D0670E527BC95332D13B3980549FA02073BC0A45FD5AD5AA0468323052D1205
BBE6E794D7FC7861CC42DCDDDD4A4A3EA5B0A1FA84E55ECA7617A4112459597B
716E81960CC0321BF3AC8193758B4610EF33F894F09C9ADB7C4531253BFAD318
0DBDF8DEA31BD5BB3282B15C22014FBA359AB5BFF346F5DDB0BD589A54893931
D3F46EC04582CAC86BBA5E5E515335B3ACA75A5A7E5F16E27E8CBF4128859E2E
97D48C02844AB8D43C84FB19D8B311E2E8146C7D3D076F43B3F9EA8A848D7E8D
0E219B61F71B5D50F4DFB79975EAD0E794E842C213CB237B187A7B54F41B5443
3526B5BCF13D2DF1472686B200B23FCE6AC13FAE056EA1B304C5FA713A88B4EB
663FD7959C6D491010F976D4C7EA2FA6C18E22DD503E8981DB670CF5CBD09E17
6E265CF148A20091BA8B06B993088E210C91279AAD5922A3546551F93A076B39
3E4219E0EF172C72ADE99EA91ED60447A31981F8F13BDB8CCAC4361557D938FC
4AEAEA9E88AA0FF61ED04C6C105F0258CE2084F898D7571091B18B212D48B43D
6007AF07A0FDB7C9FBC784A1C9E0506142709DA99718F36F909299F3C570E743
FBB19F4F841939609B3A3D2D388DA4DB9FFD25C55A4F377E53B352830FA336B8
CDA7B5752C68FC0637C661E3ECCBB47543C20271E2233F7FBDA8094346C06AF0
1FF1D4784AD33491DBFB17AA6A4C7C8B2518C12DD5F849263DA8B6B2C38E4741
21239515E3E3BC6B36475154CACD25A07C74FEAA2928802611B05C9CA0ECCDCD
40CE7AC49715D8BD0A6803D8B14E755118F43CE13E54945B0A6BCB5633B1D580
346D913BACDF1DA8EE9EDC8540FA56F817D5C135D554004829A6E4566D3C3D4F
50453B4C997ED2C8725BFB415A30E47844548A823BCD7D0D5F3A1B0B5789DB78
6BD92416107B1E59084B5F758E509DE66F112F49E63A16F60B6795CF0D93839A
E2FB6D0B74207F0434C9599D055D786DC25523AF3CDCD9D834D54D210461A17D
F138F3D9F5C7AF9CED4243271A1FE1B018462BEBE17138AA07373412B44023BA
4E204AF4BF3AD6DC4CF005D393672AF65F0D015C86E975DA6622238B837FDE02
71B310BDB076E1E5D2187136E1E88EEDCACC0DC5B4F3268A8831F3391A7B2A17
E1A8397AD1D30455CE9BCFB29BFE08071774366804FA232E4AE9688E40E61987
035623AB8DDEC101D55543FB93BA5928AAADEC03C130570142D6849BC5B3D044
5B30D984FBAF9F56E6FACF7C07F249FC058275A863D921A182DC7C205A93ADC9
40D3EDD5D675EE14CA60D33D1C57855BBEF5F5B024656B80578308ADA3B73C7D
92DFFA19F1A79AC9BDD3F2F88D9725FCEA44A75FEA44CE4C991729C5792E1052
A4216B17742ED304B2996DC77BEA528DD00039AA51261D5401AB2ABD3C25D5C9
A2FA8C392A82F8DC836C8E33A5B5A2FE1B6C18912CECB8E244A91E1AD8064357
046BF2F498400D6D7DC137A904C96EB7B3CA2E65F64E840DCF69234B15780303
EFD10F9B6887E40A5D78E6B1EF8305A4FCE9C00A5845D1C7E8F51710B4F1A4DB
D8E6BC200679470F5503B71479FD9AC22E7818EF7BA80719844ED6735C3EB876
E244D5CDFE745A089F2679B720C105764DA0F3744E683F88050A9CC76AD73A11
DD873632665A06A2D13141E35806D8F53E8F34D70DF5C324DEB566724FCB712F
E0BF7EC9416F02C2C3116926FBA26021B38D6E21AB7875CCA19E45CF37211113
56D1F3E208CC54E7684A70232F0EF82F448559F8CB85DD9909A74AD694DD99A2
3A6BF1BBDD51D96BA4A5207AF1044E917186B01F946EE08ECE7455EDEA610D0F
B69A58D32F41B39AF49EB624CAA6C346A08DBE65B1C054C0587AFB35100BC76C
C64E05B36DD4226A16A7822E6D523A4B3970F587F38A0E89A05611B3A13BD144
BDFA564DABA6CEAF8A444AA157E95381808E974D7CD402B571D2CD823D1E7014
31809B56C504BDB1B7D50B99310A0DAF0C020C04EF94D0D2D096B734CE3721C3
71C213B6AFA0E73C0622E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DFA0
F0D5FF99461F3A9DA8509E7EE6AB98B4BB88F67796EF2B133E9F6AAE0CDA18F2
428EACE52EE14B5FE74DE6D3E114246049948C187FABF401324F9989DB792F77
814729157208E3B37B9CE3F1D0C616D951BA702DBBFC2C1B953BFC6CCA78DB0C
094BC82EC4F0BC92833AEBC6E11B70E1C0F3A18E54817F7BDD3895DF79E9BE61
9F55E9CEE03B1AAC8C7642DA07EF2F28988112405F80F2BC8A63F2CF41C075C4
DF19A0F0AD8A46F5BCC2BA12C4D68D803B840ACF32FFBFD9E8DC6ED9FA9FF379
C70C8E439578725B3F51746691838E600146F6C88E1BE994C9B91F45C562A5BE
309D5D926AE5C673625845E1981A3316F98A77F4D100499847E1102CC075FA12
10881D95D6EB2E7C492BC58C366F903F717C1A9A37719070DB1E340FB5AE3AB8
F380A19F5FDCDCFB687120DD2BE5305363019BEC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFA77D83480566E36545DAB1BB0423C34755F88AD24878354F7
52B9EA1278E210D305677B9A4739C67ACF82AAC653B48D8D7589DAF8148D380D
77F8E7DE4DAE00D18C95C7E50A7AD744042B565746C211F30813630C7EE7DC31
054612907A0811E8EC4075D24EB0682E7602CC252BA8AC0287850F9073E30FAC
A80736C0BF828DC7E5A8F8F4569CBA4C2C3F91912C485C5DAC43C435E2F5527D
647EFABA9D63753FAB6F4BF4D7B35D01E3A198153B354914BA8E4C0BAC128B7D
4D61C2AA87093F0D9188350856B6E34E1109B826A3F23AEBD548E10C71A93759
6710EBCD5651DFA0566AF29195C653FA085F712258B8A1B9AABB8A860492155A
DDA8E704EC5CFDF86D3B00CA7934C295363D8ADB04340CB71315D89A0A06D4C8
C61AEF51A2BD2410FF027C40E0F9DE9385F79D598998FCADE704A100379B7D9E
02960F7C0D013CCE063154E006EC3DBFD9106F331F128C794D9D6EF7E18E8301
0405CAA3AF558B2772A5EB6C07862D3090AC8A81D8019BF968EE312103282494
D6472D885F3CFAD49B63B96DA5105CEC17F4DE04D7DB69822968706EB94D1720
FB2879E596D3A7EF942D50173D24763E96F2C385B9F9C34E0382F02EB8C8BF9D
3BACA0FAB8F42D90434A48E3F4993DDF5FDF93C9E21FAF162C920C27726380FB
D329D29ADDF290883487CA328A0102AF3247216D8F96EBD8D1EC18D48FEB29E9
68BEDA93F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DA29E095CCD0114C8B
49875196489903BAEB958166DA9C2088BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE81832A9157AF1175AB47229D0F348EA969DF366D3E164E497528F422
DFFD3B72A168E84519D138C233FED4D468568036B06C33F7273ADF8875EA0E53
899CAA8CCD652C4D5F26A7E0A25B9C7C4F5C4199F13DACC7D8F943E964B009D7
64D79C3C26CF9EFBA94B4FBF6CFE9C75C0F505BE6261EB9A2CB750BE2E146ECB
DD16A1584F3EA2AB3D9A3783D8743C3597C357ABD25D6B8DCB78E81FB5B8D5C7
0217AA3648ADD641A983CA3BCD930955DFBE0DA8B9619E7108A8EAA94000C80C
AB2AD7ACA1D2D0827EFFDD05D4EDE9C2B589686F3F263BC002C8884F38F3BB6E
09768DA7EB3BC1496E363543F04DE5B6F6A9812C7757E990268FFAEFB175466B
422BCC69E8B69400CDE8AE2CF394292067CCAF4F4E32669BE217C096E518A781
20259FE222179A0B410CEF30DD249F2A5D23E5E47C9ECD23288E6C069F496C57
3ED18C446A9892616611F8E6172063E0FCB7C1518524619525DAD95ED33B70A2
CB2356886E9B27AFB10DB195E5EDDB1006AE12755599CF67E27E753AD25C1FC7
5E2D35E33B794FD8F19F03162747FB4086DE7B1C1C800BFD4F229399392038EF
1BF9E659792F783316889221A826EC20ACFEE1E14ED854D3DED0148890086099
5F1623CF43A1C00109AF4F59B91B71B9682CE60E17947EB7915938EEC8A66836
140F02D324C7B4B70BED56A8FF4C1A2EAAAFDAE8BBB5E8E952B17C07E69BBE73
C205BC659E191366CDCFD2BD52526414BE2E70272CE823A43FB0D77B53B2866E
7F21C96896DA4DEE11C94AB03CA1A32018C4B034272D9B8876DAF47EF08D2DB5
D2936909F3E8BA0936E751B73E754A73DF6685DE51FD6A9989881AC4465318DB
FF9E0E5E13435B4A830B5E77C42EE8E41CD5CA9BD0C6E714DAA34F8DC7594332
E895054E5FD3DF1EA44126CCC0345812AFE08FC784E7C4C4287D887EBAC1683A
8CE358ED73989053E0F420D2D4A09E9CFB29726F821A7787E5F817FB905AB350
D466B4D20EE18B679FC1AA857C307C4D2AB54597F47496C8889CF6CF6C6E377D
41AA9E983FF07D8B6356917744AFA6F67477386B69D3DE885AE1F8B52B0FC756
5D358E8D01FC5A9066DBE8E1FE86726B646E864416CF2B7E1E9366A136B9837C
80FB068B3D2290FDC35C286E35763A02A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DB601601B011F527AAC3DFA31A51A29C8C564D
794FDAA23AD6B4540055EC4403642C9A62E6138192E19652A050AC81B2D1D4CE
B9E40F7A0C351F8C72E4CBC21733BDE3623932A66FAC82D253D8251331B62150
06FB1CC2CF016E6BCC1D7732019B86C11D799B79F33BB09CB6771F637BEE71E6
FA1A18E90331A61A3162ED7589B05BF937ADBEC739FD624F6763A3B951E33C7E
F5F1AB73604DFCC2AAE3C9DAB3E303F8B56D1161CAF14DC202B636DB484CCA84
03197D7542BC10E7F9CF2FDDFE83B006FE1A6D13C6312FFAE07D32B62AEA32B5
8B8D127C00F3B953CDA49BBEB1B913570A51B2F96D302EF8913C6BB60B5D3924
78A32E11CECAEAFB7D4C6127C4A26EAC47FC77E895E36ECD8881C06314B93496
2984C7FE400CCA5A5007E9E2A5E16116D8483EC235D20B206326C7E4FB54256D
88CC4BD4DC84B5EEFE217BE0B436583B1D92B5C563266755B07C1E9658B8DA9F
48C8E10FB7F29D1EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA5D9EA54F207
742D31C0B69DDD41BA88727A80869626C7998F17B7D86D4D6F2D1C5324484C73
C05C61C3CCBDF28D048F84AA23178B60E4042034918287418FB5133B36447469
4193A44EE745F76035D5073240736B4F1BCE96F57A97F831842958E6B6517018
BFDBDC3423CF739AC5B38303C3D4DF196C462C8742A5F062F69B935148E81C55
7C4E1B77F5441CDA5FCF63459352EAD6B4A2A666CC5D85855641CB31507D0100
B13895988AD2D1F4DC2FB40840A0CA3622532561939CA66F3375B5C3CC39D956
0C010A1363F725ED71E3442C0A00DD938476920CF67869A9DDF5A299FBC13BD0
1C6450DBD0DE1D9CD163520429734028AA2CB185F711441471ED972022B4D84C
F007C1D9B1D7E625D684C53723CEDC5E42A4D17F35791CD367DFB3078ACB6507
E89B97158EADF677C788A0FFC3EEB38D5ABCA560E04852E7DBC79C2DC8561F80
5C0DA1E125B17E572A8DB0D0565F05E271CF122E3770490B395E4DC4AD00B46C
36448FE2DB35CB45276DFB339097E9EF935AE0DE2D8839376A78D70FA44F1974
ABA413D7143EE4742916BEAE0D21F24A3E4D146DEBD198727ECFF842EF5F146D
57D0287D62D1A34793E173D032F71193B2E2990ECE96EF6D712B4FD780875393
92EA302BFF0EAC108829820238728C6305754EF0BDCC8B7204CBBC597F2F9C95
9B69948674FA133F77935F24EF5D7522B401F3A783BF474B153533C05AF2DF8D
DA960CEED2FF28FF48234265B4759B50D24BD711DAC557EF4F768148C131B265
25D173F07ADFE2C2AAF32AA0B556EEE562106998F7FBFAF7313B1FA589C0DD6C
A9B5A8D9DDD843E6E80330277D6DD2356D80BC6180F2E924BAEABAA6E2628007
B37A2029F3D9F5E1728F408B89D85806D6A6AD7618A93DC4A85C4076A95944ED
748D1BA12F86DCE859F1F48AC037F26DEDB1C48ABA2768E9177E799855334DAC
3760EA1B589B5562F3D48655DACF49BA37A4AE429B79608716438BD99613EC67
5F40200FE34CEC934F99C14E909440B5457AE7487221179B9885F7A063D99B45
1BFD666E82909A1D82572176422757988D43159FD814DAF574818FC2CBB20431
9D5AC85C1B43EB9623DB369D2E0217DE72D65B0B051B0CAF9FBB9BF6FBD49BB6
7E0D942F8A6C4128F6504B102B0745FE0B75AC33767B7F328A8E8E537444EA52
7D0ADCC055264CF38070833FE36F3E9E75ED639A567075C6FD56077C00902CA6
AAF0C12EB5696A397E624F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA99ED5
3039A1BFEA1C40DC1AEA90C0959232198D1F4E26CA8339782ACB8A908C5E7CE6
98479ABD173B95479825415B084F754454ACBF44DCF4961F68DBB06449776DAF
07138F356959B8327FAA6CD71CE5EC69F97CCC84646C78399E063C0AAF44775E
6D1570F08B3085066DB8C38AFFAB5CBEBC7567A0330E68DBACCE1DBF6D7A0ADE
9BF8F8AC548AFDFF12971C763213CD781D208D0E5BBB31FA3647D2B0AA7E0124
3B0C3964184341D8D1ABFDDAE449FE68185327170B046B27F59EF54E9FB7783C
8A81FCC602CCD47F4BFD25E5D4B24CABEDE1436754701F9823D97F39E01DFCD7
F73BDC4069607F52F09F53B087A3E5284B1C41859808C27C7DFDF4D22DCC6CAD
9D6A335B2BCFA6D000A7C579EA6EFFE9BBC688FC7FB98005BF250E91BF91F719
E5568DA27D69EFC526F59DABA970CB94B8CBACF31A8EBD8AB754A936A7F9A209
8050930339C0DB023D08E568308EA1D4D5663E33173E5C99CB752EB3EEB45A26
663E123B8852CA9D2E0F4A930BEDB6F4CE046EE0A9BB4FDDFA475AD631D13A80
2CB7B6D960A86183FAAAA649948FB3F0D55900D5F58F37B8866DE8F3052007F9
104EED7A5DDFC7AC37A6D9E49F46CA0B3AAE98A934A36CCDE8EDA8362FE97F20
9BA574B5D5D039A77BA46591F6E45F73DCA2513811A6517DBDFD7D818F48E683
5C26FC0C7682845F3E4266B7D327312EFB770916FBA0C65A20305AA1A087B1CC
97528D5088D1E07DE9A23C9D41F23C77C5072809B2819B32478FD58A974363AA
8F4D622C39534F12614E0DF155D72F1EB25082796DC38497B4850BDD181EB8A9
6ABE64730301A06C16A74FE25A3C3068A83A513556D05359A393B6C6929BADBE
97502F351D81614CD73E27F230046F89E913D02B0326F68EDD3146F069085199
CC16681FED2AD0A7B141001A3FC4C5D21126A66592F51AB6DEC1CD3393B65C2B
CC478177F585F15CD2912847D0F53FF2986C63691FDB76EAD40D9798E28E803B
BDDE19EB95FB140A227DF24CCB36C662C7BB5E8F7DA664D1CEC437E17D6BF29D
BA2BFA67306C1B77FBCE256EA412CD417BC3BB4B243FC3A0CAE847B3AD58CBE7
B8C5C86283EB434163C89CE51D484F7E49765600A125D6DD423540B78E744459
2036A2427850EBD6C17EF1545EEE457EAEFDAABEAD2039060F8B6BB4C28AB1B9
A5AAFB7FB945AA4671A6A97BD8C6807C21360D0C3F7742F47CBC27562830521A
7BE2EF1D993F75619EAC1B3A7A43761856730BA49A3260BA0E094D9116F8D9C6
46740F45157716658C23144649A72A043685E0A6F25531307FA0CB5148358692
A287F5074A8C01BA5518911789F7767BD4551B1A301528C4F0C5008F19618E63
B50C60FBA08F6449B676DDFF2B9DAB14A41206C3350B9DFC1DEC1CA57547928E
BF55EC09503BF1AFD89227A574BD8D6F6283BF7C4A30EFD29711B655EFC1D0C9
7D2013FEF325C6AE3E80A85C51C348C4421CD919741ECA9308D44A93D148900E
639B80E097183869EF2B04A9864319494CA4A0C65C626C8D85318F2172FC810D
86604C883BCDADDB6EF52427E0B2AD46BEE7C595B123A580A6D198644049DED1
2F4BC683D65023E725D41D2B5EE0C3F03A603A161713216AF97847649B2414EE
D3E50445B7E8B881265EF41110CB02E0299D9A5F87ED3D870BEE3C9F8692AF81
C932BBBE93F4D7DEDF2BE90A92E2F1DBDDCEB0B89F8B1D06278E80D3FA0C417B
18667B975BF873F4BEA9022072655ECB43985151ED1A79961C8A15842664D3F1
345CD967A08A9C8B9E211A9E9B87F2B03692C75CF5492D88F2CBBB332B72A579
8B4018CA0C7AF81DAF1E403F552653EC2A9E090C9283EE3BB7AB14D465CB0E4F
622144E415EA54E08AF58B657DD5435CF699EFFC1E7C2FF53F19060E6B43DFB6
F4E15361250C0812522FC5B9B91480D75B36CEF1F23D7BC3090F06E79A8BE6B9
EC347BED7AC15B9A3B0CAF7FE04A0F8437230CDE952ACF0B7724B8566FA6A7FC
11A16569177D6B1C7CE23E57FE0C75E666E589115090897416063D0E0A5D8F4A
502A3CAEC235BC863688B43E45786255A4DC7DD81BCB77EE94BE83EB86DAF47C
A940706D4B043040AA2E719D7162E1D8E2B8FB0DF6B5FB6D5C415495635BDFF7
98B08ABE99A926B3C76160D8DA7321E6D222C9572BDC4DCDBE60531F3E2F1438
FF2C98CFBED9D1B87A8DC71DD683C751A05A901D8B991528CC1ED3B30CDE23A0
7FFBB710299DF131C6A1AFFC9A0D7FF6D0C3F6913518950F8F70AF80E85AEADA
1D290708A8224C649D3021CBAB14E5865FA23178989638A37897AA769D74E0B3
A299DD94B3166E89CE6444A7951CD669008776A1720790B0B6722BE6321A3BEE
244542BFD2849D498C239237ECDCB23458C7C47AC712C9A80195D4C3A837404D
1729BF073E5071C02CBEAA14D7E4EA34B5C7A8E7CB19D8F9ADB4ADEAAC8315CE
2B1B210FB1758BAC67E142C71165F916D18EEC3A45876CC27253A753D5452130
E42AF31A2AF987B5EF7FB5D8C75ADA3F1A5BA7A4B8A37DCC221CE80014F807A5
3945E21FB479495406AD98EC8C4702F89F660AD38ABB9AE811E6C73E3DF9C68D
D312B3C0056F607C2F368DC2FBB2303E5FC195A0EF7F6FF82303C2CC1B26C78B
74DA6A52A4DE356AEE007DC76BA91937FA1C7D5A6E4647A70CB32D9A9EA27963
86150978E1A02EC362C667544098AE47E5F9E0807326E43E39DA4FCC849CEB3A
4F4C4C1923F2E29BEC3089D1758362A9ACE305733BF769E7EAE2D38EA22941B1
A3B21AC52D8624E1FCA54BB577F401B4D232A8BA6A0A65031A149D067FE7D92A
8CD4A58FDE51DA3B8DB62C4BC7FF10650D49E7486937FE85441BC81BE35FB82C
B55C0E496FEC0A06A118378486833A1E887182873FD7866F5F8415EBE92E51E7
FF06486286BFCF71D9D041AFE0416F4F1A755E97F12D702630C4A395EE122450
0D4E89F4CD31A93C312EA46747304162396BC1061EA7062E1616C58AD50B9931
0A0DAF0C059E8B51F65DF4EB0148F58684E8DDD4641B79CE028D5120894FBB70
F3F5EFDA7CA047CE71B49325EFE87D508F9521FE45A04F184800733B13440F51
4AF796BCDD85942569D50F372F115C1C884CCBD37CFAA02E26CCD1364E09960E
9D2DC9BB700F2835120A72B7B067D0189C6EBFE1A2ED0957B2A13CCC8B93FF7B
C5FC7C7A37AE0523EDF1F59F7E0D39884C8625CB19AC00356E030FFD1FEAB98B
E44636F3AD561C22720C0C78F40D46FFD5B2E65606F1DE8DE275C09772522BDE
A38B0EA5D984D5835E64CF983C6A0FFCF2880D54A722D3F6B82E80C5C78220CF
ACFA2F2BD56F1F25312B41B125B4A46DA4550DB20C261AA37673E9760C57EAD7
CB37952D1A0E9F744FBE8041D4541009C916BAB4746FF9E2C557AC4504E3369E
3A3FAD69F16F708E3AC8167A29AFB37318ED3C46E96C974417FAD7191EFFC574
588DEC1E180341DC959F8EF56ED5B19E9B5E6F3636AAA62701259915BC2641DB
03EFBAC85D32D23D7202F1D8B438DEBAD3C2D45341B2285356FEFDC42CBF2C85
21AB6B8FC85ABE689B800B8365F09F8AD95CDBC816801ADBE116E0E90E6199B6
C6B3594E3B700623440924932C527FEC90A0764E9027D61CE5938B121C4B927D
CC5B62AAE47E6B8FB0144A861E53B3DFC6938DB166EBA8FE17289B0B15C33CAB
44E9461FB09B9B2CAD3189672A8F4CD9081D31AA56A0AA8C210753B55039C8E0
E7297770D868CC596E737A5234E91EA9C52A86F3935B748452CD70A67A06DC1E
B3F2B3C58FBD1B8C3709833272BCBEC7B18D4B6DA7E01BD17EA3C77D92FC02BC
0FEF3549801BF7518806C6D295955BB71395C43390497ED36781412DDEC40A9C
BECBF77993B27F23C4B9C00857476D69D3F84C44ED4CFFE889A9470690AFB8EC
FC15303CE44960F79D54863F75475E92B0411D53BC4FDD03A063245685F1500F
E9A95034D47818B8235920A92F4F2CF1F98E09E02E877A0218F8865BD95D620C
A9436FD811867CD72C3BD154AF9052CDC3205DB03D849D2D1EBE46A1C5FC0DAA
0822F331CCCD4B8DA3F4CBDF92D8C05159F71C28D97F1EE6A630FEAA7E220886
B3A57BA549FBB4E21F9AA2644EC087D61BD7F509234968915C6A9FAB3F8A0D64
6F79745A41552F95F74536C803FD0E67B1A0000BA75889AF55F34ED3FA8CF575
6E50E59E42FFFA745199D236D81A1AC4E0F6826F908BF9F0F7D986B1D4352595
270B1273766151F36B081FFA1E403BB81EEDEF8A11CC095592691CD1E265DB2F
523B702D4D0DBA35BE10A4F8D06A1174136F0A04A5CEB915B8E21F640745A0AB
66C4B83BC878C5ECFD97E10345761C1536F888C3C39EE48BC8020ED7EF071525
CDB93880A24EAEADF171B5C07450FF6651E557683614521110DEC1CCAC426117
DDA7D6C7F15A310306982406539FD83FC12EBA31479C7175C7733A2FC652BC22
248C030713E6208B0243824F27494EFD5DDD3BD613FE60049BBCC9B483042A2D
4B25C77BFD6015041001D41BF85A2BADAAFE357B446B13C8880EF38F8777207C
0FA4C177C140D2E1DCAED1B2AE879E7BEE3B3F85227C0E80B973173F1CF8291D
43F7270575C6C0AD7E5891D7DFD513D6973D7DC4685BC315EE526112B6DE1CFC
7012142611205589FA4C2263FAF831B150E964FEE203772A7BA6764A304F9814
3B209C374E832ABFBA1A18E1EAF822DCAA6C0C4142A552F0D97037FD695F9168
04AEF0D8F9F4404D63C42F3D635DC9195EA582B589CAADD8729C829BA0F99C9D
401B825ACF0CFFA9A4A2466FDCAE9AE9D984422D428200823D674B1893F03384
8967EF578E6B8C01908F281BE83668D9715871C53A42F1FAB2407E9C9CAA758C
3C211F663C3DAD02F2E55D29878C309F3331285EB0855B7469989DBD397E1A50
0DB41644DF3B451CF6BC41F06633E6CA268D547FA3B451C7F56CCFC673C48B92
BAC90417337835E3C30AE76637C38C551C84874886CC9C2DCE86D7F37CFEF898
33AD1FC0B3B6D33454CB6EA8CAB5AA5ADDCA2FEABB796415085A0E88249B677B
FDC99989BCDEEEA8510A8603FECB6728709E86E9B2EBFEE1F502A178E35704B7
D0AE379FBADD009AAEC86215121DCF5B0716611CCEFD11F5C5F00FCEA6971234
17A3F41A52AD8A869A1A25AF1AAFCB202750EA68D5A2FBEB95AA878584A8ABDF
1E8CF78EBE55ABDB3A3F7536692AB13A9F2183C9B0A4536829527A871675FAB2
209F5407670A26DB1F7F5D67C4D22790BCD0F1E86F259BA34DA4D4C40E586B3D
E66B95C3C2251EB47AA434100341A82F21FB94C2D83DB8D42A9E6C43BF0B5B58
DCD04FD74F177EA0EBC1EADF96CDA6EE4C53703763505FF14E52F06020F0CBA5
56F3804ACAA98571E34DDEAC38B8A00B6575ECD3E4BB1C50447C558FD565E8C7
8B0395DD211DA87CB1D6E623D1BFFAABF19003B0D12632E659FB970F2391FA6B
63F2E6A01890368EA8F0D42E7A93B03B839443CA79335DCDCEA285804E46661F
BCBA0225518CEC2D99809C71C946EB77ED556CD01675A5D45FC8BECC9F1253D1
7E3EB0A8AAF4771B1F3AC454B9EF343744E9147952F4DB65684D6CD4AE246EA8
8B6567C07522C74D2AF5BE856FDB43B2510144D171D013D490A0EE6A8EB6F81D
B2687D13CA64138054D591B1C7894E2A0D724C3CD3BC5CCAD3452A7FE5A527D3
A9DDC1C8E5A1260E01E145D02ACCBFEA0148283EAD2E621FD650A01D433805B2
7D8099F23CBD507627DA64EC50503AF8F80D819704CF2F9886604B70B9F2A25A
7D576FA1D70DC935CDD3EBAE198B3B0F66D6FBE907224496686847529F68DEA6
F8EF3F66FAAD8EF6D6DD77674A3480CBFA62794496BF3934B8EC43D3EC315817
DD65934A6057B1351BF5739DB0360871C37957E885E308D4A9414FDF10EBD255
57B85B5F1ABDC584A6665F8C59C1A2F11A4F507FADCC056E2760FD97E1DF44AA
50AA5B9B4F9093BD3FBFD3AF672D551C54EABC55ED2D98DA057A876FB35F46EF
A6A949A75969B13471E07B53966F0A5D85EC4BDAEC16B1C259922FD958E5810F
201E3B2C79E92012950167935869EC0E7F579DF25E5BA83C69FFE8C0BEE3B551
BBE0072CCCFF25E76D5313CE4D37F797DD4B69DB1E8B90C4BBE8F5F6F6DC1EE9
3686D71738FE955FD7C67F11323E059BCD0C4D4DE1B172BE416FEA0D359CBE04
C83230BF3F1AC0969C1A948EEF981516AFFBBC84D27BD1ABD686D1351BD5AAF4
9D06B5D21D7E2DDE51A0EADDBBF0BCE98AE75735DEF1D3F096540F72A7AA528B
B009E0FC966D03BF5EC2A886B1603145A82BD558AACBE2337E87EEA5DC720C53
EC24D89B71DDF800A4D407601BB632B33F1E4AA97827F9F9D3FD73C9AC4437AE
94EA563F9CB6C43FE96580EA52DE68618AF3B0E69614C2E386FBB4B47EC80423
384A0E68BA2B6A429FDCDC16A22EF6E1D59F1CC4D51744A45B248FDA03C5C83B
E1137FB6294E5747AF7A96E75454B132AB76C5A984CC9A15294FE781EB4D6148
E58E0D1105B810AA878E6791D2D603A9F27E558E396EB858681DCF53A2126E5E
A0BB33407C56AD63401DD9A62024FE72EB88F3FF46A33F0BC008036EA3093A4A
799D6C4B772D3EE397FE666140D9EA8AC68B343772084D45B94B82342246CA16
02F35D0F54F815D0B0AD37CA58CE08B25D36363C0E02C3678DF44F20E718545C
2F6F7E7EA4526FBC45FC341CE0730E2148AD363D40FC75EB3F94FDF3A7307F6A
01C71449E90BD6EA65B8E7DDBC69A7F7EE5667075BD92FE1D79BC73BE4B39410
E973028EF31CE23F77989A4390E544D72CC4EE40E5ECCC4FEBF01B060D77D034
7AB43833983BE6202E89777695B9CDF0E3E671A8BB4EFCB9E1A3BB7CDAC928AC
F5E79F880F462C4BD3D9B4215CEE08ED58B05FA74B94FD084CB58F31EBFD5EBC
64404FBE70CEB212E0F42F6F95DE7370CCF2E687548BF00226EFC0796293CBC9
423D966DED4F341D225723A96091C83E9C8A4890FEDAE6CE190B65036D9EF7EA
0F51D581092EDFFF194FA4FADCFF523F04DB3A9B0ED53E624A316FB19888538A
2C1B0BA2D8E35F599DF5F7724813D5C4DBD3D80DD6F838582D3BBC4190B6FB46
47229C05E03ADFB01348C4C664896E61AD7865E3E3F0932ED5C1015057C1B2D7
DD605D6202BCF16EE9D8DCD041DA85A6AB9DD32D7E4F4CBC071CA5D655DDB95B
31C5A7C7DB6BCBF1B0762FC724F79973E559FD087CF6E1642B75C5986BD4CDF2
D7C6BAEF2BC9047B20647CBC2F4228726A9249FEC24A61E5A4F7CCA68D1DF0A3
9EBDABA5F05CF9FCE780D288565525B144C50E93B534704E462A4C9F47D7FFDD
6055C3ED9E8BBF8FCCFE8CC04E0FDC5438BBCEC39DD554294996C46E69902090
E3E51F1A1610F7429CABC4361533A4972259416DEC3C9CE47F3630C69D91EB38
F60CB45B5750909EE5A96394DEB6DCCB5BC6ACB8713FC45FDD0DB34FBC6E1E1A
6373E8B5D2359C88C6641D3539702F728F5A8148A1FDC616CCBCF23D982D8779
3CD22AE55725F189869D5FEFEB74D49298937338C3E28EE0541FE5BF857C049A
150F4BE6091E3FDF1801DE207AE2884F706AF468536B5EF46AD128DB37141ACA
92AC65C81DADB5151507CAE41FE79A3C4A77551CEED3B63C9F69779377FA87B2
07CA0C68F3E60AB28FB7C85643ABCD7E99F31905A49563A9426E35EF68D8F107
D04DAC497A059BEE001B20C87F07E734B6700436233966FD9CD045D48D6F0C06
9F97E1FBF721418B91B9ABC32BB647E9C332D7D691309520F2CDF7DD77A58659
E5D454713A18C3AF37F302D950E1D1CB3458253B0EB217236ED3826CBDB60FB9
C53A64A4E3AB11F14AC2E6F97626F7631C8EFFF514C444DB6BEC4CF3670414C2
A7245444DD74DFBBA21A563951454FE7AFA29CDDEF96E951AAA9B8EEB3F9B7AC
9878E431EBCBBD0149BC294A9A29640874F1BC354AA3E88251186F64352EF047
748037794178FC7C017AABC4CC2A3AF2DD6D4E50A9FA8AF67CE3FE823A4E3F9E
3106784526871B2C50F5B279CAF980DDCB7B8A63E3BF7473BE19390E4B636965
53E3B2843AC6516F43E6C280F8DB9971234506BEF22737891913D14DB366F3BE
CEB347ED785590E407C2CA961F03D1762ABC486E717CE9A1DB941DE654F48818
DD76A3F20E743FF42B04A1190B58868B7C5BC40F75333AE8E7462065D05F498F
171F1B3762CAEADC6B9C632F55FB164522D35334380DDE473E217F1217628AED
F5D837D89D945736499FB213F9DA95A7E1AC8C590D275E7C0CBEA8C9D54D5865
DBEECB2691F010ACCB0F8A736A4E68E813EB1221A547082B2C67AB9CFF75096A
838DB796642E80E2E284B411B7B3CBFC6A2074FF3B8545D4ECFA1A2AF8761F86
D4546F62D06A122A70DED859911B0A0804598D0E3C90E3AE08DE227938432259
7E9E2CB635DEF9BD7118C237E43BCA43E5C7CB2179C428025E953E8AF7C9E442
8FA690CDA89CBB9FB9B4D2669757817C75CB265F8F86136A2CA713ED2C8DDFFA
015BFD11310CB2B5A43C34CF9EF4889F681B1EBB8EDF5FEBD36C6E600300261D
453EF3794BEF63A29D669A41955B2CBC66708F9896D69F4A05EC13D279AA57DF
7147B9234FDAEBF07631833BD20F64E670563422792343B0B721D7440302D3F5
F8B47B605F668D838009EF64EDCE48F955F182EEAC77A4F0EC85BC3724E164C1
2A54704BEB65E15F16BB339E5B1F8354B229914C15625C8E2BBF75F8E838EA6B
1546AB6C5CEA5FC3B99AF7F137E8ED2EC2C58C72FE198836FD766596D923DE6A
4819F3DDB1411C376787DCCC437151E9F44D54A2CAB96E83FF24A58FB06B0CDE
19AC92076FB73A763C946C412296971E30E6623CFEA4917745247916C831495B
F1DFF31F9D04CC76C0390F9E22E954DEF5741598E2C35870EDC52A14B8E25113
FA1453DB43D81A0A227DF65595B67ECBA01F72BCF61FA2A8BE1DDBF96C03A1E8
AAAC1E8B6B84AC42923DBA176D0CC043BC0A3C33387E121C1AE23C198F381DEC
658ECD0D6C3D9899EFBB50D9ACAF71894480B5E84069E3BBB974C53673D65222
7EB88E279912B638563A1B51C0CB37F51605DFE5A25B0DA63717FF25B01DE9E4
261267D5BF3E1767E49C3E2B2B7C94C184953A249AC6A8642464A62CC22EFB01
93164E0A6C15BD75AF662DBF9EA8B9D6CC4AC6D7D4FC05281AEA0A46348A1B07
2133FF76A7C142A4FC09C77E1724F57B84C718C2A09AC8BFE6D3121278FACC1E
FAFD38D3EDDA0B465C5BA1D48A8A22F2FF86AB80143BC0C81D5A73E7879E3AAD
C0604FD17B2A2F4306AC9C0E2C687D1D9ACC8E5DD08A9ED3E42F346F6CD76FEB
460B4D6C03B7C248E7546DAB4F85D9E08E692A1205C9D68F1E9D5BA7BBC72317
3FD3C11822F84466E3BD89F5022ACCFF6F6726A857AE4DFE8F5EFE9074C68BC3
371EF41A2E400B4FFE18F1C8343F5B2645BA173CF1A080C7C97DAFBB6F96DC30
060BCFC66B6E160272CCB55C44D7F2BCF45806966DE77F6E7F8EDDB1F21E9845
F1E603A8768815517839D51030B695AFEDEA62CAD3C02792CB44A20B258ED671
94ABE9DB2D781295192330E9CA13D9C379F6D4BF688ACAF9F67A367CBB4B93C8
B2FA6018E0221B8442BF63BF9A215FEE84CBBDAEFA90DF0A3056324992766334
DAAC0B8398B55735DF63F7CAFDF715ABD8AC6C1686596A2253823067F9A7B5C4
6606B3A761A3A1E54618236476FE268B134F992EE1202FA5224BA74AB500482F
A63DFDA986FA9A93842B429B1AFB33D68BC88143F92B5D64DA3F8C8964FB0DF8
B76F97E3AE0BE60A41AABACED09631FEE1FB46418E617DEDFC0E4077566D4E41
C8F0E927101741901D5A1150FC538358DD1EFABC2FF7141D758D299EABD088D5
9ED05CC02304F2C376EE1186D72062B8372DC1B0C352777BFFD52F48D92AB084
C2077A8D61564A0A78032B4B61C682AFFB38A759EEBA71EFF383DC58FC1CC685
D5C26434544F90EBD2AE9BEA3DB49206C0852AC0BA75093B640F61979195723D
157FAA60CD87D4CFA1FB98A38D3FB0A14453030D56BDB45CC324484B0A702514
C155107EDBC37A94A32E43FA49F587061F150E25ECD5A216F43A8E956EDF17E2
B5ACCCA29D314A9F52DB79DED58C4535ABEDBCBC1CCBF363D613CEB43D9BD875
9C9714F46CD327EDAB4432EAE44484E084BDDE7F85EC40F99F62A11AA9B3D13D
0639B076A14C65E065CEE2CF2934EF0411B1ABB263FA1076A9E541EF78AE8731
D2BA642C65363E60A655F6C1A2EA2F12C220B54A1D2201C6FF0D9CF3F993AF8E
CD6C2F914311B9D5A8C29F069FE197E488D3846125EB0E3F5C7E6F5C409DD080
FE3213ECF7D1A49BE7AD6D6BAACE6C3E98644BEC83CBEE4800D341D8C334E33B
34F831A42E78BDCDAEF936C976969A706ECBD428EF69B7E891A8637569889933
49FB07EA2A8D053AC859FFE9CA8FF1384B85C3B8B4CC6462527DBD6888A076B9
EFA5B3D5C0F892EAA9E6D185FB26E6068FDC8BA3DC7EDC8719658861EADF9300
AE63A15A7D983219EB991B300213F0D8E1FC48E0BA8707B4D7F7F5C3509C0908
A0D0063175D000770CA00FD02267EAF68823BFE0AA2FD9ECA512FBAEB2CAE365
F6E262500B0209CCA5CAD7328D8654B763B237ACB5295FA7CF327CD80AA97839
6BE81DCF8A250EFC3108E42CFA3C2B135637A5C796308FF7E7ED05137A18A207
DA8B149E58B6B463FC9DCA2DE03A990654C93B15F3B8F03D5199A71071EA83BF
CBBA6F05F8821359AA00F71313CADEECA74991348E999EB5F2F53D263ADE076A
5DDB61CB18C2C4F91AD35AA1B312AD723585048D44006BD7390AB0E3183927CD
D6D94ADD48BCAF67335C61B7F2B2B654C70F5370E0F02367A2E8357A7EE7E75B
3B9BA6FD74F2A2086B78632D698360F96950333AC92AAC2881130BF95463300D
647DEA011F2F612F25EE2285FA44EF3A6E773F1D21BAFF2E4F7847758B4110DB
F4871E5F72E72F0340964500FE38C731B6635247865098243F21F252CE202EB5
7DA6EBA4F0FCDBFE64C0836B09C674472E15EEBE8A4703D4D84D1B7B4499E585
B500D54F9D0C883AA3DAAC7B4C83F112CD364456A7F5BB6C308823874156E863
38FFD07328565672AF6446EC15F63BBBE295D2754E390E24B066543CF3A78440
991BDC00AB3E43178E5559BD7804B989D2DE2B2FF70B9782438439031F5EE0A6
C12D3BAC92E531CE00EC7740C41F9FA087F96A5647A7E96BB27E57B35CC9BD2B
63D32FE40ADC19FC824D6E413EC58B6E401C6E9884F708405CF7458D99EE3E22
2D204D52D406959EB78174C9D4280281E1C5757FD9C1CA8DDABD5DF6A03D6C54
21EB1424DC5FD9DFDF05F5F98209FAF5273613D3368B9DCD15C20059F4AE9476
6A2575C4EC2DF9FF5831F242B8B5A0FB902F9B2355F42D368D391D52AECE76F5
BBB786C196CCCAF13DD4617C9FBE7708AC29D1F25C3EF360ECC5DE85C9F339E8
DE7FEDE0D47B04264069FCE544AAD5E290723AA35FBB650B154450607BEFFB46
A920E00A5BF781176BBEBD60BFC9B797E55E22D705D78BCD6EF09105E2DA61C8
3A8CE2EB39F29F1EAEB8C5516B4205E2419B5EA3CBEFFCF06FE0F75643D05B90
50D2E505AA097F2FF446589143D43EE23E612B2A420EC9F149FD6A55F1A51A89
5E28588597211165EF5975692F213E2BE3E1793DECCD5D9140740EDCCC435B4A
C739B5D1D0322B08C610708617F736363D15A7B952B503E5F7DEF09F93790003
E163A166902C80C4500C4CCAE9A68F64D2CF9B4EE95672C13F4D709C289E50E3
479D7A576AF244D8CE0D4E7846701ED90AD2994C7CC9E74D5746D5A01E478B28
EDB24633F4C244B9A759775FD80D7AD6FF6713EA292EC1AE9E2DCD9DE0EB684D
4E2E7941CE42A834F186D3549338FDDEA07BD62F4D3D883701FA899166FC7E7F
6EC4C4BEBB3CEB93769EAD5148602824B0727ED9A42949C0DB281F577FEB3FA5
D85CB7E1BB721C8F989103E4F6F8A25A31E864651CDCFEE7ADB33094DAAD6D0F
960927F3CF2B3A0DA95E4D207E7906307B669C2C1D3654DBC9C224B0364E4CBC
F71C0044EFCF8F74DEEFC37299DEAE30D4482C5789F73B304907427C26D5D046
6AF5A5083378153907622D73A70D1D819B9A15C4EB4965302A8B4AD3F6880ADF
3C06F87F30465B40B4AEFF1F5E6AFFAC00BD24FEFC0C19947A45ECC6B9F49971
BD288B6905EC04ED310E37BD380A32270F4981DA77B9696A90905DD3ACA41690
216DF0AE3DDCA1D950E0F059C63BFD0D14217EB9F2CB21F0FF6087C730807473
5C02F685986E868A53B43FC51E84820FEA672BDB5BA9A0592B96487B40E1D429
7E22905E096C47A26F4DF59754DBFC9BBFF2EB908D91B24511AC525E15EA2EB3
89640E7E0AA9C5B92A11EDC335D079E6ACC69BD64BF071A2E72CA2981FB4AB6F
A1AE122A30043E80D0B3F64F1C1B79A79657C0E5944E40A39E2C1CB58B7DFCFD
07711D02BD58CB92D86236354271D2A331C54D212093D2D1A838F1F3750B8A5F
0C8906B811C05B6AF2EBF80DD90786B4C19754DFBE033088FE9BE450E41549B3
753C32E2CD3069E821015301C99D18932E563C8827CC340AC4350DD2FF1A3EA9
F8F241E77389FDC1874319631E4C662C9C68868890B42D93A8906D3D1E591AB2
26407E6C99CFB6F3DFC7D308B5A37AA0E4C8B419499D3F6B356E3548C00DAB9B
0BAFFAC6C45D2F565387D8D2176685B1A58609AEC90E71132EA9DA3DF9ABD46C
D3CBEC0C78624CF7BC577F1363169B5FB72B0FA657F157C5239A213A2BF53DC4
A68B4EF2356C9240CB7BDAA10D9AC7B96C817A53DC0D99669216FA5800E39EB6
D94D7FF86523F744A5284EB651B636BF312FB2C7C5DBEF5E30FD84EE9AB56551
17DB31B989EC2622635377629CAD8E550923A78021D66F223A6ED2EAE1534A13
9466F7F62EFEB81683BC6EBAFDBE642C963411707E41DA572B2601547D17FFA8
6232F92FC49DBF4B870C28C308C0373A7CAC1CB3982E3DA45A24ACE4A7CCE31A
AE1ED295693AD4BAFD91E6B70CCD429EF7488E7E5C782C8311B03F19DC377216
77AA83895C8936833C52C5C99A0D5E92D960B9D610F068FD446DAE934AAE1C8B
843BD078C03EA5FC1420D66A1C59320793EC60AA3AF4A3F68AA5E11F657F898F
5FA65CCE08D9A100CC4229A4E33FA93A0FDB1AE200E2F6C6BA76A14DA18413C9
221F730F4CE2BECA91F339C388BFD8DF2830E4F2AC7BC9A0512C5598CD6A8558
B8C485085ADC913B55789622477148C7437DB021B1667E274DC610622D941511
4EB2F3FC4EFB8EB31E6D5FC58CADC44BA57FB1D9090A4B43664EF0B17DC63B20
5A57438F430A0574A9C670A2833CC6DCE45D2E4898BBD96830A112FBE7E81492
22A29A3A4117DDEEF5925608991F068271A1A3B3543205DFF5A31866735EB1A9
31953CB0EDF319AE415478F90B097142D73136458A6868587A364E5DE577F2E8
F39CF89CA0FD60C2A99B2938D436C3B46D661C86B892081CC71C6BAD6E8C7A2D
807CD06926013E4247181AB7CBCC65CA7DB3E410DB1AB7AAF9B483A4DB3B365C
BCCBAAEC827EC5884399B3CF76512E8B41609794029C3121E23B4554E19407D4
A864472E90A42B6F41EAF8EE84D3ED028DA28222985FAED774F08B7A2304508D
3ED4668A7310BB4F71654299002322572CFB438FFD4E88E46101548AEE969699
91BDBEAF62F00E36C576FF7A226B1658D1858CF4AE069BC8D5168A2ED64AC354
BFA5478659C278A9FE1825AFF2BAD4443927443CE0E34F8719159222779410AF
291A8C4147F7E7E2EFF13DE3C2C5F48B08455AEEB30CDD6E61FB110C5290477A
7E87441192786D907084B81DD0830568D725133D32AC4ABE5C66AAEFA7C1D289
C679A192640184483E8ABEC3C69594738C215123B42AC7D1FC03575939D5440C
7F4FCD10B92B2C147CE865A1D375A952EC8D65E617F6D621053402A294BED388
31A3BD98C5361B66226EA5E832444FCCE71598B1429E5D0087CED3DA9536E8E3
F43FC7476E29B41AD177BCF194CF371C1A07A95681A598232B4F17C90B1F97F0
25BC4FE38AF37D16325FB9929DEE8C2848745C4BAA954D2854AE79405374E0CD
5FA29B8ED4A8217BDC85C71044CB7D1E2AA63F6ED520966565A91A5E52796975
CA332602A17F8506F5E212668F41F37ADD6989E85FCA24CB7B6B54D8D996A9C1
56F99318004EC02D5CD155CA50B0EEF431C43C172F4B2FCD303237B01E13D2AA
AE0E8D4F51A68791DA15FF5999A8A0A26A1C469440C75A4BABF28DB5CE51D229
B3BE5AFDD189B9D128BF0081E317079598C8500084FD75CB36F23C0BEA5C55AD
278CA8D5501C1E434DEEF192FAEA9E38529393BC04EBA565C2EA916B639766FC
FA00A6EC2C658547487FC2B6844308370C4D370F0A059B0F155E56DB3DBA3739
6457E8C84A474061031615ADFF1E33E2DA4480B978EEECC24D15ACF07C5C14E4
1A8C8B53CE665EF5094F4014E19FF5DA647989120B818E8D945FE492C0C783EC
9AC7A95C0832ED8BBE9DFE6EB89BDFE3F918A2DFA3BF40EB512B4BD4DF7441A6
4EF88DADBEC94764DA3C07D1C31F33AFD3B9C99B0627800AAE1F0B28330E00E9
D210D7B972D494AFA5BEA116B922FCD1AD8EADCFEE7E92637D00097377258E81
CAFEEB995458FC6EAE7BCBA2D6716860F864B3771C82D24A616B8B93E5E8FC0C
C4A121C38F9927527A4AAC3ACC4201794409472BDCB4B9267588A641F087BC3D
E74A6568C0A139680095425AD8B4DCE63A5845CC77126DF2DFEF441657798668
25EA89C3A02906ABC54E3B4FF2364FBC9CEE84324D9E12D44D1CB12C24267FFD
67FCBF929C5711E2CC6D8257D9814601AFEB7EAD595A6AD78FA30B1A1012A41E
C3DFB3D0E6ED4EA7270F783D6D43AC00641D06C11B130AB7531988FDC5064461
993AA7285727B6901797722398093CBD222B559CF79371B1A4373E71656166A6
9276CF920B7BEC2E368A095DC1E3A421F0C534EFFB859C2570AFCD5690C6DAEE
F861159D6BACF7EAA4E7B1648AA4F3378FF330328CAA3B0E487196843C73BD2D
F6610F0F1A900F658E65A28FCA65062E70F4703BFC683C6DE98769691F9CE7AD
A0F5D6C1AB83B98945A1FC4B11B435C268C6BB20D3A288E01E2B9173557BD09F
D12C694DD22AE64DB1186C10A7C760D3569E5EDD235ABD4B56087B5A8B43DF36
13AAAD505CCA785EE521B5D53F7B40E64ED200494B8AE9CB3B6F78899482D137
80ADA6AD745EDE6761D7D722DB82FE8AB04756697C6B1C89C1D34E547CB0F593
86340C9F9ACF9B1510282836EE37A89C9250956E25AC33EA5F2DB7978E8581B3
9E56E5A0FB505C7ADB7CAA32BF9D5C2979D409E4D68BB6DFCA0130D64999A1AF
04E3C3F00E776079A79D9BFE1996455982B7212B065645C76FCA01DE45DD5BDC
9CFBBF7D2C5DE29D036E9EE705C681971C9CA65FDEA97EBFFC01B4B0E4B4A6F6
15AF7AD898C9CCA5105A687B74DAC1CE89B9115DEA66886B8E0315F5236BE48B
537F6DDE0C535B2293ACFE9C9DB0985ACE34A56BCC27BE0D5852C4AB7901F946
BAA0146AB08A3DFE98951927F9C3A83202250796C4E9F9CE696ED9ABFA4E344B
AA35379D31D9EDFC1E79FF5B4B8F0B1202572F81E28306EE9497211C13D02F8F
BFF52CD452957EFA5E03C8ABED884854242913773A08A0BB23D12658B7FF166C
507B49AAF6FA4A71C74683F2BDC50A87CA33028129F4A085AD9DD05C3A4D0001
737F97408FBBDE6C58A8FA419F310AB8BD06D067F53E41FBE30E3E4D28FD5180
F75EEF61BE7242619B6D005F2D6E3880CC5104318FE113C2FEE0BE9AFC4DDB11
0A7AFEC7A0EB3E917DED24E2115D16B2E47E3DC85288B93BB635FEDF9E887288
74706381E06CAB4FEF345D361E6BFEB0F6DED448D0F6B533408F3D7332E7ECB9
5D1D16340FF23992564C4E5EA79D4611AAEEA72B791C22A1822E686F3852C4DB
6BA74C7DC0D0D0A183BD254DBFAA7388CF2CBCAC64093C7788700BCD14334660
3DAED4521F35DD3F4426B5EB6E8C68859734B232A7C0ECFF1216CF4C9108438D
F6EFE0A67D566EE4E202722ED52BF7181F5170D7340C0A3749DFF3D8C391A5FD
DF2318F6D505E8FA521F1AB0DBCDCF48BCFE5AB771064CB45C5F5D156798E31B
C48D0DB0CEE215F5894EAE38B7EDFAFB64C0891B14D9915003916B4F4F4626A3
0647A49AABC499A97CFF90F3ACCF5B8C73060D2FEC1F218A069053CA2B0A1FBF
490CC130ACBFC1CB3D5932FDE0FE6CC0C876B0D072EABAB7EF708383293F6EB8
ACC485B94BBF8425761F19EC6C5999318C59BA5C2E1D8C2C4506EDA9D317515E
ABF66B268FA5F27B1DB0A04FA4A80796D144BC1875A846990DF6FF78B0BF0F73
62CFA24BB2F3D4EF7D39E1902C53053C246790AB704AD90BC5FF3CB9D3C40BC4
F6A3CDF009DBD2703C0F01017DB6D4137018EEF6C9BF625A1596A7A3BB6C92F8
8027568E1C088F279AFE031CE20930C273EA5923031A54BE48C3686CF72E9885
6E8D4E4F2B3F382C3AE1B84CE97E870122A0A46CCFD6B4158BE06C768C73F470
9F7142687362FC574EB79B143A4BC2515A46A3FCFB0E5192E8FAA67087C57B55
19A912752E6E102302D5318196E7C179210BB961E919EC7BA5C3ECDE5ACC91A0
D99A924C51CE8C8DC3E83588B55B1307ADCAD7A6F38AF167697812E074439CB2
CF29E60949B8DDF0AB2DC22A2A2D37579F8ACBB812A0DAFE7D1937249780F71E
AC827EDBDDA678B0B59A2C73ED27BE9AF92EFFBE6AE89E946414840D7D14551F
503707DE018C84F6B93F9C871C483DFAF9AC1EDECF2BBCADC9882CAD3E1B3E88
3E490A8B711E4F08133B1CD745858F520F59AD50537F126EB49936D1A4011808
FF1EB140DD83F85A8EB618D9AC2F5AD1C355A0260EACADF854F8B3D5D87D3E12
4C311583C14F86BF0C14248A6932DA8AD9A85743F773CC1D5569838FE5B89D35
C4B65983ADD4692AC17DF0F5CF450E35201D2E94FD274A8B5032DD5BC6CEA65C
CFA9C10B6C82C157ADE6632B22D5107325C178EBC7A5AA6D8C2DD41E2B033B27
45A284F1BA814B04F79E05E27E097717B1625BF5DF2B933CE621A5CF86F38872
78A6E4CD2ED95AFCA24E7A8A2840C0642BA4A9C4532FEDBE72C6BE0513FAE20B
9EAF34A2B13634F5C2A97CE532FA801E8A672669ED9AE58361F03F5512031A86
6EC07D54C89A80B422BA427BDD9CE98A0957F21F6FA8832D6831ADD28A03D910
DDB31E7B4B4BB145FB0BD4D493E552F693C90183AA67AC43394596E9BABE7F94
C0E09E6D9F6AA985572EA998D89115FB35F9E5D5376A36D7F08203ADCE6B3D77
27BFB5D558F1E5EFBBD7A32E97D382DA5AB07F54D8B05E23689AF6BDAA99FA52
159F3C2319DAD836AD0221157867F69CF3B611F2081260D8844344580DDD5BF6
FCFD4234DBB10CF8F6677DCA7F1C95909F2E57E839B347C2A2F5F2438A35E4F3
29458AE6CEC20D8C871F77FE5B882A6BC83153422B99507C67A0496A3E1031A5
BBEAB96FC9D62F9B65B05B32FC49160EBA9CA9ACDC76C44AF0D50D5B79F319D5
49DB983DD1711B185DE1FD127774AF07138F356959B832AB120BF9AF54F71518
4C873619935824BBBB44994C4912E78ADCA40F37C077C4920AF2A1180FBFF0A7
49472B36ED37C5202DC66EF315A8EC575A4F85446A6BC6506E06D142AFB863A2
04D4378FF3AC356705B39EF930FB53321A7BE2B40458E3089B3EF9D583D7EFF5
FF23DF24A192447C159A816DDF804E368B797AFA0B187868BF0C186191D5845A
31AEF96B48C22BD4F28EA85D3CC7C2CF4E31343C5FDAADB8C1A11801E67881F6
3734285845E8E51A773CCE061D59EE1AB03666F1F757A14CEE908566C97EEF5E
EE326172526ED10FFC5270FD20C841D6B355FC65504F3454E3D2772F46B84E90
76243C65768BEB1D3F03B70D8D5B90C8EB530289D31454E19947BA7BAE21AEE5
F9402DFFDE29D0AF2B26F9AF06BBDE810D60A091FA66A52031231EF503C8A924
2987257E97A14969834F4C688BB2710A7F4EB4B125A39E742348594859AD2F4C
4EB0F3D221AD1A01EC4C31819DE04F8118837EA07F2AC43D88CC3B9528FBF4BA
7E7A80C16C7F652F037369ACF64FD2B6425854D60F898C4C4D73D88CD7E04D20
B3DAB9A30F1E62EC02DD1CA31D35F6F118C72BBA60226E80C79A256519274080
5085B838FEF83F09F98531A14E5E14B512C030067F335C80A5210BBDF723A661
E478C83E8008013BF3EF8BB74A3A8803EDECF87641F9C5DCED967A06DB35876F
689B08CE08A3C47FAC5C32D733AC69EEC436869F241ACC24203C9F1ED41AAC61
B2F50AC517CA096F281440472658333FE071D3ED0DBCF2C2318EBE219D629AFB
7E2E104143923BF6B9ED00A51A21716A5EDA1192743774AD5DA788E78B1EDC17
80E797CD12E64CC822EF5571FF69AE52B3A5536688774BCE2B43DF7E7FFE37F4
0A816408D52885A861760418469CE8E9AE56D032269EA02F6C2264246F2BDBAE
EEAC56F2D19F80CB74A069B29340A33425398516EA9D226D8EB21CB8BFA976B5
EB42B892F01C6A0ECB216BF9EB7659920C0DF60AD0A1E274AA38DDC172B351DA
AD569DFAB4B21F82A87DDEE24F0A617E4E5116961D3331DFA06E332B68C69D35
BF2DF5C607ADC34F515F0C95BEE2BE93C68F1B3B23068CF31C85F56F343C271D
C70983B3E4222CA3C674E6008278FCC646C2F1892522198D4113624096E3A2A4
37025D2350BA3964D921F92A2547A1721CD1361459F6287FE5D0DA5191946BE1
F999CFBD3ED374BE0E351B6BED4C21DF4288BEF927A468245AA0E0F1E5316047
7B5FC3152258CDB5F6C604858B4A17EC96DA7F436B00EC1F4082E0A6AD4E4FBF
DFE68B0C3D9D21A9FBA3AD1B3DB8227A42606504C249E340FE4BF5FCCA10BA25
544D600A61D843B7FF2AF8F5C018A965D4CECD5D40FAD07E5FF235
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols7-Regular
%!PS-AdobeFont-1.0: LMMathSymbols7-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 486 136 0
%%EndComments
FontDirectory/LMMathSymbols7-Regular known{/LMMathSymbols7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols7-Regular)readonly def
/FamilyName(LMMathSymbols7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMMathSymbols7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F03A6DC586679CA72BBD354F9F399D50
BAD7C7C223346AE45F1491717B0F25013BA153A6FD84A3646121DAAC4A2B28A6
FD518B8A077C4CB33DBEC8CA7C92E5D7BBCAF8D4A968F5C9B4A4B480A4A64D37
8AC3E8A3706E31139EAC60C4B60483C658B27250E70EACDE044C724432E6A3B8
FAB78794CB0F69D6CA06EA523DD9B215029083EC1DAA3E1FBDD8A08A07E69215
38909849D34B81B13BDE3A3A55C55D69753458FCB108596B941DE6FD79DEDCA4
3F628C620BCB8DD7BFDF97CB33698399614F1B95736890E6126BDCD2D454B855
26C1858B862DBCD01B51D3146C611B34A919DFC546D62B7A7ED89D4DB810E015
35291D579A93C37B00A62B56E8F33961FFE612EA82DFB9E37074E864B6A081C6
7787820CA9DCDF7AD3B004BF970F13DB52C8472AF44E7EEA0D4EF4049BBDA792
27945CB3433714705341C2080524D5FF0F5487D81E9EE0A44615899186267AE4
03681B2ED3AEC3135B0F7450F7B91E14255DE4C8550AD80D53A659DE49C30AB1
4A786DBA2DBEEFB1A693883C40FBD8E00135CF1B93BC0C2A5BBB0F16E134F7C9
E6494D1DA5DA50B5AFD3FE656915170BC0CBBB5DAFAB28025E5B5295354911FF
60060D5870E571EC86B3A43D3AB815884369FD58A68D3259D8E029B2C1693620
2B6F954A492E31870AC49A1FA86B3E2E20B96123908DDC342D56B954FFDB36E7
851D9E45C01F2F3A05ACCDDE9C804C0C63DDF6C261782C34BDF16958819B3E62
CF9A7316963077C305EE83FACE74164D3E8E7605C63BC9F4360BD38D3112A71B
C6367B44CBC37795A15160D6698ACA3F65DA6B35176237E1EE351E755215891D
56FEBCE0AD72E176552EEE09D82D0B1804227B1F1799DD547714ED9527026AFD
8C09AB1ABA1BC71CB86A66D226AE19616FFD5DDBB402BF674E3EE5D19FF55D0E
2BE2041FCABFEBBCFA3F80DF647C69E007B1E80EB405BA27F77FD35747A755A5
367DBCD65F44E2866DD32FFD5ADCBB44C4851CD927C5AB712CAF7F3009025CDF
190E9C4738695EED42E02A60DDF6CA62288E4E780F8614C7749C9406325C8BAB
AA89561C37924764E3A077EC5871F352CCEF118C1E7B19D83F738F4D305CE85F
7416979CD2644B25EB1A8750DF7E7961AC02510F5B6EE04E45B561EA4CDAFCD5
5BBDBEEC2355065FAFFEE86C8BA72ED4E085DB972A1991DC659D83263F3BF246
15D47A897EEA06DE5F31C9B8DD5270A72725DB46EA6B672C3C04BB820820DD19
6E4EE2631788B5B292CBD205BD8A7EEB839EE18DD301AAA69044E56DCC291482
EA4A2A2644047BCC5CCBC4A7C3D0AD578D0B0451F2767A6BF81C8EB8A970AC96
2596E5DA29211EE28BBBAD5C077185D58DBC9E21BC24DF15E8660B29B60E8636
0C2704070DEAF8775CE3A205C3F29825A8CB11181FA6446FE02188C23F25518E
E0DA7F5C9D29D0210ABD5062555049250127F04D47C14E426AF5520760D0B64B
74C22791CEAC9410AF844A34C0A2E0CEDF26EBFEF866C5D27151547A672A1F8A
69DFEA2DAE2EAF5159FB193A5741C22954FABDD2FC41FB6D4A5008D0025327DA
99E494D9E102DC33241FE451D1CAE09FB7F2AC4DFD0F9F004A200889D792FF83
465F3FB922A40147D3885D526C22049941FA4ADE9921E83BF99AA98681621839
DCC4AF5DC929E8AD52A066F6761C9336B808DF4EE71B6D86348C443FDBFF8C63
8A5E8CB634D26D4EE206E155CF5CEC9C0DCFC4D26CB2F9E3F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman7-Regular
%!PS-AdobeFont-1.0: LMRoman7-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman7-Regular known{/LMRoman7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman7-Regular)readonly def
/FamilyName(LMRoman7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMRoman7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-483 -292 1562 1124}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE26F7ECE50E9B8349D1A7644F2E9
3FF9625116305D3A8AB7EFE9B6CDEC7FF1AFAC2914844571C1C3D55312245E95
1C742DA9DFD51D0481667CE0F0BFADE80CE5955045CAB5B7317D73EAFA74E339
ECC43C39A209A004E5BD75366B006A91D46E1E7C87E6F81FB54A33DD44AF5B3D
F81A333C02842D9C00CD0ED5C5E87B3F9AC063B5D70917E0D90240AB4483CAAE
03746F5AAA3B2FF10270E85CEC5F5B6C1D5C63A93DEEA5ED09EC9951684CFEA1
20C70415BE898E01D695953351189B085F769E96ADD30D2753E7E62AC6BD3326
4861C1295BC7CE82F9159E3523BA56EF6BF3440231B1CF44D9AD4FE3AF0DDDCE
1A9472E941EA03CE48DF71BFABD9E2B329B65B7E9ADFD6FDD24E7C92A41C5254
80BB35DC82178DDF164C9DD247F520BE204F342B1E0E4B08742CC7485D3F26DB
DE3C6ABC9BA64F5A9BF876A3F192FE06068E5424B8423977DEE5530512949172
5D2B28F016A12B3CAB43340F9F2056A32C91149910447F13521AA514BF404CDF
1380337F42EFFE0CA35736FC28E3279720116199109D73B15157E7F6A0447469
1906F7EA7419D404549A72E3714DB6268A66604608BF2CC565579E3472D3C225
987ABCDD43EBEA8D69E8EC0F70AEC9745FF15EDFD83A82E991A3ACB8D3AD3E61
28977A95968B667A2123FDAA74D9F418FF93FEB6F7079F421D9CDE30FE6A7C79
BADF32183CF1B98AD642CBDF68BD6367FF863324063350526B221D33A9029885
76DA13B9CC41540EF9099592334BC7009F6F8721E494E1ED2C1F9D1AF8CF0B7D
F6F02BA03B3B6B275328CB94B539DAD0BCFB00D2C15BBCA5112D232DB8182167
185B478934559B3796E58D2F2F6E03DBA0266168AE6EF6F49249000BC3F16AD1
FFB258A993A704E17346084DDEF46CF7FBC5FA5860CD27DA817F638B0F0EB4E3
33415AF8A9A6AB64C7141933B26EB15DD1008A0910A81DEB2A39B31A6D13251B
7E5E4D23AB35094E6C0BB0B0F240B63C38E6F1D90972E07E5CFC49BA24321F80
A434F30A29E7CAFF159D2421F29E3C09EE7AE506B4F8A2BBE9E498EF25667BDB
2B79A6C97BD472425A53BE15D728D7D835AD381E8437F3B650A7FC244C9C3B54
78FBBA219179F9CFBC03749CE59391338C51207B01ED36B53F1E1FA003F01FFD
511444C6E448691351134AB8A9E139821B15686834A6BAB96EE0F029A27AAFD8
76E1D5EB11DEB30BF7A3CC1FC21E712AEDD4A948F8C10EDBEEAD8F91EB13E7BB
5FDB2C92F44421C7E20BE7E0A78FBA272C69F7A34493DD3DCD6254C0BD756210
F38F01D757B83E20903375DE4619505809407145D7148F40B8FA1D9F0DF626C3
94A6BA3C7EE4290F0D898BB3E404CCAA91FEA4EC2FBB3A7349CE7BAC7CD903D0
AAFEEB0DD8B306E7A79BFB3620929FFD88F15A1BAE76C6EEFC79C130434E6066
038F7A17D436BF9B87FEED4792659E7EBA466964C7134AD5D0447045AF93358A
CF5DE07C87C7C94DED51FED4CCD2D249ECF4B22B21842C8F86DB2D05311C167C
F5BFE161C8612D66A783164ECEA734E43C24EF1C411A4F04267EFF030EF48F8A
72C42BA53B144B8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D515673E4D17D8
832E0E2EE836DB259FEC75B3179FBFA7AECE74EE30AE2C787714B977DF80B7FA
EEBCCBA265C64EA7E1CDBDBC5A0541FF5E194CEC0F3A909C9E8EC3CE112441BB
2A5F77E281FF269C4EECE035BB6FFA507203F64797942F9227920CAAD43D1B48
EC23887DF281EDC3A2249FE4068D529E201B45DD4739C514452FE0BC6B364751
54CACD25A07C74FEAA2928802611B73C375EB881D56F270E8C77CDA90EC7FAD6
46EC17D356E6174C5C555DAD5EEEB9110AE468D1CC587A732C65EB7C738A7D57
3E2345E735B39F7B01398298382D820918B52AE133CC3977DD3448946BD058A0
C86C7B21DFE775C4064934FB530B35AD9155EF03D074AB55333A68A6510AD6BD
87E9BD0F7E93A67159F5E75761299DEC7BD65B80885F9C3574339A61253C3234
BF4E1B89BE65DE7B0CB4DACDAE1FC4F892A2F092A3E45B066E9EE705C681971C
9CA65FDEA97EBFFC01B4B0E381FAA7A0837A0DD1EAD10B0A7A3F70DB740709CF
3201649E488A00C554429F72F81976F8106FC0C276C819700733331432ED8C17
CB4DB47FA3AA70DF55B9B5E0817E08C6A760677CFAF1D482656CB75CF243EEB4
2103985613A5D63DE54712890CFBABE41E2167A6AE54D5DC1BE1810AE5AD8646
CAC4CEE0D417E875D900A39BF8F1E840D5695D70DC4C97884A824855D271FC5E
3C8409D32BEA2B29BD1A08E9B95F964FF6314E7D83013F420403409EFA81F6B5
E80114385D6B52E2CD28E7174BA0E2792D227EDD82ABDD138A2812AC5E2C6030
4078961DE665ABEDA47B214C73AF9982B447F071FFA8CAC2FD1A29623CB12869
FF3B4A25D1A21EC9B9C92D1FD382151CA37EA407BC8C9B9034EB7994DF1AAA37
9A62EDFB1378A82FA82511BF1887387A293593F166C33ADE345C6AB91921B93E
22698328AB963A6A621DF565C08EC5B4DE3CADBB53CC6A863D331500AD49D0A8
5D7764EBB31166A29307F6343DCA5AE98099FD0DF79B13EB5D68B45BDF736A27
654BC2ED09432B072E91F7CB647E1131C0CEE91162DA66C9C1C9B5039A0A01DF
B009FB8D31F7D6F5ABD046FCD1E586824EB69F42B4D0A858F8A3B763760ED716
A24400838780CF5A5C4187AA81C5BA8892EF2FA9F87A6A97405F04DD36950A8F
3D2E430290A40947B84A0D64CB893FD0BAD0C669DE20FF823A10E4EB9325DA08
07D0B3882CFBE4C835B057D5953BA549C0742D661C8D6BA1F78EB952AE750CFD
0800ED2EAA1DF4D0E3D7D524C71285ADE3F3BECE695865AE896BF66C01AA5D9E
328841C2F43A31276A3946D95444CFF436EF0E377B78459CD5B7A1FADD93BD3C
C207D8623EB59F6B3FDF302401C06DE6CACF4C3FF495F0D3B1317D4933E1E097
ADD392E793B1B54A243617AE985BBC01B263933D3E20EE20A1245633FB7A7109
0207070B9EA26895B88672C13EB61842EF56F134AB25DCAD2BD08AE61E233FE6
FEBC87F3261124DC587C5DEF6FF091ED97A96DA52D988006E9D5471B7A2E074D
659C5B0561A34A2F1605CDE754596F8369028CCB95F05432204FE04146BB1300
B726E2EA0A91866201E08792F03323228B622E3015DA93F9850E9A175C83CF70
BD90D19FE47DCB4E86757608AD1D765F168FD2A18582D3204B245758ACE06E2D
2BD43C8D0B7E42AC99697B4B5BAA4E553BFB21986E8672D6AD3E0F12CECB7595
C5E680E31F06B8DF8F8EEF4DBB83B3C77432EE201F41C83B213EBBBC0E684E19
84C107C8FD9285F08FC3C879AE6D42023BE0EF4FB80455AF129EA1A66E87168E
BF926C2A91C5281704EF7AA35548174F41D78903B40367915D4EEBE9B8DBFA67
32FC4F39FFFAE347AFE8B5084386844FA4F0B0331CD57E3C2B42F2B5A96FFBB9
4B086C7847400AE8CA79A797C3A4F27AA9924D6616FC860CCAA34029FA42DFE1
4CB390C69AAF35C89B103DF5666EE9AE0F25FEF4E57B82E05FDD5FC48B57A3F0
802866F884EE3C6348FF0F41BFD3E96F9737FF3C885E083C382D12E73CE475C4
CBC8EC0A76FC971E927451DBABCF75B15E5AD53C8DD8710ACDB3786A919FB356
CC2695CB2BBC2E37B1FA6FDB0D247F4088BB9B710745EA0567811DA030BEF5C4
10DCA1D11F770EBC2E641196A40F4C399616B0A7A154D9577EB6EDFB9F157911
E60BFC35B3168B7CCB53A1D3201066F4FE8D02407177ABD60812B88E20F71C86
5A3C7B1B589C0B5BA0C811390F9DB8513792EB5AB3F57FFFB003F6BD746FEAFF
2AF04969EB7C738A7D573E2345E735B39F7B013982983826237629286D48D652
9E15ADC93E621833FC3E904696E8B4A1FBAAD9E2323EAA0B733EEE1C7A6E6569
7343CA3970CE84EC6B9433F84D118630A3B2233A129E36F6666A3ED9C1AECFBC
3AD200383477D05545B04A5EE55502AE9BB54CED17DE5CE89D628716BF1E306A
A807CCDE6B18DDBF8A83D72F50C48125777489D17D3FD0DDB059B599BDAEE22A
72AFA0F39FFA42BC1097793FD2429EE8478DFF4DB502DBCCDBD61CA5B5E20E1C
FC04C7B0EBF153A18BF0292CD25EAE9A176C9151F9C4EC7FB503019911F2B53E
072D324ADD764851888781FDE97B26FA9914DCD688554EFA8D7F2FC0737E4E6A
6C452DDD5454D1AF29E6541F493C035A9BCDA34EE00F77A025329DE67583AA92
C55955E1D06531A5EED36C30AA15C66D57D4FC3C13595EFAE7BFE2FBE6DE800B
015E80DB2C9CED6F6E7CFDB94695D45D8582AE345AFD978844C404A5C01C3FAF
B530DB9A6A39DB65E568DD3A8ADD05090D2AD766419FE18C377E448EDBB08235
26BD66B40F0519F04EE2F36BB9459C6F41B3B4EE5B63571F18E7077F199062C5
699A900EA9398CFF7BF2CB6AB91D17C5793A8F9EDF8764786B8C6BD6AADD455B
5748055DC43666FFA6D2F73A0656226A67462E3B609E0C07072F3F3E6FC8ACD5
2417325991630F9C4A607450E82546FC0237D63E97E20D34594B3CE2A37EBB06
700474F4A4F93E85707759EA2EF141C0185B6DCCAA31E67DFDC33E9675CCD879
D1FC8F1177B2EE5DAF403311F039C6218F4D2882FA95447F857821DE835260C8
569B437B93FE55D79C954243E49E2E2773540E9DDD953DFD01CAEBA561F02861
1754F949BAACCBEB1CFA5C9924056F33ECDE6F29365A5745012C8ECC5F8B4C94
3BE06E64726A02C5C91F41CD1B73300A2E034FB05F65857EC1CBE59F047E3956
309ECAAA93185590B7805E4C75D7B9426F419A31BD9E3EEE0CF4B5284A165B52
2C655D52B3FA5AB67BD68C9727006876DC67F7E290F28BA80F068AEB94A7B9E5
3CD267694DF8BAAABD3EC4084BB1D69B96D07F2D617ED8BE90E81563C7BD4427
80D834A1E8AB45FFE334532FFF6EE351252820E23D082659CA93717B7CAFDD08
829CE775C1F5D2A21749E6161CF11E2EDC39FF4DBC037FDEEC19CFB7C2081551
61B7467CFB38451B2B5A1C0E218AF54C91AFBF843352359CA0E77B7716388AA9
87B266D62BA5841AF5ACDCB7E60B0ADCA647E66B811F82F08DFAE1979E9ADB99
2C57D2D4E1307B9E51498265119F9D2F3F9ADFCF3F625B87358E8149AAD50B17
254E6D298C5297546C686EC196567DA110A76AAAEC1C8ED1C42A4C6D58F0683E
9AE3BA177010B48C7EF4D09DCA5CCDA000EA7EACBDB836A8F7E7C1FE513C8185
F36C8D567C8BDA504CAD3673DA0FADD3ED58610237CAE20EC767F184CB10DF20
9525EE410DD0FCF8A146AF0FEA6F7664923CF9E8C2DAB8CFB4A81105CF9DA419
5C3692763255C54592F8A3BE15239C688EB2F7DCEF7D8C2C8B7EB292D0E4ECEB
60C79F9DF0F8E92B8BF11CFEFFD5E8FC133B2DD91215E75E596E08D144D082F1
4F54CF1D179AC05D5E50D244BC4735C9ED3F75A158C399EAC16D813DDFFF35AB
D92E13ADF85FA7B62AFD402717C979A8B2C95DF751A861565EF6F1EF22E1DE92
C2F23AC20DA6CC8D6FE62BE6F81EBF45FDD41114B05B40C6C09239790F6B0B3D
D6FACF052D2E1C0EB34672AA7DAB402C46B74A9FBFBDCBCFCF477A2C30A72EC2
27B20A0ECE5FDD62F98D8CAAECD64C7D8468DA6DCF2767A7327B26CB133A407D
1599B367D46C34D3F5936C49BFBB7730D324F359BB33327123B24688B757F4AD
4411072FF0A8067C202CAD95C87793D5F78FF22EDE240535D6E3DA439F8C36CE
391BF12B2EF5C248D81D3B166AE6DAD65C1887CFF57472F27BC0D111482C5E24
07F0458D2839378AFEF6D7E6A9E866BAE054F5EE51C829C26F9B88AC159E8AA1
C44A2A00554667CFAFF8A417D246F28CEE9050A4698DCD56F58B5B0B4F975E85
4961290F30C0BC06D9A3BBA10A436108F0D6B87BFF46E7E197D8541D72B9E3CA
71142E2E61CCC0992B66DA71D8BE22836E6DE06A51C559FC844FB1DAA67F3D01
C234385631BAE78B3581282BB745E6D36223AB972791081FE59397EF9D69415C
69914176B8626AE3FEB4F127D094B167C7ECAD42D003027354DC724C92B1743E
575FF979918B6C94ED90D38FC4C938AA9C6CCD31E1B3C5D46C68A5E4FB3D8509
D3FF3EC1A97CD63AF4CA08A15623B5731625F6F83CFFEA55283F2292F73D16FB
82BCB6BF1A16587FBD71F44A2A99BBD1CD9269C95AC4738876F604768A8BDE0A
E37AE6B1BD8C89E6AD3BF8B879A425CED34F30D932AFDC2EC726D6127F231F80
A434F30A29E7CA7AE699D0E5085DA46C33F26D430395489A5ED95EB8E3E305DB
3F493C27EFAED71AF559DC33AB828E9D80023BAC482F8B93AD55F1D27FC5F703
DDF0F46C7CA67023CE052E3296ADB222FE2151ED67329BF4F69E28C3F7A4B9E4
BB5EF8BCC0ED71AE3946C9182BA89C9BEFCD87DB55AA5E0AD1D2C398A2780774
714CF4686BFBD66879769650099A6CF35C3636F99A264ECED2C31FD08731E0A3
A099F8070976D75485DC48C31AA43BEB612E6FC3DCF522EE4380B6F4759A563E
FC147DE707ACB07E1F27E9BC0CB00C1E3165BCE467D487C735121D0DE5936E27
0E3B2DB28DB5013126B6F2C95CBB2BF1E6543DB5D8D094EBD746F00D4870ED44
C424542B9C1C242D395273D98D7A005395D8821E2A6B0A654E76015340E6298B
3B7A30E87F9D6EF48AFBE10EED9B1AF2A43F8287DAB64850A522D33B09929C00
B48C2CF4EC0C0F18E96F1DE82C3E718E3356FBB1FC1D2B42B3980FE5684467B8
2C1986E948333E1D0B5BDEC27230D2966054AB1BC5A3C4E6BE9637FC8BD3E94D
6257BE1B7BFB147804A504499BCF9017D11C9AA761F3C6F69BD096ED658BEA8D
488E75BBF597DB49E3F42610D596C1D91A878EE691B388354FCA7569EDCC74F8
1852304F097C7FE339462DFA57C6450A6EA03F60DCE93729098B15814D6B874F
7AD36BAD40F1C39ADF1F3636A28B7A4FC8E7CBA25DDFD8FB58CC51647721D4F7
F3FB37F36472F6B02B8A87DEB6A8D8963BE6AA380A9857E732A234E50243714D
42F406A6967B964DCCF25D2190505A0360352CC62DF4ECDF80DD12D2896B73C1
64C32DBBBD09CEF33DD42F9121BB626B890F72473F24F37CDE6ED8050A9C99E9
CEA17F4CF9436DF8BA8FBF153088937C8E9A419410ACD7E079E70CAEF0663758
6AF5185655D71592270DC46238DC0DC7E5840EEE67CF5E402D7C685C9208DED3
4537CE2D964E164BC5C1902A3A3C1935CE66C4007EDE6965BA42DB0A8264E39A
9D4FEF2E8C745F8C84845942D40779816EA71C5E05CE9EF796BBF902893C8339
9D0C9F7CE2061852C61791ABA45CA3EAE19F5482258CB9F9BB776A32DD1CF565
7E96DC43141F02009F1C1931DEEE7AB6BE273F72CFB223F173BD86C842D1C9ED
10B006C9498D723A6F1B1FEFCD0C6E1D1FFE3053925EFB1C1A29059487E75C58
696AC556A5CB694336732534E93F351DAB00C1334494A0CDFBAC46D8224E8952
D8F495B4E3A10523D0D3A10238FAF971633F0FE9A9BEA10B8A83FF180E1A7933
72A5512AD1E2943EE7A0500368CF857CDEB23ECBA603CE654F0B4CB297E3AA3E
9EF090323BA9EA39DF033F8FA90DBA3D311263300AB0844D24DC4076B8B09187
54710147A13BA938FA06BDFE812F0B7B95BB011CBADBBEC510AC62312150CE9C
03A963704A38D092CA9F5B7E841DBC5A75CE61456C0CA380F054C4ED2AD90877
BB4BF16337454E773DCCE965FFDE0940ACA6FD01576E5BF8658DFBBC52B80782
8E02BB2E6C2BED6DBD88D7934C09C1251375AB571ED924418168D4F7A58614AE
8838EFBDA5D7B525C23E2C78194447371F9030496BFFC3FC67719A505F093E0B
E8952AA32CA53FD0886085F4647D674AEEC41A3E496FDEC2C0A1F90C1F4FF7D4
FC26C5E19FFF0DF9E2E43264A353C3C6AAE69F7356182961640BC70FDCE0651B
C5889E2441C56B90093EA15371A9A9879DBB7FB52F25A5A5DFA45DB0FDF9B94F
0AAD79842DF6AAE5843C949952BE48F9E5C850205DBA7D1CB69CBAB90443083A
74742E895C8B2BB07DDA99390B76151033AF81A1516607B892A03FB6E524774D
43991776EC8EDC00A8415D70BD5463DC64D0B5DA532493959354E87D3C388798
FD878DB9AB32D771BA8F05C3924C93325FB271BAF42325A7CA185A61D33A7E30
16DD6362F2CFDC26925DBC56B562DB11A93A95D033B6AA4DB98BAC9CF2E9D0D8
33D2160643FE8BD1B2662AB55A70BE52BA25F64F08F2F02F17C0B8C688C3CCBD
2BC6A26E593FD47076AC092A285AF9574D6391C93B9713965E239269390F3FEE
110A34004817B886A79776907A47591803200FCB6B820BBAF867A29A8186E7CF
623A14EF467C870B13366956299EA698C1A77EDC8CB025B10C08A5B355BFF414
E94EFED6873046F14E850D30BCFD2B6A49A29126CF9157D44BEECD08BED2831A
D3E1DB8A69414C6E3C4887D517D51B1E22FC3B705E5CA614E2A5EAA282DF6204
2B99AA872AF2B85E7C1C3E750A52C070289822BB03028524DA864820B86A6693
CC2CB6FD995D95B1FED23A95412CC3C8F8C4FCBCE04F3C65EA91889541467D45
1A5EA9C8A29053EC402B6BD68E2A53261C6DDD035005D9546BD701AB431A9D76
9C699B9CDEFE939E955AC00C6D0CDD00D1C3AEF69D55E28F1C35B0F07E78405D
BB56FE1FC9C6F3CE6BFD3D847DA4F518B81FADA81814332B622EB40C7CBF49F2
0E7ADF22AE9612796DEB9138059A4C12D55EB7424BBB2D32079DD408226AEAA0
C4DCB8DF16CC67668A7E1537910E6174F0EAA9A09F8440838DCF959C9D726489
DE8852D903268B55D5F7EC0111D574BA4192F93E2F3410E63460E19F6F1DFD28
1A0C4ABBE0D304FAEBA7B52D03D19CEBA6DAE2E0F7E40FC15759128D6CCA8536
AF2E6F6BEEE4ECC054F7DAAA741D8ED7C089B4360614B70D1EA14E7B8EA8A5BD
31E2FD4A3C65E04F45CFA588256EC10446E70F07D571C499F175A0A71B8A651C
0301184D426E46FDE470D568BC4A17A44A31E61DB881C20301BFE7129B8FC87B
571B2F7CF7AE4BA146ECD84F04D7D9E5B82EAE2D54B07B9CFCB958B67A5EE49E
DA9A5FEA1AA086A1F1FB33869A00CF375B55B8906C9A0AC65F0B0C6856116291
6242B2240D1236D610856541DAF4948A8DEDC522B8682FB988983C1298ED156A
0881303EB5CA1CBE69B19DECBD09D239CB562718A47A2340E21AE7CCC17E1EB1
59606D2297BC192D312488ACA3A78A2BEE72B7C1764AD9D987DEA45368072750
CAD0C9ABC3F4923543398A029D6D08CEA9983961D761AB6D4C5759EEE820B823
0FE1B4402942F0B098675BF3042A3E56C84398CD94F85590F436635DBD68DDDE
8996FA2403795AB215EA2035D6DFEDAAD93A074010C5626DD9470582E82C117B
D2A58898DD6564B1710A88AEF94B888C52681BAEE53D6C921E77DDBBD2391EBD
6625AEEDB22442CCEB8402DEA5E16C5BF382CC68A690BF42586C7D5DF306BD03
A65142261A3868D4250A18470A42218EBDF7B90241CFD53770C66A8E3DEAD9AD
B6D9ABC293DDF7781E5E437C26A228AE3B0A5D4BA4A68C8F9467EAD47506D2F6
B5275260250FD16C0FC15C0DCB4C59BBAE3A0C3B766E84C51DFAD234578423B7
0ED44AC6EFE221ADB5E725ABE897F3722C8F47856731D2B3347F514E973975AE
8458669836DE7D7DB16730051EDAFC10D2A983B5A2CE0505CD251C5041393BDC
D349EA093EDF3861D8055DD7605F9D205A19780C37B62D3D1BF8537CFCE40CA1
8283494E800D98D62F2E07884EE0A5128AE2D8D5A8649CDEFA8D0F98E63ECE82
2900EFE3946CA837B0FE2E97B6A09C36A90A7C7F9A414CBCCC6580590696D058
5C6A8BD7970E1AB7598FDA4639AF9DB2EC56C542596CCBB0BC5A6C56811F2F1A
ACD4B800D58CFC32379D202E9FE870D53EC343C11F2704A39B71263B7C3CAEC8
AC487A4BE1DA4D789E367BA68E0D0C3E8BD00B108257F92AE1869430C6DE57F0
21824D4078EE1312FB9ABF4D5FCC4C285213F93391F24EA4A1276706EC7C748A
40418CD85FD323D46131B9284B329B76AE8021045DC09C95C9AE4B4EF735A541
4D985B1B07BB526053ACC5C0FF6206B2953C9350E57657B37784263C082BC703
ED67F8956F3C757799D61A801701C3401782F8E826BC7060AFA7B325E89FBCE5
5E6ED5D4DE3754AA5A7DBE1AAD4FCBD9DB2E1289308A60706034F58795DF30E5
C68667C0DDA575B44F8CE8CB67BC77FF029C6E0A434525B5D3F83B68A4A45F42
8997E2A731A4F41957F566B490133D656784318768CC9EC7C334FDFB7A222AF2
0EC189665735038CC2A85D643E01ACF498BE91F288D238B270655735B6887D8E
063E13C6DE822ABE5FB8F988C8AF7468EB28FD5E0CBDF9E23D1FF320EBF19979
D5076D3C0BFC32DD3D646945B77CD65C9473CD152171B8CB64471AA584886201
56738617681E0A664D2287F22639A888B8FC65FD9DEFC68C0C2B37B06923F120
D4BC86D629C49699BE537834825AE7B8A44677488AADC2487EFD51D49F8FB8E6
45FF406EF09120A0AF8AAEC5173B1EDD90B90DA35A18C332D39E16F9F5AB7D81
B729A6C9F72A99CF91A25FF02E328BCEC164DD0E276A3EBD954FC24A42713581
33833A505F8549AFE87D9E1FB63B8F7077B1F1589DE405A8F821C2EEA5310936
F6232750B900ECD49FF4F461B6F6654C38E2AB2136F48FCC5A399596A72B3EA9
8F5ADA485A644A34CD0F70B5ADA7DCC9E318A93F20707869C5FD40D940A88531
0CD6D5CA9C351DEEEAFD729590483A1A2E56BE6DD8D4D500D11DA855BBA7D9E9
700516FD02309FC1FFB29C800A6749417B4A4C540B63B99730488AFEE2B5F1EB
1AE08BBAC909E4FABC0A0578301A03015901FD3A2CD7D5958BC9670F372252C4
0FB510CBD2D376519707417A6049A4AD8CD668493D535EC6F70B3279B4A748A6
4AC0801C8A2BFC379A48A06D65C68EEA00EDB0DAB677F5EA9680FBE092701641
53D5F93900B6DD28F30D56D1DE308C49927AE04C0CA35BF4284A1D19B8A8F7A2
82AD667DD1AA4D27665BF4CF6CCA760748064D77BF335721FFFB55A4D879BB5C
BE06D5F2BCE913923E011284E8FA157E9DE83E8BAD62DB170F58111FE8E9B9CD
C1B4F27BDAD2A04EAFC90D9DEE76C3DE6961886F19B5B15D74CB098F56CF1CB3
41A14066077D37F06D785EFFBBFEBE58A004C72EB674E5C394D0D8DF44C17246
D24B219615F18E949566B2BD1AE555B2184E9DD2571CA84F117D8558ACD6BA00
98C6EBB1AD2C0CE1DAF2EECA199594CF093FB8D49DAB28DA0EDB9463FAF363A3
30BB06435612668940B9251CAAB8CBC7DFF25896DCB006DE3E4BD74C1CA8891A
8E08C09A601506D570AC1854042ED8855F3D5E9ACFBF5A658832D462D39FD082
F804852B9606E8E074B6742A1847C136340CD545E53FD2466AF5A50833781539
07622D73A70D1D819B9A15C0932A7F5A8E1ECA63FC9A5ED285837271FAF6CC61
1DC1EB5E5F18BEEFD51455661E67BEC675BB4B5754D6ABBCF69A15AA5610C82F
E9B6F9C2CCBC0FF2E710146CB7423BCCD4447BE0C2D6DE59B1BD629F47992475
75487FB267EF3F6E157210A3A46A4A30114F032BA029D82078F7AADF6C172487
8BFF7A7084B0859FD5C0D0E719A419967DAE2AEA2111F06336C394A67EB4705D
5E99A4AF2383F8A6FA677F1EDFFB70E37A26C6C3F2E101693C94657068BBFFAA
DEEC1277F9FBFCBF4B160F12C32FAE78D27C27F51BA75F725249C5FD6FD166C8
35E1CE79E47B28A86D11B674E02030C1CED85BBEE7CAA241A4025CC664E75D63
97527506CA0C9A886441FF55ECF8069E82BBC87D0DF684E0A506ABC5E8D8015D
7B38C7F77D12BC7D6D7320C500F42B6AE9A3439F73E47924A24918A8ECE0DFF8
D3FF489E44C5390BA39A0DE57212027023944DD1FA99079B6E71FC3C112A2667
AB420374B85A3C89DCB80C3DD16D4C63A99114EFD23133E2FB8243221A2E8AB1
C92B2DBB6AC3949FF9CB12318E20B680A50E700B9A05B727181E4450C0C994D2
FA8F4EA0B31BC62675775A139B58EB67E216D0BFDFD8EFF9C41FA280CD6F62F7
2BACCB11BA3C53C762F8D785BCC025E1C5AC920040F5ACA6EE8E251BF64F6E80
B5B84E99152BFC817C23C624C216FC29B9A04DA6593C846B1FB75433B24AF1F6
CE1270429A7D373CA7BF15B974CC4C85B92A5B8592BE056026C8C35B530C6C6A
F3F1381F095C03F918532C41F7B8A1A5502066BA347C03BEF3B0585CF4539FDC
66915E2211707220625ABF475542648A4DFB65D7AD4E0C08A5B355BFF5C3B2C0
BFA6459AEDB6C7A96847EF66B919660191C510FD25E38E430E37B4681B2FFF55
821DA4B42857AD100D8FF75DC022C87C80B09AA1AB8115B82581629D0C9CECF3
4FACC8F587351A0F3247039946C764BD2088A3EF015203A4FFA1AB0196CF0B21
F0851081A26969E75BF023150F882C720C27834570C10BF892F79B30340EAD85
376CFEF132BC70894EDD4B14385F5BF95ECC01C22DF26B8D48A9682559E4C206
881B58EA640A934223A46C1810E86F4E37946F0C146B9D507EE79DC7A715CF4D
65DB27C4B6A041849901838D0A12D47F8BCF5CC5768C0AB338B0AE44F4BBB849
BA89F2AE5877339D1F2ACE6E53FF054D6012947FD36BB2C736225102573D21FD
0B03969BA0133DE33994CE686578051B8FA18607195141C582FE8FB2B0E55937
DF0CDB33E479A0BE74BBC7DD92D941DD62141832DE58D373297150A1BD255427
46ADFAE256888E74231E2D97BA8D3BAB84CF7068EB16D13BA07154D1F20CB0B4
177CE8CECB8FEB6EC5CB1E2301B2DCC11D878E7CEA0E8E12927C72729B927028
9731E6155BE79E19ED48D9C21B126F607D31F950B24B2C9042139D5E7DD43912
E1C0DA907A17868AACF3229C176FC26BFBE255AD609B606764F90484747EB6E2
36A366D8046477D04EBE56E5F6DDB1F7B334E90E1996E4C2B83A5863391C91A7
C6BD12B24C7F82297BA7530C442B5E22F23C7CC8F7E463DE531E480FE0BB79A2
DC3F72DCCA2A8F59A0CF417AED1DB87E85E83DF175CDB2D6A33D9F022EE8622B
3B97C4ACE2EF18F331A58BE4704E5130FB4984C3FE2474E6CE509C5E8CE27B8C
4B6E8B4F056867F1C0B014E2B65B5E99B807ADABCA84E043EF7C2EE7F2A4AA9E
F432736C202F652195A2E0802FC871CA864B3ADB40C28AACA1C46C74743EB7E9
2A2386B678179EE7279BF20CFCFC70378DB669EF3046476E8D55E54E29F36681
AC18245D025ABEF402231450985FE13F6F382BED2C0333FCCDE9366DDBAC2C66
1F2A720B37C4B2DCB7F7A15864E73339C9C22D94BB04C36691ED7A4752A86233
A5FB3FF39EE53D6C1EEA1939CC314F9940AE48775B4094985B207F8A833036CE
5499D6AC9ED69D15F816E3009C46AF7B6A2D09BBB70F597AA8413E3A653F17CE
3D33638C065EF056061AFBCE55B788E528F0B8FD58B23F21FF9FA508C699D459
00890C51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B148B2E5D5C1344B963C2
2330524564CF6C39C230A6A9FBF6E2E3C8B5345709E0843D17D3C5727AB54DC7
57EB089AD3DAAD0AC6745916FA18BB7F7D0DCCCF62D091D525F0370D67F8BEC3
15412BA9A18E9744CAC5F1C047BDA8013050F7DFE9C41CA2E176B812C0B6AA34
7A4DE13D07615C2253C08645F0BE1E25404BF8131379A057266484C243FAE011
FE8040A6C037E0080DB96070BBA2BA847577A1FD4BE5ED75D83C8174AB99A32F
B1ADEB641E1652E288DF692066C49523AB41242F1D916ED69D1B7FB6E8C36E7E
C9D666970F39E1F01522BF2FCB6B28C527C32DA14EEC2E1DA96256A9C8141D8B
7C8067797C0CE920DBB29AF0DD2A35EE24A912A8D5E2DDB74CC4C42DDC9F77B5
4F9A9C7DF8232322B09B2380C063A52D3CECC51DEFE45C62B6DCFC453DEFA99D
F6B76D0987DC232178A078D8F27661DF6F504F14DD921D63C229C8B7CE8F110B
C4971571AE8346399477A2BFB3D7E65C04EE0553402D15DAA2F7DE9B1068A4AC
9924F5FB36EFEA483004AE42C09CDAF1F5BC54BCA3800F83AAEB8F3D60AE5B12
0F1639F94F85A6D16D469A20CE3D0401A7B165F5271B585DF3C3368478CA9A03
0ADD671B749B3E72662E3939C506EA99739D0B801D30B1357C343256FC54BFA3
A7FD94B0B3E92318129151F4039E69F162D67BB5DB67595670D82F5FCBF73EE7
957AA138B65BF369F7716494BF36A317DAEBDDCBF7FB5979EF5F012CAF413DAB
CB3290E29A0CEBF1C49D12A611C2B005EA68043AB68B65853123998555096448
25822602693C071225D0A59742608FFD38593B5EBCEF5CD9063DF88E60ECE319
AC80193A8EDB7A580369E894B894904916531564BA32C99A9E9E4A7793BF6F2A
AFC83F83B202EAC8DB0E948EE3979D2D9049B4A3B6FEDB297ED9CF20980B148F
6000C565F75E3F384644DB6531F5B0D2ACEA0EB86C80F96777427823965F9090
F8EBAF66657BAC3A58A4EEDF997EB49F8D967E148F381C96B142B58F12C792CE
24D1E84C8CE0F5FEAEDAA325B1E162D69C399F75811DBA593EFAF5CDEA803796
A28C535ABB9A806FB807693E837663D92A3DF30AF50B62E4E1C5F42738CA09B6
28CC646123FC9C2BB8B9149CBADE7A7B29050258CB8B3F35F8ECC07BBB7E68F4
BCB0B429D1000A5D14BAA0FCD33A038BDF794449F8035E51371E4CAE8B6717B2
2B54C2F289AAC0EEA7F800BC86CA8D7263158488C7F45F09194096200A65571E
7C455D56202343346FA991BED6CD2F0AEBB87F65D5E67BA200E39A0DCF5BC262
3DB3DC17E5BA3907257B07761EDD4E519CC81503A24D91B8C0B4B022FA0CD8B0
AD48BF97B97292A18126594243F63B1C1767A866F1F9B4B27B64CB3D4410817F
787D039985F2625EA0B5B6DB576B177A69483B2177969C189F1ECB563D490908
1BBEA2BE164FD761EE98BF5B13E05A4AF2145FA0FC5673FBD1F0E09303F8F6B6
6133C455B8679004B35D754A18A615A3D23ACD78645D88447B7F8B9FCCCCDB9F
327097EFE73DBA9E508070C5EDEEAA2779ADE503EFBE1DA2772892E691EE8576
E76EFE90BA530F1F6510D8F19ACD02E04943BA7EC7F18E90B0C715B603E4DB82
C3F537C0AFAEF1C3C82B483BAC09D7138F98A433D6F3C4B442E014E3E5A5E82E
52DB5332A89897874A165F2B6E7741D38093834D9D811F3A0088BDE8A3FF86D1
A71187A40F5776AF971B1A2B727DBD281D50B437A5987C43E34B7A21AA7D151A
5AE07F30210236297A35C7823CAC45513B2A9911B39603B415168A1FFE7F8FA8
9C6DE90D57997B9538796607766AD28F7DC3CBA80B470A7BF6EB039F4D5DC1D8
477988E9866A5B274B43BDC92DD26021738105BCED3E94CECEB2E6E552D1F63E
B4031EF5BA8990633918F5A211CC9414A94BE79E294517D420CDFB43CD103ED7
A1B9C2E885C88F882E29F26CF01771072FF46EC2F7A7F271B49E919F88E75810
632817B4CA9A60E233CBD4306186957AD9A2ED31221E10EDD484A21AD62D6867
CE44C3ABA2D259E27A0625D1B09D3D5BEE543B7320DE2F49D840FC89CB8AA5D5
C034627C1F18E5AF418B6ADD311C9EE0B282AAD6EBA79E856AC2ABE5F1A7A225
BF26E2AEA0F352B9C950B47ADF650BF5322BE25A0D74993713AB2FFA10EDEF12
7303002CF4BC83F94CE7152535E781B50D4E0AD7377674DBCD9FAA2939ADAC08
0E47FBD491626CA771E2B69CE5CAABAAD3A777041F750B32E2AEDA32E97CB5A3
F56B9C5CA6F07886E2733B4D4C76A47A1335CA1AD3C2B451361DC744F3DEF304
37BB056519FF432CEA503118F0A2F57D33E989C6F4996C3B6EBA31DD3D93D530
92B551E8B90414D8083DF432103480163422D6F9CCA70EAEC1D37A6200BB1793
25C4F11DD771EFB1ED519E2252A8110547FD7753567EDC18F124929CAAF97010
57B34D94BB8BC0A27D0FD32689BAE1665CE873BCFE5D090A8984E98030FE6B21
D7FAD7CFB4919689DC056AF826360AECF7C4B350822CAC8D25F5EB442BF47047
FF186B26AE1DCC2AA5081B9159603D179BA7B402E60BEA64C8DFF7212D71A06B
D709168751D0278D6F09B8DF311CD16B40EB4BE72BA1E3134CD66F673538755F
135C333B87D339E8C580C44EC9A7A6A7DB0BF7B5FB00F28D7848438AF0651F9C
36506CDE2150500E0ABD18DA8559D7632BD41D1B82A28B48E370656D73C5C6E2
C88FA9336082C86E84310DF2E15C2A8EF4209ECDBE4141F92DB575C1BB3E34E3
C41615A138B1F738C8EEFCB46E6DD65747A981438EAD81C85FA3CF7A551A37F1
F2C83C47168665599D948896FB43C31F7032018FEC373D5F1AD84FC79DE23E2B
A52D8EE1B1D3F8031EB159D5A3A254B508C25C05E1E64067D6A39719AB32B50D
D7177C020699005F6C0D10D78585740BB798449CF11ED7604CB862B72FFA7E7B
566BCAAAED470B4E2C6097F8756B8652D02E450911B9742ACBF7875898BC2950
BDE9E5B1C1AEF9D75056B84005CD292DE5F77ABE35B2D54BD6D8F56E7F4C814D
F759C9620BB20BE364F998698F5C1407F27FB4A6CB0413BF89C195570CB758BA
E3A344BB2B381A51DD43C6B44363FDCF69CD663592BF1214E5EF0EF9CB853EDF
0D22CDBB0F12E75F746021779CA0703C77C8D6CB46D3A904810C8A2370F4DB0B
95DE9F7CC2B34C95E69A4F2312EC701C2A55C23A71E12403A443514E8D6380F5
E9943682A51642BA27C943B460063E42F52D9DC7ACBCF38CC4A173A9AD53A10D
1FE691EEBC3E6CDEFF96832AF6AC529FB8BA5F68FED42DD602A9644C84C128C1
4C541A79AB344653C18DDDF57E5E5435E5A6F738882A925B3BA29EF6811BA54D
BC158618BF04C375EA3B8C5BF484B007BCCE2E6076B397B9E5254B8BF11D2F0D
F98952C9E6425D4FA67A18F9FA13125D8B037CD15F85C747E09641C53A94C451
74899AB3A9D824CE570B061C1DBB5E4F958D452D448485D7F64F8FEE8212CD77
2576CB9F3C1A1D113CB87969B0370D0DDB829296DCB0F24A82391CD122E422C5
6FA420378F19CA93390FCB59BF859D377254B981CAE483B8C9A80BADAAEC8F16
02CA49AC679B570FFE82B8EAD68AC55C6313424B8CF1189E3E8EC791AA2F7760
754D8ECEA334EE267256720D6CE4B739FFF604C2CAC70727F24CB5F2B23E93A3
CB703B62F86A0C94CE082C9B9A6C7AF788223EFB01D867563247D83365E1D8E2
B8FB0DF6B5FB6D5C415495635BDFF798B4C04F9CEB8ADF3FEEB11F09918F66D3
E5B19628F781B15764DB4ADBB1652A3583ABE38CE55C584D2618007F4594A8FE
73C9E3F0777350BE92FEE3430FB8AB80908257154BFF696A03E46BC6EC917F5F
9D13D9521CEA49EA4F112EECCE5E9CC4B52E97089790D08FFEEA7D143DCC7836
2FB6BC949688B30F0B4F3FD3AFC9CAA04A796E5AFD622D099492C4F071336D98
5C0C360B2F5A5877FD00B2BD7AB0CD9E6DB66F4979A1C73E9CE4E8B2ED99EB20
DBDB427B863AC7E6CCD3D272C580211B33A99DC5E168EE567DCBD0403E755FE8
96AA75B11435C7A68AA72F30E147C11C4E4DCC86D3C62FE9E069A1725AEBCC5C
B1F7A80F0F3A2E74C601B6FA29471DC34814FC81A1E1A5155DA9631B06A88A03
A5801002B9022163FB04B20374599170ED9267D15B47F0D8C276ABB12E57A0B2
4452513F5471928E2BD26B88BC187C9C269F9612DE43BF8677510249638732E1
9907B10412F172EB259F4C3019BA07B492EC5650F35B218C84C71F31586B1B12
4E8583E8A26AD2864C33067CCC4A6D417DE39A37B06F4474E1986D7E49340651
0A8E4070EAF621CB980A3169C511FA7038A964D1B9AA8DB2952490344F0E5C23
806C204556E4E912CFFD9238607DA31A589BA7AFC5418E3A9EC3C51A42EEB3AE
4C6CD7E7B194162962680130D78F963D5FA2F4C860EF57F9251FA9B45F45C363
0465995BC3CC0B5A1957EC8BF8D5D1F781500EDF990F78D69354FDD35C775F01
E89CE0D1E726D460DE413EFEA669B791CFAAD311B1422C44EFC191009697138B
9170D8C568BA2953EAEB261E696CD413485DF93CADCED318B5FA421ABEFEB645
46B602E7940BADE0D8911A6278646600CBADFA32BE930D8CC9EC66930E5533FF
3A7328F0675312EB108276CD217D78472D45D88F12CD081ACF2464284F5BE381
50CE9E6CCDD4233EC7D5B8DFADB5303CD0D839F876F36C933AB91593FA24BA11
A61A8B40D3229C18FF66742ECA8EE7AD235AF1F50DA985D21FEF5897DCC7EF4C
2E13DC0FE5F0495F54931E74E8794276F856200CAA43BD02EAF98EBD7A1288AB
7284B078FEFBECB1DC8F5EF9A32E919650F00D4F0240AD2B6D0FF2710FF55BC9
FDD7F44714E9BF0DD2185ECC3E598C88C8D611168403F65E190767AED7B24F09
528EC9648A398EF90078D11D6C0468A4252F5D38820C6950A8B323B1B8648E3A
FEB8276BD01FBAAA2524F7D33DE2C3F202B96AB0C59A00DF442CDD47365B4224
6117A5BF1DEEF73D15FF20CC36B412588546A99AEC79FBBA92A27965AF40A71E
05E4BA8D7FC14BF632116712218F9741A9D0BC2BBB60C369C4183F610A7635AC
03927DA998AFAD854F5499EF1CAB0ABEEC75A65640F2AF0659F5E84375670C3F
3B3EEA6919CEB47D9A39C3AB79F8E2D1822F056847047746609B0E8E9FCB174F
C3F6FBA6E04FD4AE3B84E8887A9148043DF243ED6CA02A3D52898E8372455FDA
5CF0F7F1526A33E128A9698B62F9DE7B1F1132C5610D9621B4C35309020E1B74
FB0F3625D327174D5B07C80F4D60994B9841785AB7FA3A76C89B41DBCF24C391
BD5993F661B75F403B0327A58E94861527D7189D8FA2FBCEADA2194F7BCF7AAE
569CEF156BEC782E446621F4CE9B3FEFE3946CA837B0FE2E97B6A09C36A90A7B
4EA663363E4B3BBB6F116B9FB10A83A8AFFFCC65011F6EAEBFC6867B4BAB0208
DB3C5DD474D8829CFB026CD53F6D6CE394898642FFE0B0330D747E4E19758FF0
51630B02C72AACDAAF2CF94A6DFE0713DB9B8CBDC0D146C11BC9DA714AD9D987
DEA45368072750CAD0C9ABC3F4955845A80A303950EF8E8D07AD70A62B8B43DD
7108277CF44C844C99130FA462E978EF1895EDC4B79EA6F9721C983DC2D1A29D
088F6F06857BBA752FD2A7D6BC309B32A5C5DD7015B4C4BEC14BE403299463C3
2D52D9EEC7DA688D898E7B9FD865F6ACEBEE0048A023AF77116B70ED6A5E4764
B007330E8B09C04F7D75830A646B007A9AE8C442F7028F75BA990750461013B1
D19A1D63FD3E99197DA4B355B302DA747B08208DE0CE3BCA949E690DC70C3561
01D68AD8E42921EA6EC4EF25A13D8A05734B00F4064DA9986794B83227FD4117
B27984A141A4B19E695DC5F380E643364248898324FE1AB2F1F8E4D0339BA19A
26C9757D2D2A95344A9BC70F400C8112DE7DC2367527F518BF4231141A70530E
56A19F37938BC8FE2375FF04E586602D962D745036951CBE2F48745501CFAA43
64CE923576F4D1CD45E138CA96F307F59BC1243B45A3FE3037833A70CDE99CFB
059F74A670F8B7E5275582F7A29F6E12958A21EC955C2532B1A884523A0634F6
7D8630316C213440752399F99D1DEC54747DBFABA108CAF40318DE8719445360
C8081081030F8F05464D998B930B8277093E4C617685D05AE401C710E8EC03A6
4D8C462D8E44D6678390041EA0EF9C658D9B0296884BA9BB4FD86BB1D7B52229
63DBAACBD071C3701EEB814F06635F9B5BE17B4AC256401430119AC825F0D504
9DFA74A19F38BB8A7E6C01713D3B30B95F41BAA04890239EC93C0C768F23B3AA
AEDF031E76C4DE35D408FACB8510AABB489BF46A989823A93F31BCD6269FCB4E
ECF3171B30132CB709ED92AA4036F7EE60A5CCBBBA0E372FCA0A5EF536CA71E4
5A08E1A3E159C78437EB057E444AF8C88FFE92F26FEE2A6C0A13F56BB1A0E289
C7A999A4330CD4CA8DAA5B4C6FA0017A6AA6EAEFDC44DBC7C26C6ED12FF6750E
6A33AFB39FEEFEE14143654B5371340E1067A2A61839FCCD3BF2F77A11856B76
3454BD5F697F683D35603984D60FF9747F3B38D6F064C3BB1A93A92F1265789A
71E5E9E7CA6B99BF01F74A6CD04E80FE8CE8FC240F3323EA950C0F6331A12599
2C686832DA19007A512B2432256C401DF2B9FF8D46AC997C8ED678DBBECEC95B
1E3EB16DD6DCB8903E92A64E782EF8345AAA0EA74EFE4492AC0F942F2BDF799D
4F640E9DFBA9626333A5265801CCF955C1E7322DC274C63378573CA78C550B45
EE3720261CAB35E20F08CD569E5C6147F75B3A9B3DE7E230CC48F8B90156A878
26586FD15B81A40B9F99E3BB11820D77A6E1DC6EB970CA5E17824D6A9B57D1DF
1CEC7712FA5E6E28EEDBBA16DD913ABEE28BFA1EE081811FEA1AE3C2AA46C5AC
DA21541C44C3092FBC68C718702C35B6334C7A02522052DBCD7D1C12433ED9CE
0AF54C73172253EFC739D751D5718E5DE5E7FF04454A49B719BAC88C6284076B
D9BD0C242C7A60AAFA4E615C2367341815394F0360220C86E5BC4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB75C852CEB52B1DF86A32A0946A3BD1E8ED4B7
42EA9055B0CBD6B2FF589643A3620920A5094765F358F9286B8B5789905B63CF
391ADA2DF440658BC5CBC9F250F58B022B396348FF0F41BFD3E96F9737FF3C88
5E083C382D1CD3355BE99A2F7451518F48211A04F42864A28D9360412D1E5298
1EC5E5A1861BE4DB32C5573D9F11323AB2EBC8546DA89722A7ADF729F45DEE8F
3E99966BA0D5ABC3F86E329CF3D929D1CBD7B767B02D64F2C1E338E66C707998
FAA268D83B462FC0BD10BBBB8DB7B12BB1011EEDD8A3A956BDAF4392A5C844DF
9DFD50B9BEA18D947C7D0C930304DAE34AD74C4F6EE4D88F814913C32C56CEE4
BD63310AC5152259D7DFADBBFB1295C7175929A360F9226C2F6CB26B9C95E60D
2DC40052D3478EC279E6FF848A047F8130CAA0B8EFFF57F7B76C620AD57C3329
6B8A79EB7EE2609E8397C2DA3E0F382A4C8057DC8128494D811D9E356555DA1A
22700A87C2999DDE579B60444EA834456DCCF2D7221490784231EA6CF28982A4
470A71536883C4913226569816BFC2FED797BF3FBF60B3E0A4B8C39E8266F18F
7C2B8810D01F7456C58AEA498BF279BC76B9BE18E2F7ADADF3654EF0034947F2
1F3C35894F7C1DA8C83F76ECD2882B91FCF7E694BBEA02488CBF10A2E4D2E1E4
C1597DA77B79DBD87A4C7E777E76F039C4EE3C95445C0BCCE07CCF4C82B31849
4F42C776D9482C822D4F9CA5643FD07D8F6E37275108F7168F45BFB50248431B
C2A949B71B69F6AEBEE72A3DA2403412987F9D1B06A2743ACB24EF5B77E0CA5A
C1E6F13A8BA831CCF52D284FF269BFD4C2DA659C00B09364F5192ED3D2727346
FE6E40ACE8349123EFE3513D141C31DD7109BCA7E9D9ED0F31BFB773789D9E08
F493C93A3EC860A40E2BB12B9BFBB1AD9033DC3E92F5C73792F8B6761A8428D2
F02C8B76FA8A15C7EF4572CBF44F415F6811797E4C4F8E3AC21AFBC11E4A1FD9
64D7E5035C39382501F2377EC75AD77B079F4B1FE2A89AD72D1D1AD2BF8BC6B3
1E4AD8788E3A7386A25CF46386D6975B70E30002CEB0144F2FCB665C8D6483C5
8F2F27B706A377A048BE4150CB95C6FC79CAFF8081B614157E35B519BCF359E1
537EF69FE8DACE47B40BF4ADAD86EF5BEE825C3F850B6EE405BD3C1560A9CD30
50FCBB2D04764B751500A6F3AB7A8D39A4B776B4507ABF3F1E973E8B4F3DAD7F
A872B15FAAAB355FF5388F7B9FAE2D16C78DB978CA99B7CD78F3DE75196AFDB7
E99FF0558F644F2A1A8DB5AEFF0A584F6BCC0A7CE7018A3DC0501293A5FA8796
AC1ED4DCAA4A658949533FC3651A3B3D100EC7F458B977A9F37112DCFE34D8E0
B27E3AB84696304079D28D41F52248D706E117DE4CF21D0A2C0B8421B2F57E7C
59C915927A455F2EE048284DA943C10F8DECD8B6327AE6B4CFD16C32B42CF908
377DFBA9165CAEAD2464D8D80FF6C61F4410BE7699FF1DAA6092B4D6EF00FE93
1D4F3223992DBD811A09457BCE491C0D501CAB98B1E55CD8D87D04D8CE052366
FB6446585F0AB44F83A07764C5B7017A8DF4AE3478C68B4F7E06C9C4F5D509D9
C3917237D7D9A9A9E39661AC586B9D71E1480CFBD7570E6AB5CC9A07D4E0EFCE
364DD0022132E74A3A6242DB2233B50B987DB1CEB9DFDB7D27791E984A7F14C3
59AFC59257053072FF49817CFD5784B251F2DD0A9985A13B16D058121778E936
31D91E3BD5243F38B3A1A42667DCED2DA7546D2A60525DC13209A1520FC4DB29
7F5A7BEAB0D625692F612266A93EF535C7209137EAFC4B58E6CD01B59C73A14D
BFB287B7017F6AE0F1888DECB2EA11E76136A8BEE3EF6F42974E0BFBEE0F5E5B
BBBFA39E4CBD884D4994A7EC9407F5280FE5690CC4776A0299D8043C4F35B031
A2488E7B130462CAC1C61A4E1C41C494C795ECF17CAA969792C8628B6809C79D
5C0DC21437639C870058C8994A6AE1156CC43259B56418DEAF3F53B88544455A
A872810C7948B1EC866883E78846DC10DE5D0AFAFF0687C7FBC708A7DFC55327
ECCF5EC70BF699FFEE5B7FB9F34A31386F07D66ABC40B5D1665D5D0D14A57EE8
77A5081B3F9D9B232AD60CA1EB8A46783A563741DF251006BF7EBE753A7F2B82
FF750829FB6BDD6BD8681CD2FE5AFDF853E1020D7DCA0782E7835280F5C185CD
6EDA68951673D6384E6CD12944F86D178C9023FCD9DDB598175D1A0B66EC4F4D
EE6485FC184E98E3936F774C96204A513E6366951F097DB74D745DF4FDC12B12
0476718A1CD9960D5448556D1B2623BED9C88097F99BEA09B37359A4EF5EA889
861CD9A7048BE25A7546B6D1BA877673C46D2ED30023EB3C9C310FEDE003EEF3
A90BC846355944F7593815BAE9459264BB59E8ED0B97CDD85EC1BE70A479FCCE
5C4093F4AA8854274B18EC1948D63AE725242BECD5082219004E8DA71604E693
30C271F02F4EB6053600B9D729D124AE2CD6038DB08BC7010149F2EAAF5E9571
95DBB96DDC4785E9818A96AF2ADB5DF40EC09260152108652CB1D729F35FA285
1C69A78BA08CCD5790DBCCD67F292584BA2A471906D47C2572DCE74633BC3D10
9747E0911C7859CEB157765BAF32490F503EDE0435F57FCCEE637518F5812EB3
51B6558155E18559085E68EB262A88EC25462A4A9EAFE20A956D40CB7EF1D5FF
2C33B1C5EC90FEE3087B3EBD6674B9BEDC5030457C149A25CE9F8E3F4F73415A
620F8F1D9563FE9CDCD186DE1767436A743C178EBAF80C96264722C4B2DBBAFC
5DF8A50E6F0C48860C52FEEFAA70B595334550D36E4825CF63C13B40CE21656E
37A0FCB6836AAAC078BE30DA6564E63E4448BD86AAF678BCB0B56BFF435FC0AB
F5313AEE8115D704B5EFDD568BD9121F52279AE3615627AD7D3A2BD3882B5E36
0E01C606CA377DA1F5B6616377CFAB6B8AC894D3DE5A07441A79952846B0AD9E
0EDF1776101127A16E83FDD2A815D41BE84B17CA417709D51F4A01FF16147A85
9B82A428839AE349A5475C5C9E0E31113B251001F008DE01DF02DAEDAE3EE928
160341FC9350C5B0600791191AE0D2C2D576DBD6A73FB4C0717A48D2673B1329
06D4F88BF12A3445794FC9DB3F1BB11C74913E3561C72800157712E85E97349F
AC7329FEECC9A8D232BF936527C3F6251DE11B8B5F815032AEDFF5A61DA20D36
E2E8C1494640BCF0294FF2103926BD4D86BCC7C6AF76A0DF223531C12CDEC349
D2325D6FAAC3C79BA482C2CCDA4AB39A27AE30A0B1536D76C9184F8DAAF5365D
8A621A69BCC42ADF231AF58032B8A905FABBEAB97B93DBF1EF9A2B346D99DD16
B544B5954AD8CC84D2D0FB4B49E4F7DFCBEA9150C9149C13DA7E57E3A9D008A0
9CE9B960E68E541F9694971041765C625BDE769F8FCDE98893AC0F7BEDD9169D
C9FCFB3BDE32F3C81073D5630D72577F941648A1EAB4225390F130D83BC8D134
CD4F5FCBDA0E9ACDB172BAB4BC14259F57A28726BD7728C6F51E99DA710F6336
E02086C28F11C405085DBBAA35C996814AE61062CFBBE3E909EA782947652EE1
052530750BFE1E2BF51CB44C8FF3ED38646DBFB4D286EC08B63B479D57792BA9
679207C76C99990316B85F8A26D92288145451C9F0A3106AA42D29B4D95429C7
99864A878CDCA81DC90289F328F160C06E5E4FAAC7A0597A5D5339F772E9B5DD
2410FE815C9A30BECF078BEB126FE436AE2F52974C3507985F8D745357427424
96BF9D6866DE7293A1F71D4CEE4B735833B4C2602CC1A35505C7C1DB230E1EF6
383EAC49D9EA3F08743AD06F473DCA9E13A89744AD012D7881C744C836EF4704
2D552314FD51252974783DF52E0D44F8F019794BD909AD66B4E084C167D7ED7D
209BCA8368299EF9E935D33B02A4BD195B3BCA8A0BC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA509A32EC58088B80F7BDDA0E5FD8387A56DF7864A
73195645D50794A8CC817EE4907CE2630265811A41E7AB20C717848C85F24845
B77B6AB4FED8FA65A00A4E6C51AC3CCB3B6C2C5FCC5A757FA50D53E62FBF9117
8720FA2EB8E25C29B366304078961DE665ABEDA47B214C73AF9982B447F067FA
AC92EFC1494640BCF0294FF2103926BD4D84D0EECF70D7BCE3B519FFA1FA6E54
E2459EF62838C90AA05E5B55E0B9D042DEA04D480710D369A37106279C91938C
746FFB2F9BB1859B9E19B54C00F83DA7BE791B44427DAB18EFCE389A6D7CBB10
8D6A49F91E1C73DA70945B9BCC22483B0FCE601FBC0E93A89172B1A13A4823E6
45378959E3A4959132D9C1ECCDA935354C7F42AD1879C36707754E855326621A
601576117EACDA8787FF9BACD78AD9237044496B37B24C04342FE0876C068732
1E1690246CE183BCFF43FE799160EF194087E7CB8D3BBD6FE1DC8600DA605D4F
20DE4C1F23B16A9440AD00F6BA5601CEB6D079BE8730D2B8FDB828986367E2C4
F0243B2FEC24DAF9FB3BDE32DC8120E63045002D044B71370D2195B0745F3290
1A80A18BB3DF60DF1D9C1F0526611190E892D8AE707B0A9B94E0BEF9D47D2152
7A3B1D808785CA3722DDAF7FD77CB534E74F590AC18F55EAF42B6D05A121EA22
2FCCDA3CD2A9C193BC563E5B01C3DA1CFC82B6364CA33BD7970142AE10B7C80C
03876B0FD46A5993942E143A26C67464E6D2CE3F0D7E23C59D2CE7BCA07E8E63
3408FF890A4296F3E9B0D405E9DEBF3A7CD95A823A176D8387CA420A441980D3
E8666043259ABA782F63D89425977C174DA2373189135E0ABEBDFE62B5E9E126
0F6699D945A611A7EA348DB3C86BE4B088C77C2D7887B361297AE1D1E38DC825
12E4336F135570D8D7A6DF940E23FDF870E2858CDBC2A33039833F934B4283C2
33C8744FD5EC84144B2966F72FDA2235ADA8515C4A4972910354AB20C935E0EA
158B8AA0F818699F292ADF54BA19904BE3D91A86226A3B6AC4F4CAC71F4E90EE
0661E9284998AB98F1DD4E042B66085D15EE7C54377780B0FDBE164EB7200CEB
625A2E247659B8D7B2924AF04D875E139FEBB73B10C153AD89091EA43D081F81
DDE88B2D64C4FE2A7E42C5EE6C750A2B0B8180E5389A54B85BC69FF37B8CE078
CBF4B4198881C0D98302B116A463934A5A28E8EE8C15FEEB5E5E97328618BF64
DE4BEE2CB0F263EF782C0D4C706214FDE117584140381D43F8F39618E4F57281
9AB997502F351D81614CD73E27F230046F89E913D027C8566DC51D99516B2F83
53F69FFFB5D736F85D789D3932A124FD8EE5C6C240D3CD3CEBE1A6915BA90066
542C50A6E3D62384F9ECC1679B6514C107D7B3A61604DBF81D603AA8E1C41CE5
D48D0DE181A612268EF6A85F4DF4B1F9DB41360FBB27DAA529E2F8B9C28DF8ED
00645552C9A12DBE0028DC8EFFDA32825936EFC89D352105B50534C875CE7155
4DE156E4428BA4CA6423C8B423687C5E2EA01816ED984B7282BDC153E1A5C4DB
2502C4C4A91BC788FC12516BC85BC89A23C2CAE0354074074C255686B775090A
16F6936C9A0AC658AA1BAAC24515355F9825C843D0C6BBB366C705803A301902
F1854F5CE3EB154A456D5A77B0C43821F04397EF15C2A291A8A4132F4D574134
DF09895804413FFBBF3732B48869A480A92AD41E3E1C55BBA48E5A24FE6FC388
0C639397437CEA43184F519AAB4A64AD7316571013AB6B2BFB92089431CEE093
1D3D2FB86419F748BEF99438A2EF8990A519D704A287889135BA6DA1CEA9E7A9
E8D9AFFE49AFD568F517AAE9AA5E1BE66C2C522BF8E5FB4531330E02C9A8EBCD
6C3AD71A1A0EF8A166071BE79D45CFE4070F971EBE827C4A232945839B2705AB
65BC5AFD9F3DE5666DD13387024C159B3247E7CBDCCD90E10600663B161A15DB
54D1C7DBA7F9F4354B5BF2FAED4B00F36F2CE5F46491EE8653E75489FF45E41F
46751953C4725CDC99096AC0CE936D0C68C026458DF297F410F90CA7DD41C4F4
F49423DB796C8B7268EFE5EE6B0CC0781AED1350BEEDA282AB751C4084618861
1E976891A2BDFC66EE858D35E1617A76B6B93D28A18CF021042D11CCC1BC769A
DAA1A5418AA997C16C2988EF7E0148A1DF74DA038B94764147780ED76337619F
86AF1FB6373D0CEE6B46717FC81602F35D0F54F815D0B0AD37CA58CE08B25D36
33AC9FD325C398E049FC951F28A391F664BCE4148D346450E92E971F6A420460
19E11D040BB87BBB7ECA6D72FEB47665EED274860C3BF880DC2F6C80CEC4A92E
0E35725506113918E5F29C3C662800E45BF5E62E6BCE384C1488C4D37BF9F6EC
90F8B81FDEA7E93EE59927434937BA7ECE3B966FA4A35BEE2036FF9C5C423C89
1C242D395273D98D7A005395D8821E2A6B0A65479915329DD2C1C33B75F7D74D
1C8F961A514F6FD6A3604524503DB75CFA310263EDD27D32D83A216241D03DF5
1A2646DB93A34C60583DA3CCDBFF4F315D1FB4802817F889315EE92C675CC914
3DE91EF77879A073A0D3F6744C6E2D6347C8510AC6D67E95F20772653E4D7C4B
BF693BBDA6847EFBF89F46AD331AC05EF8014CA59579136CAAA1B40AC36DD171
BE4B505A633720E0A8508FD5B9E01F4C2302DA5F005F18FD3A578ACC4D3AEFA6
7EEF8FB207ACB013947A866A8ACE63BB8932487CC65DE1D661D58585D675467E
6606632B9E591FC1053090C526CA1A8F1197FCE0E63BE2711921C32577B3F0D6
08B7A4B741D98D6F302CB1578B0EDD511F87361F7897A2D28A562A935226FF82
3955C3AEC87D761DC1D072CD01B49DAA9AA7801CDB41A857C05E6230126DB67A
A65CEE2C609379CF16CC165EF655F98517D951766E9CDC1DA90B72CA78C4FA65
2354994597B63A84F9AFE1C032512E819FCC17EB00217E5328311B59B1251681
6675EF303FE4F01F1F84DE922D615FBEFCA363411DE10FE5FB70E0DD01174663
D1A9F985509FDD2E75FAAB717329622828B2785C1A8B26351E62EF6C050296EC
F0188950E744AB53050CE216C010B1673FCF588EECDACD25533064A51A4ECDB8
3B64C9DF28D4B5691166D59F99616224E706E080926688173C851C350E28504B
D6F48D79CBBAF2625C2E2E1CABD518987CB276D293489BB97B6DF215204753DE
7C4A3FE2B2C6FB2462F7BF0A301EC9F7A07DEA1D0391B73F69D03C4288A6353C
DE5BE2901EC200448DF54F8F3B522DADD168637AE0E24179E719D6674DBBB512
BA97E4085C237309FB4567812757A1EF9C33F572F221C6167E73E9B60B21CA2D
3806F30D13DC8B1A60616CB434CDE7436FBE5D62D4882CEF0A5232202C7F74C3
0A4646D8726DD73FFCC6D23C5044A04E04279AAA541D26750E85FA093624E314
06CD21E82E96046449A558A88D426B6C046E9A088FA255FA09BF804BE0A72AAF
E74199DA8D088056F1F1323CB301A1FD6C0479C8F89AC68DE87D86F3CEFC68FD
088337955F427B31F18A672D31DA3CFAA35DB22ADE121024D54828552FE5641F
3F463F43AEB75CA5648A11C433096F07F5D076592306D8BC30833BD11CF1198C
51BE09B6180FD2DD2CB9B06D3122A737435305D42DE9C6B614926A370EFE1C4A
5E9CADF1E05BC7982648D5C9FB29924D2A372D8B66E59BE53EDAB3DA137D59CC
6EFA0F579F8A19CD0117C0EA512125DC02C19B85C24B38B1B40D53ECF6AA9087
3368D785FBB2758DD1B0BFEDF2C3D6DCF6187E792EA762B50258B853D05B6051
113F89A27762BAA77A6F83927CC273451A1629E9241114CF65226FF4C348DED0
7FDEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C0DEAAF7E8D1F0D615CBD7F3E30
2E4430D8AF79983D51761097F5569529861FAEFDC91E823E0A0EA92E7F1118BC
F7A6C0D51AB943797023065C805B19DBEBE4C9A81AC1A584AB7E3E61A7F1029F
A5E9FE7BAA6A177DA4CC2B5E5C70C2C63001A415D6978EC80CBBE250BA0562AB
6D29152955C1F6110A42D0F70DAB4D6B7E2187A3BF218A6632678B4550B2727E
8682A7A6649577BC07041B903BF50BD66ED52734D447A5DF73FC46E9A9704144
D16D6004B24948F0B46C30A3AA503426744E5DAB6A37F59EFE3DC7BA85D89C0E
713F556814E051C6CEFE7E83C2F379B88D3DD15E1346BBE8940C2F9BE4BDDA2E
4322C052851175C6B70A9ACDB172BAB4BC144943B3D3FE06E95C6B6D36F91289
54373F9718877DA7599DE0AFF6ABB520C27E253D9006220706DC806409EF7E5B
FD966C2815E1A1DFCF85560921CBE040A2AEFCBE4AC82DAFEEF86EB672A952C4
C54E890380CEA0B0E0CD8A82DA2BA32CF7B87A3F96A7896DD470D4DC49BF5D7E
85930282F102E66F4AE9E94AFAE3CA1C359295C7D2967195AFD2D94BADCE1E95
F48E3796AFADEC8E98D78E01B81DE3A78F6FF1BF9578F7AF81E8CB4A17B989F2
DDC463DD6F84DAB963F5213142D1BC5E4EFE77037671FAAF08633A13C303EAE1
1BC1A233E685C67F73B1786DF4ED7FDD5B2A6C5097EC50C26EFB0E871C90A617
5956C54E9E368CA67F79A9DD91E97169B67DE7676E4338BB923A4E3B2F946324
EBDE7EF35EE31795B04FF3E6F6542C4F1C6EAEC54DA233359CE384F3116627B1
8993033B383330B1D2E211B7812E89A91CF9A55216E5C0F451BC1C6C550703E8
4C757F24256F14A5A1DFE6FA7EA168F4DDC5FA86CADAD2636F675A2B448833D3
EAE60B699B566E964B52CC2EA8F3AC2AC686E1CA07261AFC2B0A6F5BDF6CC77C
8E43C053205C1112B57431024DD39C3C6F3862E1DA157FD3BC5AD0D082997A28
E0F1AAC2D3440187C8FE2527271954A1419D8C5C21DFE4465C96FBE9F655600B
8893EE2C65BB593B87394CE0B227A9D9173422A333C45C6436DB9C6ACBE309F8
2A6256FB00A1B25F2BC121CF9F4F5687CE3FBE7299250E54010A60CF896A0CF7
9EEA2545D85B7AFAA22E8394686A50E2B9EF955D402CFD581761BC87542C1FFF
E3D0F147B5D502D625A371A5F803DC9543E5330062A9E9DF54E7E37902017E2A
6BCE438DC248140FC06678F93163AE8E20906A3996F3FEB1422C06D0BC5FE6EC
E778CE2B0C247C6A09E9D28B9FC63F2975CD9BB71FA698571B1398F3EDAA341B
720F5AE7D24058DF483C647F694320E023CAE0568AE3BDFBDB8295B01C074247
5BE2721C72150D1E7BAE6FB1A37122677ADF4D17A7689F02B48F1A93BCC902B9
229BFDD8109322DF0CCE8FE0405D523BD805AC7F5D19AE386456AD8C5D6D7890
15B2CC356F4041915CFD8BAFB8B7FB1145ECF9C2567A48B0C043C6D77A69C511
D7809E872C87D13F9DD30928904494416E3DF1D013E77685488691EF21286FD1
5A93FF6A0468C6D06CC31F68C3F262FA279BABA8F1BB4F07B431A1EFB315AA5C
68D05679792EE1E4182ACCCC95EBEBB93031AA1FAEE46473EAEDA71AD36A1E14
22A76D86F602E1FA74D8AD1BDC0A7EAFA1BA4C17BF640D2AF1E0F406AC8B4ABB
B04E5152219EDD29984942CE3E5A6990F99FFDF77D85D430AF18655ED8657CEC
EFF08ADDB19E494C72ED471DF04D25FFC5FCCB5E7F9D9F6D462A3C3239C9397C
79645EE6459737AD0FEB03A1C547FCB7AEE8B46CA1410D081623E5CE53838029
2E97BE26B58198799A1D91F52BBF703C057074710C0678EEF70A0C57A8D87EFA
FB4289EC577E70D62FBA7F757259A5D32A90AD3A6AE9463220934651C25FE7D9
853223CADF1D781A7E4D07DB3D4F16AE2501B2E51DD40C60358C55E4CC8E22ED
E7B3F23ECBDA863E0102268A3665B519CDB7E2378F46DC92FF8F7970CE5C0ABD
B3838348C088F2C7641C90E7A21C82EEDCEA0D02C8EB1606AB2B516787BD4341
B92479E72AACF9ACC43B557605C366245B65AE81495FC155B67C8626FF33812B
1AD8901E78AA828FB9ABAC42443EFEBDA80787A0F0ACF16B2EDBB23894BC719D
68C21A6625E48518D2E33F872D9A248301548BBF1283D4DE3FB0CC652E3A1D12
E6130B0FF3397CFDC94CCC44A38C2CE2AC5E22AB57C488C2208B769265C03C0A
3CBEE6240C0DE90646E7AB730E5D57A875B3F2E95B8DF74008A1AD51BB1FDFBA
5A3E652C8AA18F7DEFFFFA76B640FC05A08046169186702A682A14889D3C1B38
1FA9B54CC4195C597D6799CD5B7F09C114CC84AA912E5EB0584AFFF1D24ACC80
3C1C4257740D8A34B5216B01D916D41DDB32513DC4ACFCEFE43D6B23AA82394E
987600DD4D04CC5246DA7AA16DAD7A3EAE2D05A9B570377A356DEC6AF110FA0F
C9274961C7033B7646BEC8CA5FBA4E4E99A88103935A91A910B6AC680A8EB267
BD60C6E84B9FA28BBCB712C15A5BEC215FD698B7EF122683F248D120E2B00CEA
54EC340C270BF01EDE1A303B2D8E5C8C129AE6DDC88039288277AA477D07BBE3
9D8F781A0B7FE592860A47A61E951CB5B08CDAA8FC4C7774ACAE40009D0682CA
F5DB88E408B799859A65C144FD130E16295B17CF8CDBB25AF54BD452D1FE2B0C
1719E941B752AF11A279BA06F821525DD0F47783117684CC54510F9E30B9B61C
6C54309BE136E27A372AF4CE5A6513551350CBBFEB1D3DC912996C5EE1FE8CB7
B7F400E8ECD6D245F8A3D527418B5A668DF06463201B00F833E5A2FD79902CD3
2D6AEC688F02A7365B66797DE1EA0229C8E015524EFC3A90BBF54D37F9043C12
A5F4383312A7EF05D9A05AA68412AD77CA3723487975E0459FCAFC4B9880FCF2
B3737A6232E4783EB4A8AE56B83ED766137D6CB9196A5413A6322059418450F3
C51C6F5B8FE3C61590F7B1A801AC84FFD82566D635CEE5B3FCB4D57C732E6D16
BCED07FC274A5222CF53239497211C13D02F8FB9D9DBE1E7BA8E5424C8D0A899
F621CB490A6823BF8235C71E7C50BB25BAEE68DDE0F4850D322DD2CFBA62ABF1
1D2CADC336A4AFAC6A910A6B158DC42E97769D57AB289F58FA1F1C691B9F6A82
EC74B3996022FD4532F533EB63BD2154C076B263342E8A6977987E6EFB3DD2AF
1E6837EA88636AF0A06511DF6B55284A8CEB6B6648EFA4D8E060FC62F8CED7E7
5E4A4C72088A7A79FF6DBFCC7CDA11A1C00767CE1BC19F391E08E575B2EE78E0
4C5FEBDB6BF329D04511C79165B5315320DC3DA94674E8E633B2488339199BFC
D1C4FF3CE4851D494EF97D357057B13F26FEEFB65FECBDA4BB89EDFAE2D6A52C
31C01B3AD72B7F8EF16A8421B4FA121305A1AE54DD6930796B192864081BD48A
9CAEE7F9DFF85745A875F3BF3C4B8C0F978AA585F497851499E3E82C66DB5D38
FBF245D7B5398124C8F7C9EED4A8E707FDD5EC67F531382E4E32D290F9B97D00
ACA4914DF3E56D335825BD5474328B7AD72AF9317501677F15B1A4491290BFA0
567F93A5550CD9DE2843D269E312A2D5ADF6881FBD66D03721BA9C1B8016258A
541B050899D71BF8873C2203C7003FE088725F37CD5EE4FEB93A7464D4753A93
19354E3E4FA9C56227FB920DEBFD0734C14F8F8D31B1B2C357FAAA44467CB218
0AB1DF2288533E687A6A893A3EF3E520891FC807DDC7F0A7884DFD40B5C00413
10556883CEC750C615EDCBCCDF3FA0B31F34CAE2D347A1E93586EB95FDD3D1DB
7157B21B7A9DD8913DDE9F3B04019CE0D724C1F6521925BD4FDBAC36DB8E0283
5E748597CD52F41C780BAD637C4D7580CFC0320FF03F5CDC3DB656367432F670
E1EA6757CE2D6C995F427B31F18A672D31DA3CFAA35DB22ADE1210277ADD2080
4B763FDE9614BDB2EDFD18C10D3E6FADA25CCBE7F7924AFEC7130DE52A490DD5
50A27325171953B66FF7FC11A7338F380927E5F20F65E61032E53BD00CF49E0C
42221FD0ECA5100F4FEE2DF1F839B2A5D900EC8D437D7E968A4CE41B89961BBB
7F30C807B959F9270F7CC39CEC484577AC6B2EE3FF223DB92A482534A58D7FC6
B399DF8584D5DB0E5C30E5A42DB22DD8E13A29F907AA15E2CAA936824217A1FA
558FEFF0485CAF90627DC9C0AE474DAE890620BF249A218DE01B8B920F09E9FA
8EE38CB1CF69858CFD235685341F0D95B27ECA06AEA1C215927B9B509F7B8ED0
F3447145128EBAF2B73398289AC6CC9AE7912CD3F2EAB2010152363BF9CE7D96
355721BD5810723ED1EAF9B88AD6A9CCB5F6F72FC0614C2512DDD4832204654A
5104DA365956B096C1DF51E9B76BE1D0201A063F32C69E40D0F63977B44DC57D
2D73A7B25D95548D1DEF1B58D658AEF260EC161B2D9589EE8C8334F33342690B
051BD5EAFFC3CBC07187392D22FFE55A492922D803C91AF6BEB934EA33023152
C25C27C3C771B556A339956C3EDD05BE74CC57E6AD93A6A8549ADEEA0BCED9D1
410D411CDA75C4C5C7864FA957AAFEEA79FEC8CF9711C36D91336AE030414831
3B27E1641665CDC62F49338E71FB9A73E7AC4FCB078BB1A75AB425EA09AD8585
AD953ADF87B75E8CDE74E37C9AB7F35D50296B0B418AE5AE4391CC91AC0ABAE5
608930E599D101B7ECAFC15A5EF141E51F352F5ACF474B8D104A5677B231727E
89E2D90C9074F56DBFC2992CBBF2D3BE43FC7E8CE14C9FF7CB525BCA925A37EE
E489C7FC5E4422CB072899913127AFF918388EFB09382FD79729426B902E6812
216BD5B0F6D7AE9BDD7E614BFFE78D628646C32C1D95C0DAD9F2A2611C7BF34A
0E25EFB2AD7503D23492E7E980B2C4319DF4CEC8D7538AF44A083569519AF2F5
97A0F043F08C60B2EC222D351E9D566EA091134A841CD914249FC82D91ADECE5
2E4B3584DDBD03B345F3ABD2897BC9C6E095B804A9C7F00013BF9997611ACD8B
2253EE29D6495AFD3F52E1CF748CB6C0489438BE89DA50BFAC7999BE4A236917
D1F7F71D77DE7B4D89F524F9C3162EDDEA27A99A2DA9412B1870E9E7453C99E8
0FBC5ABFF0661E8255BDD1BC34C4BD614EA7496D58CE8BF62247CB10F8930488
5AA33F5133233547EEDE16EAAC1024DFA2E161FB6366C31F504CD72A82F621FA
0F11B18744A22B37664686A7608BFB68EB1B58B1722D9984913CFA67666BB174
AF131C2C900E5AD25EACC9AE031C4DEC6668094D1FA8536268F278E92560FB68
2B0123147E9E8CD09DAFD054A060C190218DEE4267826FE2892409609AC243FB
FB8DD3A1C6B5FBAA515F68E3D13AF1E8067FE8AD1D722E59AC078E6B3D451B69
246E1B04069357CC21D8439789FD52FD6306770A202E74519F043C7CD8FA2E6C
749D88789C56C3025C3CF00E04542DE83914234E64423B9D418C4403A105EA1F
C1D27CC6A4A1E67DD67ED59060159FBFF46B3FA6BAF9BCE3D81E2CC477721A7B
7FB7820D5EFC490F4B84A28B531B1E987FFAC89B9386ED6942A6888B1B3D315F
648DA50996583B43EBE59F7AA29B4339C799EA81748EA9F2EE39EDB8512BDE50
D2DB535CA402BF91895CCEC060E7E19AA0D75663AF5CB33D5641B1D6077818F8
220B924194E8BB270EAAA64FE96AC960F649C3503F0993EC741C41A0BDB45D75
1F6641FDAD6065A36614A681EA9BE760683E6CCC89ACF2A120155637A9CDA2CC
278130E9578FEC854A89C03B61AD69B87764A81AF067B6BA27930883F53F8CF6
F267B35795C7626A32B6E41849E5391C34E74040E6E7E797E18AF57941DDF7DE
2072ADADF7A31BC5A3C4E6BE9637FC8BD3E94D6257BE1B7BFB16ECCD2AF57B2E
E7205F707023A5FA5306CD8C2CE2CE93BD24D1225488A9B780043DFE114D2536
479E7D64EEB06D2206645116C02BA07760B6EB83C36829DECE216E9C9AC81F4E
3E164F6A9AC0955C00BE042DC2D87E2C0ED202ECF60883F13152D70D8C76E0BB
114F84862E6B822C8E6EEC8334019A1D2FA36F07EBAE2C3F39D2924B4AA2516C
618AA677D9F690EA169F7FE41F0F171BBEC63B9CADAC48FA62F116941558BD0F
6554E152EFD268E21171A1D98C252C028E75F84C6EE21374CA267D25115DD6C4
7D62A5097D8FF96CE8A5C8F9FCE901131D575196D496F02BF818ED3D21E158ED
DA88772235D781043CED8B0FD4CEA5F0B9477E6F64C0AA0C5F1ED2BC24B77548
F1E46ADAE083972A1E37907E1F199DE22A2B9259F0DB23AFC4748489D1F02B5F
76FE3295DADA1A1B81C7FBDDC7AB01C48166F2AB48FA1853639515BFF5EDE067
598E1B8DC7257A1245FDA84738BE165A609F79CBF49D51AB8BCB1A669F28845A
536EB340FEDCC1BDD57D885BC7418CEBD7C1039D8FF63151BB62BB3E92B484FE
87E65B2DDEFDA20A1818D172D0B301289648A500388A82DB4B4AE40A82742AEF
0B3B94BD6D97C282B086A3AF63994EAF506DAC03CFACDD70B4E5993274D3E69A
A6F6114C7FDBF9F91226F7569316ABCBAF5B9672FF8D90BDBFBA0CAB5052F14C
FAB082F33CA61BC587A5132CA4E82F35F9DF4D9FD5A11C3F3C112ED828E9BD8D
BB5A60E88548BB1CB4F935393FD4544A636A804D2FD6F7EB7DAE639A22D4B5C2
1602B15EE37DC5F4533724D785C22C645809C6B3B4BEE7459B22937E48C95080
2CC7B24EE992477BDAE8844D90EF0469468AD648DF75630D5E29912CD7E6362E
528E05FFC9E232D6FC5389570C46AF3505423EFDC21CAA28CF25D122E1601068
7CCBA357EC5C1C77239733D652E40177C66B0FA98EAF74A87B9AEC2D29AA0087
D516607CDF317345DBD550F4D3A85FEB2007E09F408B6FB0408B96E2ADEEA155
4980E13B37FEC33DF3B23FC7BFEDA3E33EF86C617365E9F141CC3CD485C3858F
2EFEB078DDDDB335A543ABB1E059247E276E206CB00BED125C8F78A48B2E8B81
071A62AE7E7856ABEC91B8CD1DC24AC1E0C47588C91CFFB79D7910F03973685D
D97F036BD60D4E35AD1AE40577DEDD7EA8BA95C479340B9E18848E9E29C9AC62
D022E21F6FA83A84FB5E1BD1465E84EC54E446A45C0AAB1256EBEB0D9B5DAB1C
7D96028198DFD7488D92D971AC0BAFB2A9B3C457CB0F90009ADF7DF22E721B8F
9F2759CA218F0E68D0FFC9CC45041B488CC7AB76EE15CADDA602C8687473C07F
4671206794D6EAD1708AEE48FC28955569B4CF96EAD1B32729DBE4756DEF2999
74B711279C25478E0A63F78F3460EDD4F64B4D2A5B3E660ABC749E6D6C8ACF2C
6986A41EF5F57E13555656242DE62DD10A9FC1F5DAE96E1A7A9C6023DE05228E
C140AFB0DA0688F326A406F9BD8DA3CC648E93EEB1FB7ED34128ADD92D6F6C85
71B6512A8DF217954E5EEA59EA0C7513FB6C7B69063847180B6DCA83EB97A55F
FB23788271A3EF829BB607B8D6E267243EFD320E2E52173E513BD9AEFEE12CA6
30B01A0EF0761F13888A4306667786F696786AD4DF5AF784DA0937C74083746C
A9A8557DFC573A228D6ADFDCC87145B9C3C3C5CE0F22D4B5DEC2A17886B2CD7F
3E06EFF0FE425138A90484712D9F38D9366BC724844FEE97D7DC3783A048D871
AC6F3464517ED20118DBBDD4FC1C15B283E2959F3E1394F6212E9CD5D1200A49
886228984F609F872CF41ECABC321E0A4F6F62668E6621FF1259C4DE58DBD2DF
DCFC03E61F0DEF4EF5FB3163C904E957AB8ABC04D5DB02C0BEBDB9FEABA272A9
4E1820A499722233B220056CFAACA8C087B4C0BCC2AAE1F05AB2CF9B4CC3BF7B
295FB8E3918CD673DC3B1859B9B7BA0C8AC8ADBDCCE20808A874D712730EA210
F01B7E6B085773D59788E039C0BD01FBB360077A16C6D30991F9890B7227EFBF
B2A3825821E0A969966A789FA2F37D77876B029856DCDEE6F046C9253F3B443E
5F62AF90BB92A5EF379D23BED8DCA6132D76C53B78A28BC434AF4C91C8424905
C482B190C7FEB04E13FC963C0478D72B621BDC0AD9724F462BDDAF81F41A5660
26BC1529147F19D128B598B6093CF9A023EC2263A7D1305B6224EA5D456E4DDB
C12135B2542128BBCE02EE3902A286E7ED3B5537727D461B9C9B15DE33E67B25
744E2FDA2E47AADCB3291121B58A6BDC7D7E585A9C849CE54A33D63B69215176
02506CB180390D43CF505B0C6D1212CCC7F398B49BA390351A942C82E3E05B19
390A1775D2A5F9EE021B2227D762DCA9515D6E911192A0772AC9CCF99167639A
74B00AB9D8ABD8ABFBA9D53C42A61026E5BDAF59973977744549C562A5BE309D
5D926AE5C673625845E1981A33135A82663237E82970FC0EC032AED2A2FD2D94
8114EEAB1292412994A5A0298BEF561152F82FF64CD3298D11237F9604CB5163
EF7FF065FE895D0F59D9E57DC8F688D3E667D69CEC2F78116EC8583ABEEB71D9
592AFE1D648A5EC164BA4DA424125D1735CDCF888572C3D4E2F02309D21B0C7C
563CC2D2EE272B0674040D7B82B7B40EAF7F0EE2FB5644503A563F06AE330087
0CC9795DA24E8E8A0E615D13BBEF95108334977E7FE842A2159F2B9C85533A69
6B59CC5631C2A4D2D9DF6A1C45DD0AE3299C87A4EC4CDA29B54CD2EC33F618B8
CA36FCDA32FDC097B1935EA526D43F2D092368CFC4E14862D0B702E894290BA5
207A4DEF6CE2FDD0986C7633CF5D3EE91CF5FDA380B47E99A989CA1551A47537
FB356B805ABD7FD9DBDADEAC3BDD5E113605DCA21404B91285599E58D1F25BC5
4EF0C516C444DB6BEC4CF3670414C2A7245444DD74DFBBA4F01CC2AB81DCEB39
6BA47EA5E363C4FF366CBFCD58155CC0886A60F27EF31C45E92F4717D8FBD4A0
844A8D953A05882EA96A4BC7AAAF9EABD6BB272B4DDAC2A26AF8891707232339
F3FCD771914933CABF613F0F9FA3E204BA7D14FF9A71AA3A1506BB97D6D835DC
BA80547619007C607301F5C7C276F7365F6850198D96C8EB6D6921D1B7BD7CBD
5840EF7B3457F381362AE29CA13ED2AE02B2C52CBFF96C06B67A6135F138C1EB
D88CC9D17543DA84E8F7968D2279C49A48C6301E226CFE1D3E3239CADEC7A971
8E82FBFF5F294B5D0D796A90FB81A5A18E98E97E0EE85CA6AE6961E7DE6E5472
11BB0160372E4C019A9B9AC92D6A40C4A95AA66BE98967F52A855DB02C498F11
F09165A76F64D7D5EB49B35CBA7981059C65967C51EFA6047D48C64C19A374D2
E21792BC0CBEF817DCE1BA4479E3A61ED5799165E2C781E6D9C2BE397CAD1E44
C4F933D2503C52AA8A07127BE1AA3359A90834F4A5C6383A1D003E4C104C3225
03F37A5AB40178F106488328477058B9BBEBD4A514626C26F052A95D65D942ED
54E36A6AB39DA95FB6020B097082E73509B70F0C64694B73BFF034BC6F0D74C8
BA15DB4002E1941504FE6D3AA62C4F5F1BDD390C32A10912E41B77C22EC0D1B0
F31398B13B39F69C29EB54490428B5A48080A0E95A00D0F166D1AA1D0F38D8F0
3598EC800EFCD6E451C4B50E839B5D76C739875A056E01C1A481E945FD890AA2
3745900DF0B0C18508304AFA6168B74E2261A1B0741D368D2D66F5AA22A700E0
09078F78DACE5A54C0701E385140447CB3990379D35B4D7682D1A0AE125DF60C
FF05C7454B82F991CDAE06A39A842755A79DDC1E281A8C34A969B80EDC94665E
6E17A4F5F3C628A3AFABC5D0922D917CDB0ADD125F3DAF96207B36E865797879
DD5D854A04EB3F5AF5E709F31F49844D1A9F70EE29B069A97BDE7AF2209A9F76
0CD237F2D869729A22714A5F0E7DB43CE31215A0DEACBB90EE44BA8C5B968401
A3CD81976D2140ACC6FA3F605EEEEB723EB1AD965E8A5A3ECEEBF44790D57FFB
857764AE9FC2A0DAADC0D6DFBAFA59CBE6E358CF0EF99B5C327D0E7AEA139103
35910CA61F5B4984C9A127C4BFEF9A3BEDC15441D95220FA6EBF2EF10A76FB40
74806495A0A3962A818320FABC322A2A3F62BF60D6F2439E2D50DCBA8CE26AF8
26A0C2E9389C2B8BB8E38579D281D51429414C6964555EBD682B2A587F384589
44A0E355F989A6D77F56C29D62A325714D3FE8C3DC019CC01E8738CCA25F014D
9BF3327B9AF9CAFBCA001B7C0328E4C7DB807BBA1D0C9B3EE1860D5F11A241C4
889FC8C0F634CABABB7EEB4C30EF07FF70EADB5D360E52B0879E3FF37E86E055
C0970FF6E45FE00933038F1BE45766247545BB7EBD0D5E3926340B9F9D22F16E
40184A3697C368E4E09A0E23CAA2FEACCFE55830A76C6B243487AE5A649D850B
6E2500D91E324A828FB79D8915451C825FEFEF2FABE1880BA3AE7A981556981C
6250ACBDC1812004520E40365C84CB726F14A7E26D043300B9628944E210E2BA
4E584D11608E696F299A0821E42C97CC50E6C4D6C1ABDAA045DF38D1B7A331AF
7237DCDC2483E367DD892F6347E5FC27DAF64FBEA760D3604F156ACD003FC6AE
2449B2B06CC2EEA975E1FDCE064578CE287B9AB896001714CD4537F9277EF713
2FA8EF7281043D30DEFD2C68CB4E6F0E249123E40CB7069D9E3D8AFF77E26D1C
44212DE67A96CA9D0BCA550922E73CFFBE4201AD7462760440A2317E38B02647
B723A196F80801C400F37D9F913322F0B46133699116EE1E2FA54E3897703115
6C876E12918275E17D9574F422B2AA7037F55F05E547ADB16F56669A201DA41C
13BD2559A35F7C4AF039C7D12B6BA9169218D70EF87AD5DA8EC56BBEF2B917A8
E8E67A32425B32DB025CC6633390B4B22B32C391633A9B6B41ADC8D0D1A65AE6
675BF7522AE89BCA5BD92B4A41EDF74BD6546A647368AB4563C8D558D47FD0D0
331085614FB069CA8D80059115F25816DB2E6FEFFD6D732F98B149F5F0FA2C40
F32C78883C1425782D7534C5486448FC86B1CD00AC242FB0ED953A566489EE5F
1548A11C21562D863C371D8202AE3123CE9D224B0BA4B135CC8709B34137EBE4
47A68F1A9E881DA9CAA403859680902B9B5A88CCFD133C91C1AC68C7C8754DD5
9F00B920D3C62C04AAB48F6BD8C8BD63D8412A1D038EA627ED64658353BE1CA3
769040F003E922138986273DF6CFEB55341D3FCD1B53E15238A93F53D2E9B742
E00F769D7C8E1AB077439ADCB651E922E05D991E5C6D71CA6F51CABAAF6F0F96
059F16748F7B1B043BC2FCD93C18CA4063BCC8EE90AC1756B426A936BAED123D
BD4D724B6005BEEFF3FA45A3B0827C61ABFA9DDB04CE9F7C02670CAC5ADDE78A
45B552D7C6C98468ACA69BDE8DEE5F06D14E4FB96F0F69193E868789380DC127
C1A01C7F3C9BA08A087D28C9FFD6BC993137C87A7B37139A83185B7569629AF5
0EBCF7152E3715510FBF60F16750CEA4A1DBE19DFD88B3993CAB581A7E340178
D6574F69F4EF02E372A1FD7BDD577A273AFDC1A318F77A31D384405E00E1EF63
58A8DF8CF7B4AF6BF074A9EF6D192C26DDB6555BF349F40C318AE9BEA6270F8B
E9F7891973BBAF9213B43CEECA12BD18993C155047007662F9E7F4AE14E8801A
65340FCADAC222B3FD287BE72B87834E458C19F4935031B9B500B8C97DE269A0
9D9FF7422FC91F24878E2091EB36923F31341B9DF942E732F5332C61623AA8F0
7CA0C8F94C5BC9BBEB32B40A87AD74EF10629CF72FBB09F9F27608073B580ECB
45053F0F2A618B6EF08086FC194CCA784A02F5FC193EB3F202D9F4FB0387D888
A370419CC980B4DDF530330D2690839DC0AAE1F2A93D71A18BE9EB710C0C4158
958CD6707E3DE6C99E7B22C567995B8EDBCDE9CFD2BC34DF6068C72D3FE008DF
321408BAFBA81936E6FB44CDBD739E86EB66FE2F4F06B08FE458023905D41817
647B7D2C63A8B8D708B2B900F04FE2467A72FED312680E7155F6CD439AA96488
958D280F4135C5BDDEB04079726CA43FCABE49351B4A5FED86508444261BB961
1DB2291F2AD2585BF559E6BDA1685A2CC27E820401628C3994C49C54859DB5FC
6D3B9BCE67153DCEBDEA52C72153C48DC62B435E2D60435497EFE308A663839E
ABA33EF369C5B372666E36BA4EB2F17EA48249907D9E501D27DAD12D2932F016
DCE03DB940B2714AF0F610D7A7A77C415D05122439FC3BDD16A69CE127645D56
4B8ECE515BE82B5BE1AD90B13720D2293012310EAD28003885443D4B789F3B59
81DFEDFED146296AA6AC1C7D598B33B68992E7A2F38FC0102D37B14D7743D972
5E1E1A83C27343473FE2C00C904F86AE911FDF34523601B86361D35B0C05E68E
1C0C20518533DA77B3495C30DFE530A868D4872655A2BD4F485C7FBBFC1A88E1
7F13A7F84B19A149AE0478BAED0988228D56F068D2B7D25F57DC74B6297EC022
0C91F8BB9AFE742FA96456E1317908ACDE09A8D7DF149E8E3ECE04FAE2EAE4A5
183AD800D1FE8340F7D727272E4D9457D8C2A1E937B47C40271A2650943BFD08
68FBCAFC4DE907FFCD365F3CD9235703F261C63CCCC7D4581D1D357E52311AF2
27B3E316B42E4C33F694BFF0ED77A7847F7C747410CBBA2473F5869F8FF6B4B9
5F4CC83D93AFDE394A7F95FA260EA13D49E592358916128CCEBF8943967A33F8
56A40BA5B302782678B62F595D634D4D311EEFAD3F82143999DD68E0DAE15B12
2EE89817433A4A9F9F19726277ED18E1447430558F9C8957032A6D45BD084D66
78957DF6391153F939FCC86B8032AB362D65C77F144A456D5A77B0C43821F043
91C0BCF08208F87957A6A15F77E1E234889B0FE75B3B2C797DEFD108C15E44F1
307BA3A8C49BD1BEE367846CF0AD1922FCB9A6BA94EC16802DB8ED8C15960B45
79F5431A92295BB7FEEDE3A4F983FA3424D8908193BFF7CC9640746D0F1FEF45
942CEA347D253E10733C2AADCCB4809A32442EA54F13E1BC55E428C82679BD82
73610FD0F8782225F177F11CD02925F5FAB55B0D23D72E780E29979DA702C74C
1847E4DAF52019012701B060002FBE29116C1998A08ADEB2B51FD97C947F3CAF
4A17CA0F8BE63D072D5A147F0A784F0C5A4E1934FBA251CA55B73D751746F87B
91E7273975069C907199D36165A282C7C6EE70A1B685A7B72000C7B2DAFF6236
CD773386E362EC787A6E990F7BF552E25EFA7274938E55FBBF174FAAC6A56DB6
1A1C8701545ECA6EF2160CA7018895B617ED9381E1A95168DC1B69BBA87EDCDF
6918D106959EBBD9B874F86AAAF7990882F149552ACBF1101C0CC34540AFE146
4AEFD4CF36A6E4AB567E41FEAFAA5F39269A9DBE9A143D1EED8BABAFE9416AA5
E06C7C4C600BF38B70C87E5ACFED5F0116A7351DAF147B6C496891B9F3400674
5CCD5252B789665470ADBFED8C929ED08CC0B325BA32CFC187F313B1C5E2DE5B
1C88FADF22976279F1B8285F5EEBDBB94C4A599DDBB64D567D7F1814E550BB18
DF86BE7E42A946721C136745EEDD97DB9551B092C99FEB3435C7606C5DE09FA6
98B4855DCBF33DD70D9AAE0959BE049A9949C285CC72DC550BFEDAEEAD411DD8
9A32CB8A923E21F5048181C586646D0C41955DF63256D5372F6AA8E5918DD649
69BE4101DFDDA522FC2A22773A5148DF78B4FA7F9CFA275EB02313C73A6CBD48
4908FF78EC89C3C1606A66A36A5D81BD0FDF6E2F6A544CCFF36F8AE8997179CC
9BA8A34F1E77B2FC8CF73D877D1A660D5056FFD2B2BB00EE212446E70A536F16
2CB22D6B6BB85AED82C2AA4E2B67034F7316B5922CDA33478F8BB69EA1BE414B
79DE499EEDC5920F37985232D8C861F0FC7C25DD5AC9CB8F043311EF45E6EF1F
6C389CABC69B231B03313261A3946F7493DD611F3CE69BCAD8410DC9787A8C55
8FF810C440F0C66A70BD8DB9593D119354DC4A93EDB7B6F49D40CB7DAB82C4B4
329E5CFF8AB0F213E9D5CF55D4261F9BFD027E1B0B5AC9076C21D22C18A1C53D
4AEA7E5F02CC45785D28DE4EAD3AF23E8EB270FF2FC011EB0C22073FF5B4891F
92369E9379CE45F6CBE7E3178917EF87FC11DCBD27F6AFE6B8BD4E941D2FC154
BEA826E96D98EE69E8793F1C76C3A2577467242CC0BA47B411DF2A9D905E6FB7
FAD0C346FCB6CB449F1872A1C253D156265238993C5B31CBF550EE7E64A3684B
3F2BFFB49B4B37FCCCD1CFE55588A85CFFD9A23AA55B1F15901EFA66F9ACC5EF
9C37EAE812266982EFCC4C3252AAFB5F43EFA9F78EFD78BCD95862F2884FFFA1
7C26969FA7AC28A6FF2AA6B4ADF066E04C09553BFD0FAF0F00AABFED9BA35366
F7276F25C7EB68DE604375D3D9AB22AF9B88E1494C22A924E999A37EEAAF4D84
EB72EC36B571CADC60696F3EC4EF1AC5F13D51C894D53C87D1C2D3C5D7EFFCD4
773DAA0150E6BFE03965204975859AAE67B67B37AF86DC4D973601FB89443353
F1F032FF5D7F7C97A02506798075C4D8DE31676E57E765AC6CB4C052198E87F0
9476ECDA6F9FFC29FD565D68BF89BD37A2E4A0B6BE71A47B6867E6E1E8110E70
0A8CCE20183026D4B921C473289CD30DD9030A473D2EAC2F9B94FA223C45C32D
38934E40372BEA4D6D9EE7F639C8B27C1CDF04115FA459787E0FE496F1978C96
E0C85D0BC622011CFAADD34DCEA7FA922750EF5EB14C7F4FB795EC4D0857AA5D
6620C95021DF41F224F2158905238F53B5565761668A6EA34CABAFA33A7E9918
A7850B543F668A1C36B35E04B0FBF632F92F87265997D93AE476AB1532414904
3E713261671835DDF16495E1F18C1B074589368AB6A358AC2E23291325A17D6E
E6FFFCE780D288565525B144C50E93B534704E462A4BE072BCEA52B0C480AA4A
7B456EED703C27AECEDCFF8997E29BDFA45070AF2310F00A2A464B0CB8B5EADD
629454C0877247438FB6E92B0345E5D3D3D9F05A4F007383982DC0F00B579D60
91BBB03DD0326BFC9B3E358BA2C74EC76A0D6B3FFBDA27AAFF1C58F84C500684
D4D14D9E645E5C4EBD4893209CD5E9F8B8ADE460CE1B5E3739C4723CBB5EC1B5
5868B5CEDBF4F0515502A23BED15BEFF1D790B1B54453A103836C93107F15870
0B0200924A0AFBD80ADD5C4B7B91C04423174D1CE5DE63E6FE7E3E936CAD67B4
AD2D9D9D347625B5924F5370E9C13F0A66881FC91A4FF6F1AA2B17BC4240CDC4
A30790A98F2ED8F648FE2285E3198DE38F98D5F66A9DF2917F9F373AA2297896
E42772AE3247D7F6A1B47F35DCB2708820CD830CB91013D63E53FDE7251D79BA
01F71E56482BE924C444FEF0F24767A37E0C3D47EA4515043C418049903E3F36
885AD45509FC3BC335297AAE4CA32E601B41F9CBFD4336D16C2F710035AB5C74
6CDC1EC49ED6114400F4724ECFF05FE0BED47958AD64F877396BA83809446DD6
99668F9CB76B73BB60040A6CE44601E065840E1F2B3E694AD870304557D3C04C
82C493691CA69CA1A46C02C5BC7E68BB5FBC64336AEA00E2679B339EBE55411D
9D0784D058C1C336B45F1C6DD15BE0E19437423672A26B560AA588C1F1CDEAF6
F9703CFE23BBFDBD098BB8D82C80AD568C91A27E784625E95723B51E65113305
932CDB1FA7BD0B36275E56FB1DDDCE97A434CDF2A2ACCAE877C3B56CB5A29F91
9EDF2B4DD5F13A33FE49FED460A102B225FF51C3CAD527A8BA93610F64F18D71
64BC597A28D5E06E1A1833C74A1F0180C2DB3A56E2584273230485F18113D43E
7261CF36017F6867CB0493EE58D7114581FF800CBB95B97314FBD18AB938928D
E1EF71AE0732F89F6D9D1212FEA8CACAA62B3BEF57051E031AF045DD1B7B4762
75373D94627199F2F7B93D92FC9759192BF1C7D5383670690A186EE46782B21D
5B81D39BD7DD804C0B94E175FBC9566A9DCDF0B13966905F789634132682A110
4C43204FB824919279A9B7934DC861A8C8ECB5C7437E3C6466A403F68DB5043B
C52A06C5FC5152E46F5F2EB3463A2CA0C6A066ABEA6C9D95FD89D39C6D21FDEB
1CF0A03F489B03B22996536F25321D5E2EBCE1B475C13E30287343F5012EE23C
571355F0BD5FFC7BF430FE015F021E2B6E88C304A32996A7D9532C6164D25B69
E9B993FDE2507A406E8DD56AC1FB5F0AF5D89B664397DAD64076757A4F55D91D
4B225BF0BF91B45D8A720CE9D6A690E3D7DAF87546E993B1E98EB13D87C92564
D1D8A908337D2C29DF78AAA9C8D2F4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA03B60FDE7B65AF0EA309DCF57EF4F781C0D2B4A1367A5A
06975151CDBDBD1D8D55E09D023205B0A862824BEF1647DD5448382A85282F79
E101242C24F88CD1827922BF5BB090B7130470E60207001B8CC1B1DD40500A3F
5FCDE4C0AFC79B7506AF66467C135210AE637F9D491DB422E2CF3D3A3958BB81
CA51E5B0366D04BF6D10592B7BA0C80BE5124AFF65FA70E2F9AB3F0406D1C9E5
F430B138C9FB9AA802F3002A29CE268FE9D75A7FC59B03B07A36EB7B608D2AD0
18C84F470192BF326C93E45098AC5930545B63AA9E1FD26F26026BD1B23D7DED
4C3C5D21BE08BB792A9CC5B74331B027B869357CDA8D3F4E5A9502A4B17D408F
B1C8E66AF7CC627BCEFBF267D24F99D24AC9D5C68EF6AFA266D0935A3BAFD1D9
28B222871F54B0B774CB1F93F83A7F1C70DC02BD95426B83175316E6E2ECB7BD
E6902166FD5B9E9DA0EE045EBE4A35E0BEDD1E25DF20EB1EDF35AE4201F965FB
DC29D062680850BCC4690FB31AFB3808A7FA4D878810964FF5E53F25285B542F
3130B6AC84ADDFC5E536C37344FEFEE6B00CDB5E4863616218D2C84B65B1D2AD
8D5160C7E9F656D93EB214E1FA04F01B6FEF620D9B8A3567DDE34C83AF01D54A
2CC7AEED943EBE614678C070E5C8D318C9D04C98BE7418101EB39D75042A9C41
3C838DBAE11B315A3B6B5FC1351BE8A593308D8D8B1A8028B073456088F14B0E
5EA82662B75493EB31772A6FC481E4113BF17E581597282F3857B2D3841A0B5B
E40198A48B0D8111B2390B732BE5D075DA0CDDDAE0FBAB3936904110A9FEB908
544B917B761C40DBE2A9AD81F7002A27F2EDE3459E49C277E472774923AC44C8
2D135453BD56678689754F0DF29C1DB4E80FEA80DDBA9FC089627C5E37F1402A
7A73A9743ACB24EF5B77E0CA5AC1E6F13A8BA831CCF5282350583EBAA36E8266
0BA7BE222FEC51C58D0E6FED4BD5C64A24965E7BA6C7A4C59DC071F8E63B22CB
A0B19B11F2C8622792554F2C5389FE22C5569B2DB1289AC3EAAD652E6D5E754B
9ADE46841E52DF90C3F0D7CA14854602CFA5EAE2D3112D43FF22C4723429BCDB
9ED4DD9D9A70F1C9C415EFD77F4AC251E82C6F8DAA74399BEF9EB82E6BD01687
1B1147B362BF40B39A468FC6EE634E969D614648349BF8090B0B84D51789767E
C66B0FA98EAF74A87B9AEC2D29AA0087D516607CD2A797AEB6B3D26C3BE81355
AF112486CDF5154EC9AF0E79D1775A4271DB221ECCFA25639CFDADABB26B866D
50D21A217D500474C66D82042A7F90731D9C0269531DB9D7ECA48701B5D4511F
F86644AE56F46392DFE6923069B9D6F6420D7F2AB7752FFACDD5D83C5A77504A
57187D6235449DBC3F67808F284D540068128B6E1B2073481EAB5035A77F9B6C
C859CEA88CCE5B7A0C3769907BCDAF2953E0EF722E382CDD254C8397D54749E7
1727BB69D19BB4A978101C0CB1DBC3E3A29B9FA3E2260E0BF7CA0B74449ECD34
DB1F1FEFB74D133FD355B1DE1D32145D39243D0590A90F1C4EC2C0E4054CFFFF
5DA4728BF4CE1D892052701B48B81F59BE2B3B7349934E69E48EB70222D8B9D5
2981FA0470A8F4ADE4F8C24106E0D76B8DEDC464BC4C4261AD72DD800F7362CF
A24BB2F3D4EF7D39E1902C53053C24634771A58D2FD3034EF423860093D81FFA
11EFC86200717CFCA94799D64135F1155E3D4F93573CF9EDD72E401B2D22E3BD
0A364F4AC9FE64C0836B09C674417421724A6E83151BBF93BDCC6AA2205EFF87
FE0EC49C6E1228CF4ABE44BB355FF00A1105C0C78E420FAF4970A8956B7B47FE
FF3A2D6E11BFCACD6149A201897F108E10DBD043E7B7EB3031418152E3EF415F
3BEC2BC1102395BF4918D09A32C2F2ED1D80E2B3180AE72EA7860F21318E6978
22FFF91E5E66C912B6E181064256E7A1F53FF5ED7B2E617D6273562E2837A23D
A93BF2BAD0740A8A4986EEFBCD407D7FE3FA2545677BD1239DD8F4C884C4FCFF
3AE39EBA1AF456752CA35266C1063341E30B49E0AF725F33C1522522D8B5497E
03336A2FEA31E90BB9752043F3A8E113ED7AE479D5A3D718A43F0AE5BE4ADCCE
B13913ADBB1A948D9A05D91ADEFC852D2E598734CDCCCFD8C05DDC3040E388F0
A86E62886E826B1E34FEC34A90D3FAC2AF1FB2730696B60AD8836B98F8CF2EF1
9ED497CD01C3AEEB154DEC2F9EA66E8AB516C9FD3846E540D8F39F442BDF570A
E616D7CC864B7F781EBBD8C93AC879D09B84723B8B3217E226202117CFBE3DE2
C6DBFB0BB25BB13CF406BCC94E549E58EA59668CBCA064DDB13B68D37A66F80E
FDE9391FB1A1FAD79A57DFBD94A4FCC106D776A39F761F19C2BCC97B7E3E1222
DBE1385139E269E76C98F92E3A81C8BE23BEE4B7EFC230F62253BC1FA07C061D
56CE72CB67E59EAE0D87FE8400FACF1F3412EDF6CF4B28799093DD8F65BA55CF
0B996B1649E0ADD7EAC66D120A3911D284DCAE2018F883AA804CC586D6F92FD7
67EF572C5CCF7226C8A83646B877AF18A0650FFF12D06A00AA0A625ECC8FE09D
B849CB9EBB19F72B455074678DFDBED70D546BC7E2C50ED4DC5CBEFB7EC65FE3
5BA71D71B119CC7C1B82EE830C3955C64106CC175280FBE13452439FA3577255
7A6FB3DC7D57BC905B9A03FF4E214C11868573EF080958074E7ED75C7D6C2315
8B0D6A1B0568B966B0989355759167A72BBDC61A3889CBC27A6CC70C03D0F641
ADAB8D2E498892CE6941B16BB0012D51524E0228494AE59BB2C5843C9C56FF9F
371C82FE3E8666A274B7837409F47C72B0FA3DBD17AABFB9D89DC9FCE175E01B
99DDFF1E7BF1B2E2DF13C4B64C9BFD510200C2E03FA05ED2E1149715178A4626
3EFFFBE20CF045D1F128CA4DE66F97F06F469C78589FDB9EC33A8371EC60CA1E
CD40CC569F78BD73D380C572E5087A5556397E485D1BBBBFA2AA2F95E4794225
2534868BC0BDD3AC613B1B526A9BB3489FBF70088277714B8AE8CA8C2BE3260D
52D1EECE54FBC7B5A887C3478EAEE8720CC128DCAB168E999F367E6A91EFF7C6
14342278BADD6DB0A5663F79620329667BDB2B79A6C97B54B8BFE82A1E6D7F3F
EEB35D393A5BD57F140ECA79A75B620C970F79650251CB35E310A6E4FF24EBEB
2BE5F48207C4F9F63C4253C69BC073B09D5CD6919ADF2E9932C4295E25982DE1
DC5A7B3BEDD3D567DAC691669A4AAC7360F8B87013B37DF42440B000B9245368
3899ECE7EC3DDFF5B0B8CCBF3D9CFC394FD668F20AC79B6145C924520DC0BDE7
8AFE39B3CB8AA3C22C30EA308E6A5C8EEB5921F493C8F5B7691CD0C39F72D7CF
83F981822020847F53C4901AE23B20461FC7EFCFE7DA6DEB238A87FDC41A647D
79A3E56C4B5AB14FBCC0B376B51523394318C22B863A359B68FCBAADEE6162BC
BDC41758B4122E88E548D22E15A2087B61FD69F81D593D734DD7CB5C9B7DBCAF
D9B53928CB0BB9346FFBA11622FD0636EA28FCDFFC002E337F0805ABEC5249C1
303CA64B3D00E8B27F5559C0B2CC64B17D898289FA1DE89D2906AFCABE6B1C61
E43CF0BF2755244AE2C647D69340876C1ED130F192EBD571DBDEF885B59E0183
831EE167EC0E5B42D56879A4D4FA6C5D16F01DE2034217FFAB2FFDA24456666C
28476F9C08001CA1508B0EDD5992055340E6298B3B7A30E87F9D6EF48AFBE10E
ED9B1AF856F87122E2175AC6DA8E033FF3DF0FDC7F4F675EE4CA8E9EB6F8AF80
07B3F27A59C82174638FACDEA968C41C3F8778C8C392A02C263614D142436C0F
F38F25E56AF6460F322E752B75D29D4A5C6F7445C5A0556A316E36CD9728F288
1E4C77381AE42D708DF8E5C93474AFDFF07357973435D5593A75071F79CF9F58
F15C92A6FBF7BEEB4DC2844B75D062880309987DFE73C7357DF3C02C1D78B2F9
219537AC98E1666C760F3C795DDBD3954CF74B75397263A6075CD4784CB7994F
0C9F5DB86C3109AFAC6F58D637A89595FCC0F9AB4FF7DAB21AA6B30547145EE0
4DEE94D1CEDF1E2D29BB43864AB5B770A14C98A4353A35342FF91B3D0D6E7972
5A6692D96DAC83BDF39427405E866134637DCCE4848D2B051B8E0EC7B88872E9
AE63B582C40009F7197EEF370E00450173B754650E85A2848A206027B020024C
B98169C9FAF20B76D6CDD0DBA9DC05818AD62A83D27A94524FB712BDC72F8DEF
D25B8B70D455066545362EE698AEB29466BED98026AD677C6A95582BC9114324
19B925629B2791A732B34AC069FFBB7F030D2512D7931EBC886B052717039570
A75CB813B762F68AE4F7AAE4A9D1779A747EBA5F945E05D1A6D910BD39544B88
61F1B9AAF83F3992B724FD0BC240C42123FA4D26E91F97298F2523123F4F6B60
F5114D530140C1C868C7B1ED60BBA08F874D9E1B1661393BD85DEB50C527CCE8
BCE41C4871F6CEC22A583406AA0C6AFF44BB564D2CD37893BFB424316E1AA4B3
8746A4ACA9B0683F0E4FDA892EA84F4D412B79E8BEA7A874EB87BB445B41C1CF
842D7368420A73984A0BAEACBA4E56BCADAD9C3D97762B6835375E0B9E13B07B
4D38BF176C1773536706311D8E2092EE50089F30F3C4ADE4D307305271D99820
89D73E7B73320282050D414A08CA6F8B4ADCD6594737FD87FDFF4724A8BBE139
2FDD6F261EE615054441DEAF6C0E544DA6120EEB299C2761995007D2B275FBE9
E9942E831B47D0F75151398B14A65214F97869C2FAEFF9B4FEE8C94B0BFA4B50
28811DEAEF9BDD2CBEA2CC1E4056577D5DD357CEDDA6086620697E8994F2A7EB
2B5F75EBB7B01F0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA53A2D8FDD
855B94E52711EC27C88BAC6C68007CD2B7DF4D4E3E8B5854442C5FB9B7C287E2
FA10D86AB5C6B4B3DA9688E96798204B8A791B5B54E5E9D98BD5B3A86B0AF964
EB110B540C82CE4A83C0A4567FE859EBDFE765804F6D92B811D773B475C03A37
2183C536651BCD254A10030AF17A438014B5902A55EE220152C90348CF590A05
8A2DC01704A1B7852C0770A8B48D694619D3B6F77D82E64E49E23FF845CF525D
7183F10CAC841F7506A5C199FB0CEC089B5B2A64DC911A05B7D0FBD3BC15657F
CC986B03FC79A00837C7DFC6CBAD470825AA8979C2394B84DFCF4ABE80937582
6B436E6034030E5BC5ECBFE09EF35F3D2835DF0D37360A9B5DE91E2557AB5F1B
0A2DB91E86B109278BCECF4B659DBABB4AC20EB75E7EF41A49066B41812F2FE3
68F51654EF115AF46CFBC3800C3AB9E48C9B1A6C27A87CE961E0DDABA61649AA
1E4BA1237EFB13B4872D158E88EE3F59090FB93A5747EDA57889E5EBF8BF3075
F4BAC0137BFE9F3A9FD49770A6786CD5B3E8FA4EF91BFC2A2F04AB5D16860C5F
15D56AA2AD38423F746B869F6C929ADFFC2F1C50DEA895512A4C1F23D181E6A5
511219AFBFABAE4AF312575682E6A86792FF4CCF35CA856CC9FDB88C51B00907
0AFAB115C5FCDD1867316EBBFBF36CA5654039F3BFDA83A6CD672E3FE980F3E1
7D913D7F009E62111080520DCB21D96FCA0AE67C04031444A069A6EBCB15182F
FEBA0D3EA2F81423D30DD12027C11D46982BC42D9DC23475C397D456E05B2BE7
BE469534C2490AF71BB6460BABFBADD0AFABEA8C80E08044E4C2E3B80761EF56
95001EC347713986999A6BF4405E09D3357320847B6C1DB296E14620C75A20AA
65A6D8BB74E285C8E0D2DD61A71643555DD007B6477A05334FF8745EDFE87F76
0D7200C559944587EAF9A8B5216B3F7E111EF7CEACF4063F1B86C7D5C49C8402
57BC6918148B2D6A038C8749AFDEAD63E7EE5E9B4B46A152BF638E861E139FAF
321A2AF2256EA0675264922F9A98E6FBC6AE9DD98BCC98001B381FF0A1224CBD
05F6F7703414FAC671C657B199A800BBA9D7715DFC217D2B3A1FE9844FCA18BF
43B26DD53D90D015838F8040DCE919A3AD39BE7C26F84BE80DBD34ADAE1D899D
D64BC02EB64DB706098E68EA1A7A7FF7F93ABD957389284A9FCB3E8B92F3A6BC
0449FCE2D6B4C7A6EB87525DB21C6036850CA9188998174C3BE3EE5DC01A9FA9
D3613E04F4B21AFAB6EDAC2E6C089493E3B7C7A3BE9AB31FFD0D9227EABE6152
973F8E91B0AC082197A1D4DDC9884E140B04A635B81D04BD7DCB029A6DB10FCE
7B59925A3F5FB7DB35B3D7944ED635E5A1CC35B646ACD0A28749B62599E75F4C
6636C972AF6BED409322D1CF9BFD2B5CEF6E08F7C9334D3291E8FF0E6BB75FD5
2D81EEB6FC227022120BEF4803811E7A148761334720113FF02B2C734749091B
E71BE45DA7C61BAA9866F81A02BDF349FAB129F23E86C9BD62FC0EEB7A0F67F7
83F02E71203124A14BFC52E9210C8A69260B1977B862B9F111E663E7538F927A
87C3FCB97298CBE2A988DC521374212B1CD239F1939E28CC5154BE59A573DFF5
FEE75FE714FFF3D54D09C9747ACA01CEFD260AB2F03DC4B76DCA2AE3686F7DFA
49F81BA6B221FAB4FCC24E1AFC902748231CB4CD1A96284BBACD7E00195F8ABB
D99400E33CD9D09310E77F4A81ABEF8E876DAECDAEE14452F3D8F9274D85C1B5
9A2A11E07EFD6044AED521112116C778BE25810FE125B5C289AA53571EA1D80C
46D6C6533F09A4B36CA6CB9A4F911431C1BDD2C8142EAB02475DD53AFABBDAB0
26162A499787D099A660B6766636CD003292E7EB5D8B7370D2FFAAB5BA101320
9625ECA3C0877640C27032E69A65588CD61115FC966FCFE5196AAEA0FA6BBB20
F0DF2534AF569BC8C28B4B643B809E168BE73099943D762D20ABC42DFCCF4ED0
E151DCDC6D11229581F400113A3491F5E07CBA5CA3E34B94447EAAEDD1227775
30D9B2B3A4310D182168ACDF7CEF71ACE336DC94D10267153A360C9C94BD89DF
ADB5710893373467687C4D00623F8A7C29ADFBEE0043D4664253B09D56759CB4
B31F53AD21C32584A34DBD8A45BBB0B9CF8EA0488AB109278BCECF4B659DBABB
4AC20EB75E7EF41A4ACD5B9E8E46AE9BC294D1647DAF9233EC198B785F96E711
0903279D7E2F2A9CF549FC86FE0E0B595F2DFCE91604F1F49F3D691F57F420E6
436F704CBC0A9C7299AF294B5DA2C34A27E772F3A28691A931DAAB33E447B03C
1B1208CCC0A15C2DEE572BDA14D8BDDFCF2743A15F8A90ADE0D3078192F37463
DF15E7FD87D172622D47714FCAAE24DE53C20BBEA11B7521FAD2EA53AB06C461
34B0983DFE4D84D0893A31E41E4CFA0E9F124FD73991B3D28B5C3FE66B594BB6
BD224F9E55B1187997532BD69AAA71AC1963D184C4139B0111BF88E55C4E52F0
38F5EB1238F9B749EBC45A95688575A4D2874AB2992B9433D88983EDACAA1897
A0F984F440B9BB0EFDD09656C615245BC3DF1316CFEFB149CB67410C30C1F020
3646F53CDDEC1E98B1B2AD79C1A84009407BE4EEA0E6E0851A59590D84679B78
E431EBCBBD0149BC294A9A29640874F1BC354AAE8B6717B22B54C2F289AAC0EE
A7F800BC86CA8D72658A70B37EEC59A516F15F22949AC658037300F1E113F46D
75DD6E9C7B5D8E16EB4F5B81DD222C6BF19D8EF0CFA34952F4D7C0250D658C63
3D68B6FAFE895787CE65A90934CBF94483C1D7C5CED7572391776C13384D3DA9
7BF8313EFC8AD0320518BA88600502C545F92404F6B14C483663B7102FEF09C2
5D849D7DAE91025A4C6D38DB11C4C1A139680095425AD8B4DCE63A5845CC7712
6DF2D9374EFF9A63EEB766D68A26681F75A165FB9D0C92DE659E44040ED5D4B9
E13A466FB2F8ECBC0C52019F55265AFAA13610E47DC498C33F37E0080DB96070
BBA2BA84739FAFEE638F8C21AD1D13D18209F1219F9A1619C6D862ECE82FD4EC
6EAC821F837228CBED51FA9D84A48D7F95683E22C76818637B5E982447388337
4833E2C4E3EC17659337ADC23BF2E23A462019A6C8D0750307647DCD9C09F61A
D2DBE14FE9EE3D83B7A977BB187362FBBE6620F8709E3D9C3668A71EA6E3A508
B70E113C92688F8ECD180AEAF98EBD7A1288AB7284B078FEFBECB1DC8F5EFEAB
AF9973A308FC31A15F849F425C90DF7BEB2428FC6575F9D179A2BF9BA6CB5818
D72CDD90E52DFACB64955783C79343CB1551171CA4E1EDC85D3D4FECF9402515
70F6DAB167D87DCBEA2E893E1D90E69E828F3C7E4B3D8E12AC55FC00A521B594
1B4A74D09E1EC4F2201CA9FDAA30C7B3B76491EFB210B2AD7503D23492E7E980
B2C4319386147FFD44C20F4FEF9B7C06072E0398F740D8BBD055A79A50E08D6C
4810474C709515D6A6557ED09C2D369DE8116DE8A806A98D112379C8DE23C75A
F530BBACF118FADF8E3F4824B954594A1F97194B19FA8DADD2164670C59474A6
AFBA7603ACDF0BB64DC77FA78F87D3790D5DD1F486656F38DC1095F93FBB61F8
65EFA251BBF7CE1D36B886A9483867A5E3CB8A961CEB372CDE1EA85206D62EB5
2BDA0AA3ED16B4315244E3BB451A99B211EEA89F4488B0B12D8E476305B91230
B51624D4605C45B51445B6E0D1EC6BD197D2FBC30A1D6064E2957B001530E2F7
0F292723E9740CEBBBBE4A72103663FE29397D8ADF26A2F3B48BD6A3C0EA6FCB
062F85188250B9E92573041FFF07668883E67BD4EAA01B457E517B2825EA5C69
166ABA82C58106F3A667930EA8EB9092F0767F0D69039EC81F005C2E1B7E7E57
7631C7BFED397F59BEB40AF34B719E6BB585C3FDCCDDA3D04C2FC7B2A151CB49
2A289F2C034A0442E910EE2D7511DB1D70576C69420C33679B2B2B734F8AE8E4
EDFB01780055CC3ED5A2BC3AE5C259BACCDD74BFD2C45FD1A30675D11E8F2817
E361F92C48D2A868B354F7978C76EA1140A78AFAEA913AE1C757643F0ED054A5
CA5522B0F83620B26F55D7620C2C1C39205410F50C7BFA2F130478C2A0367487
0F9FAFD22BD2AEF4A49818EA9DF794371055BF064C172ADA0D306BB9E8307E58
92DA7996380563BF7A3B679EA85FEF772477C0508A91E16FF3F53DF9BD09735A
F52FF877806442197B3CBB6CDD136F67951EC6044FC5AC0FE18757EB205AEA3F
F74416E90772ADBE89EB2297A025219D0B26577B7C61E6B62A581199E65B1D8E
5F59136D8FED9BEF89C3950D74363E157B01E8B11BB02FB00762A522A3DF2BD0
2514357EBC88C3F36121DE0957AD1610C7FFED2F5728D9FDACC86E45225931C1
02F27DDA7E73EE21449B74855BF1A023A7B79DE04D5E3E9E29E2C6B2A27D0F7D
E207770402C72AACDAAF2CF94A6DFE0713DB9B8CBDC0D146C60CE592308EA9E7
07B012A05EDDED8C8CDD041599710249B8E494B2014160CF85023E0F17185627
9D43F1DCCE1AABF47F997C4288AA1C8CDA5E3C6F89AD4B0309808CA498518FF0
C15C4187B5842159C81908B75A212B0C980B20014FBA359AB5BFF346F5DDB0BD
589A54893931D558FA052E929369E76CD017089645873DC47E51E1E4CFDC2ACE
44873FF17704C4D368DDE2B930D4CFBEB9FD0E4490E544D72CC4EE40E5ECCC4F
EBF01B060D77D0347B62BF951838DA34278CD2EEE9E7AF9559A80D47C776CB54
2D24B0253D61A9F5AB6BB0345592B42926CF2AC2C8813F8ECC62EAC182B1FFC5
71F81A1D74DF1865E6B0432A7A4305C8DE89D0F22DFF10997ABEB2FD88C69AC5
E31DBD1629720E21956A2E0336865660580AD6FAA5A61CEA12293C733E90B60F
0DB14D360264AA4469FD8D653A429EE76321F3DF1B8D279AD66877E0B05E0220
FB8FDF42954971173E8A833359F48570AFB66310F41FD95826D90EBE8321430B
4EB6B72238B57AAB07DDEECA4ACA5C2CFC8BABC1AE4CB0FD382E26BE0A83169B
6C371950D63C5946D179F9977AAA33E6AA81C98F5002F02D3E7B33B6F14692CD
8E915D11A05CE124A4E833606410FDAF94DCCCC062A8DEEE49513DE1CCF2C5CB
43CA38B6FA33E5774C334BA6EB4E7CA147569CAB615C61E1FFA0ACDE9B6CA0EA
0864F54833BEB33867942B175B089E488167D188C7432CC9CCAF37A49046BD2D
C413BEF2621DEFC6E1444264822C8973EB8766D839FDFE58085B97DF00EEC52C
0B79445680372EB8A34D972A13ABA38387B2D6B7148CFA99307C50C7D8E3C246
E698C6593F110D2B1C36425DF55B440BCBFDBAC428DDBE93CE72877DD4A49B26
9AEA50E4AE3F360A382EF21A8DD920396F7F52B7D55F1505D4381713A93E5F02
E55EF58E729E06BA415230C05C8F6BC0FD4F6B67255DF8BE27D7D83589632EEF
618E6B663F82F2F6B0E45E4BE3E27CECE324917C5A99F4A32675A342E991655A
4E858F0EA546C3A723A3FF1CEC65D5442724E13613FAA8BA742F3165989453BA
3A994ADDCD9B6CB08484D515C0D9BC826EFCDB25CC23092555066E885E2DE899
339842E6524793E24B0D160100C2DB33B80E9A478F514629E5A25C4FDE51CB19
068F183D547C8BC2EF02E325643F78D02419611D50402BDEB3A16A92F175FBE1
2DFB9D84EDB11E86C86C3FFB00BC4BA7BB30923E966967B12274346D1DE154C9
A6EC3722200E4229566C4B449EF06590F446448C1DADBEF2BCEE271D2BA5DA13
757B34824A7D11DCD5168A7A13539C7C8DDB7BB494A9C95CACA1C98CC87E8404
F41256B3DF22C3C0E16508BC96AF85F92849EFE0780FF6379CEBDD27A9EF99E1
2C42D9B164D359D7B3020C65DB0A4BAE1D4C27FF32A5D29DA36E297A866F7D92
DECE94F3EA29DFFD42DE8E35BAC6369C8020A4D71BE0F7AACCB3BE5EF63B1C4E
79B49A3A5654C42DE6FFF8AC8683DD62ED727126F236C7905A9103F32551D90F
BDB73C5F1A1555AEA91394ED682BD24BF59E04086D86EF34DD686EBD47A517BB
819BE4767780B05131565720F61FF5AC827C2A085375313DCF0512BCD5DE3694
6FBFC4D184CB3471F958F98B5D411933139ACC09AC2835EF3FAF19B53E44F7EE
B3410051871152619A1C21F744CE7F3A67AC069D0099A5BBB4F12FD99B9AB154
926A3B90C568D41F8240D632ED778BA9EA1C35E37840085691FFA140FCC6C598
BCACF8A971028198623DDBC37DB0FA6883858124FE6C2AA0518EF8DE08645629
5143D3B2EF67FB6AFC6817B8B15B0FA72FA7A271E988060BD574848C85BCB7F3
D74FE0BAABA30A31E9D2391925ED83336504E06A82A194C7BD042EE90B6808E2
431F556A997B23CF1B52822FCEA099C47966D70C09BE10856054704294478B4C
661D4A4E9FA155F8AEC542E98371B6C0E245CB336A48445E64140F3096AC095E
F935694649D2607D60C5F1E0C78012268AC3B7A4D74466964C4AD960ED9488E2
70BAB33AEC2A3A055F6BA3C3700A80D00F7582D4E2B7BA24A8294C452A40553C
7E09900066B43A537D249007799AFB8151C4C3AECDAAD3FFA42204FFF1252908
7CAE250470135AAABFF14BCE5129B28732673049A804F3A6A2C40A9BC62FED71
AF46BF9247E63EE5B0A73502A3B7F9768DCBEFA1FB84D7C722E2109D94A3013C
B0AAD078A488E4C442CECB848904FE3CD31460E3FA77DE5FE0129CC00AF48A56
ABD34136479D929405FE67FE24FDF010ADABAD7E396F1FCBC05A0C6DC542FB53
2DA36B3979C9E525B02401C79FF0F48D1832E838472A8F1A94A9182BEA91DC3F
7E9F8BE834F74A616E8415CF27C45923F67CCAEEF80AF06A0B3E3A704A3B79B9
14B6737628E5696D2AA21A60DDB2317D3C80B1A70B71AA537516A6AE95152932
C53F7A5B0E360136BA4C9CD37FB26769ADA2129A25AD7301DA5939595B1C1550
713957F4ACA332BDC9FD23E1B6F5F8A48A9C98B34D79C81D40574117146FE4B6
76C296A11ADF59C4919F63C78F9B7C2FA998F5BEFD174B5DBF44E16C267512E5
FC0B16726FBD945DDA5547F8650F67AA46311D7FD607EDA8522E4E789020B1CC
48B6E5FDDFCB905ED833E2A2EC5E9FDA641FBD4D0508C42588F7AB6217C9CB40
AD1A30249D5301FAF2F3A8597041E8957D5ECB3BE14010F61DF82876C748C4A1
2ACA16B11A9854E67074DD421CDC878BB48835AF0D965A0FDE21A042E8F2E75F
E714FFF3D54DF5ADCCFD125C541DA5F25DC6821698ACE96D928581539F30395E
09B9794B61556328ACD599FF9B9CAFC8BE80345668C48F9AE426E26AFF663374
31154C01639ABA0562A57F0E4F5DB216FB5C3DF95492E74983439AB75BC7A21F
225F83C4666B0EDA9ED1EE234C9E8B874F03F423459E59D373C12203112FEBE8
6D98234C679A1CA1503EEAC4658CE24F7DE8A127A4865E3562D7A3B0B3441414
4629AA8E5986E3339C9F9E43B6A83BC488F512F8067175476917012FBF04B516
65886CAA5F0136DEBDD9D4265B8B8BF3A39487DAEE1355AABFA3C18EC4503D3F
55A3374474F1D4BE72753A842DC6535B2BBE6757B9B29A5ED1EF6243E79654FA
BC9E72D4167DB96B594B7F8296FCE3845ED8FAF19EF617C2825BC78C601A18AF
F7605F9C0F5FBFF0300C0F80DA2671710E8A979B29BC4E9331CF876F31833338
2EA001F1963344C2A01874EBC120B8A728EC0011B6E29D36DAED8BC3EDFD4E8F
036B7A8E0B933723216C053851A42DC23C02EBB7C59A47E26416D0C02BCC703B
3D6E178A84BB39F3A3D283728875776801E720575B4FCDBB2844F2C0384E996D
072E87FBEF1A4EF1FE73D48B3ED3EE3604FEDE7B44A58B63AFE598C3EDA15CBB
4A7E9B24DE12EC7FA36C2D80E7E32A732ECF3856D43066A459E4322ABC33A840
F1174BB23054ED01BE10437CEED4242B5BAB2CEA5CD771D0452943086457A0A9
E830C0658485CA66AEE613D71837FB78CD002E65B96BFDE4A362D5BD17C60B48
DC7AC4D4B4C56E14EFF907A412323CC89CF705840B3D6E71104202FB3F677DC4
F398E82228CEB92CE0B434BE4BF722D8207FD68296B4ABB049ECEC181FEE5B3D
DC49BD8DDAD75355524454167D9A461ECCB66125A0229953F0FBC15FEEAFBDA6
50DE094645F2CDD7998FBCF51890B5C5D6DB92F2C0584F2ED652E4CF3C7E37B2
DB794C126F538914CA986D90864BA13504A76E3B85EB914AA59FC0BBEEFFFB52
CFF48DC639DD9A89D4B210ADBC8BF9B0E6EC288621C12EFFE5CE74ABA28C8C57
8549FF74ABA1754D1C66857DE5B2B016A434D22B433FD45E2AF2741F2A313359
D74CA4869DE195D7C8EE587862E0A4436AA3CBC2F5CCD22DCBEE390B9B7BA014
5D7C79B475A818759E047307A965F5EAA781A239685716F6A646D2CFFCAAB29C
CA2414C2B1A756FF44E49D23BF85ABB2031EC08E44F09A3B24E4E4CE07E50B89
596FC8F4FEB2C582024503754847E28D80D763B03B656701A930476B878CC54F
294DBD5F0DBF2A9811C5DE8404F8ED72CF2BFCD6BF52FAABE5F2F227A02043BC
C8CB205DE87280206EBD32BB042F46824DA25035F8538336611868129C118613
0E2DFFFE8F95F43B4B6195F0F21332C8A46FEFCBF589BCA0F4BAA4D5D965566B
CD270635439764C95C9A28841FCFCF279EDC74DFC88631D3CD79A5DF50A35A70
75E0A73A9EC77B59540B407BE6DB98964CB404D9E1FAE18F1A7D26F4B731C3F3
87F20A260EF22D0376B41C806A9ED583DBC692208CFB1D4D845E087F5FE1A6FC
CD2AAAA431B36F55097E479EE81E211AE26371AC95C993BF2A625BDF1D49FAB3
AFF04E82105A7822B3B824A70DA042C65F687D8908F985795BED8C32883D9235
708F3988B2668540D20345FA57D34BFE99DFD462C1C68CA7FD651AF167894B97
43045EAF35E6A3C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C5FC0F145BA
038B071C53193CC5953D83CB2543A191750BFCF887D7946BC91FECC6BF999DBB
365100BB79253FCFF529A6AD8E7F3C78D26C89F1DB2EAFA79EBAB6113E09EAD6
0A9E40FF7BC1C8059928ABE24544F41569DAEB27A66C3A14590FA2407BAB1E8B
B563A9C89C0F79AAA6185F391E8EADD19E252396699126A3C769848DC244DCD2
C15D449A46CC5716E1BDA9EE77AD3E44DB02447082FFB5DFFB45A2F385A84BB6
4B27DA576A7BD8350C286091E132F06E7C2AA3A3F99E9E9848994EEE652E3CE3
8E4AA44BF65951ACCC3EFE9914296F95C51784F74D7C16706D5F746CDC1EC49E
D6114400F4724ECFF05FE0BED47B316A11014ECC4B9962A89661F28AA0C13CDA
7AD33192EF964D34DDA062E9154DAB0A9643DFB1B2883387C750B26C08AAA990
E81BE87FEA27BCD1382A83DC20215D1EC82DC6C869400F05E445FE8DA647EAFE
D062C59ED0A31432928081B64742B85EE5EB533662CA3DE27550A6733A774583
63E5A5504D88A31C2EE5CF4421803E889238EC13069E43530B402B78690275D5
0309730449352FCAA3443D1D03E9A3CD593DFDF0E8A27E608DA36E59F2A32FC4
3E5C2F3604019C1E6EBC56418922D37F9EFAE47ABF626218BDA22F6E793C31EB
F5C89965E329D5452E0E644C5521B5226A3CE66EF829DBD89EB24BB2F33508AC
5A8BB8A970AC962596E5DA29211EE28BBBAD5C077180D0930CF3FD6DEDA4861D
E9EC3D9161B027F7636E06CFF449F59B4564DA6C51C3F01A4B69B445B57A6554
BD7686271E827D0608A6B90E08CBF44A30669AF4E20CD5C6FA23D2B5109E5B29
1B20B85791FE7902CCB4FAFD84E71A3FF78D98C0B0F8D853A6AB8D32FEDF1A11
073D67975A5D0342C8A67BDDBD597BAA0DA4E10D0347ACAFBB95C8D90D7AD6FF
6713EA292EC1AE9E2DCD9DE0EB684D4926F8E675408DFCC7E67C946531DFF696
69CFD455CCAFA9077E7F1FC03853CE5EA4DBA6728946C135BFA75A998C13A785
0B543F668A1C36B35E04B0FBF632F92F872718EB9D5815188ACE4CFC939A219E
C7A7DBC94418D96111D35039CE4A1534233A0FBEC8AE57A7597F604B5C31598C
391D52AECE76F5BBB786C196CCCAF13DD4617C98D0BB0F386E1658C134D080C5
01D3D8DDD816A28D7BDF57C4BBCF8152ABA14FA9FEC5040D1B278B4D30DECADE
F1199B366A8F2005ECCE7B2ED90343D23E006ECB282846335D3ABC9D10FA3319
66743BB807BC62ECCE310D8B7E7603F5430A40F35CA40C36D30FA23AE8C9F952
6134AC0E848850FB9B3B0285C7FADB28A3711C06273B79FE667C8CA5C945BB5A
D34E9EA65F91642CFFB4D4FBE794C1B65F457DBE548C32954C60747297001747
473ED6CF55CB599D05340C6A561DF3A56C054235CB5A713FDF7466FD1B8542C6
AB92BD3F909E6D8E33EE92C3F5C3905FA2D72C08906D0D2154BB984CEE2BAC78
CC0994D3927C8610AB2F720FC5142AF5CEAAD07B020D3CCBFC275E76982C112F
B1E3B5437964E2431F7B614CD62017182ABA554742B1D8A06DFD70CDDB936FA8
B7F15B686826B5EF72DB390D667DE1D900F22956787D08993036C7FA255F3563
C87536427AC8F7B54DAB946E2937617D922CE89E9CD4EC0D5C540614DD882127
AD674DF737129BB809BFD57A4C471B6800267C03E9D494AE9808EE75928C6DB5
CAB91EA60064C5EF7B5FA8C516B07DA395BCD78139D32BE1512EEA2757F34ABA
4E9168E7D3DD8A0047778F21A727B91BEB6A6961BC58263EC5157743FF649F75
3099D34D1D2A24663AA6A96DBD57E0710C7318C152697C6EABD98B922AA95383
2D094E69E6C75B73F4A9F21421C927120A20DB46B6CDE4850FC533330DD354E6
697425A2365A4485E59DF38F5D6FF092E1498F8AAA6846B39BEAE591C223B978
D0D24A03FAF6FCEB9A99B7DF7107BE10726126F2D6775F15948A9D4DC82D6F60
D7DC6F714651F02BBF294FE3CE1EF37AA659B04631F2482F244C74A379BC838F
0E570E8CF04E85BA16BBB3123ECF3733A72C3B42A0FE2301C72CDB2334AE6D26
7A009BD0A11514B5D3FD711E158D13F55A2A587261AF1A2D7EB2E0DE91E31870
A36C2D80E7E32A732ECF3856D43066A459E4322DC96C2BAB2409BEA0B2194F82
37AB16453B9349050646684C9E5D0087CED3DA9536E8E3F43FC7476E29B41AD0
4656E62AA9BB968DC08B75C0AD9C60730CDB6C87A6D13F44B27572914CA41897
49A74DBB0EA1CFAFCDD853C43E84BC6FEEB9C1DE2149724C015A2D62C7ACB019
6675B77E287AAF68FFDB416935BF25534EF2624694FA3898FAE8206FCFAEF68C
A01BECA56517AF0ACDFD9C0B72F8318687EDF29D576787EF5896E8747BD17756
5DB81497F92364C3DC2A325932A4EABB89DCEDFF4E028F3583A84BE10A7A659D
9A45853C24DAE4C4384D6A6C0B4E1A3A01BB8A2C7110183BFDB2C400CA81F0B8
2DC98340DBF80D727B34D0F1CF6AA03DADF006837A2C5E235B9EEB488279B3CF
D4E356064154DC618D0031D66724E959D8F9F18293397942ED0508663E38B7FF
05556CDD7FAF7FDAE981CE63468E0AB1620CF517E98EE8437F47D2A1F309425D
522DE65BA324640B70E9B902E9FB32F894C4CF446B072D157087ACA414D28147
17BC297FF21649EFA5333753B06A1720430E0DE1278C559D42176DEA4E100EA7
C8343B4C13236CBCC78A8F93CC75F90C9189297BEEE0E5D8962EC6AE415CE7AF
5AC0FFC6BFD118722A55A158497823FB846DAFD3297DA381474AF81B5584B054
A5E9575F8D349627FF4BC3D6663890400C2F5BC1E1A1E73CD56527A186EAE15F
637D7E107FAFB4619EF957D4A70F780541A82F21FB94C2D83DB8D42A9E6C43BF
0B5B58DB26FA33A419E891E8C5AD303FF87050363CCD7CBBEFE7C433940BD3AD
8C75262EF6C5B60BD81D2770945D3D6A890EAB1256EBEB0D9B5DAB1C7D960281
98DFD7488D94BB71CD8EE528457C14B635AF49AD96F4316349A0C9B14DDBE333
E185F4E23E0A66DDD15BDED1FAC380B91F8C357B099B0AB9BDB8192271B478CE
0B38151243D996CA5D7B89A702EE7999C2A97A199035EAB7BD49EEFBEB69C30F
B79F4198FB57134BD4E40FBF297E85C3F343EF97C58D1EC7256EE3FB416D8D4D
75C7DB51C8299B1400E2E12B13784DD90A5C4E41D608F894BE066CAA01A20DC7
984F743658D8D43AF001ACCC0284EE83D6B900DDC009E3C337564EACCE768714
D7430BE1825C90D88DF40E71F4351E68CCFADBC48C07DF7899C4AFC426774F1A
0BAB88EC8AEF0D7973C557588532479B2011B716BD1A0CA8830A66F47FCF8DFF
BEE8D9737D9D511FF3CE3D4822338BF0C521EE2C2DE30621FAA6910B7BC23533
16D7461641C4AD31A431F47CF67E6AD90E05329C3812E9501481D533B2FE1B7D
846375083A7995DE053DD402A7DF8ACE2D43BE46A6C48C361DC44471930A7DA8
B17E9ECB71383BA9CFF1F7F99C6256A871519744DEE55CFEABA2ACE322F0902C
2C9C3FC28971831F19E54E5FD15206E00CA94987B047A3CF0480BFC6AE4C442C
5F4D3D9F740D485F74113767B935339A60FEF459CC7C05546FB03ADB3390418F
9DA6F91F9CCBF717974CFD240179D87BFA6E19FC75A89D4EA0B08BD671ABED1A
00AB59A970571080CC4D31BBC3C5C605E999054A503B5031272AA1F9CE53154C
E8AB56B2B7870AE7F5774E3B7CEB73C0834E76716DA061DBA30A862E8512089A
70801F323729C9FF2901CA43EB4A6A0A2922929C584E84944FAA3BAA9F933DCE
BEB239D6805C154EB5B86BE6651CE87BC201895FC7C24154878871CD05AEC82E
4B47E5F5A11BDCDDBD8C2EE58FF810C0139947FA5A97A101EE83C415F73E1809
DDC6F7C52607E5B310C01AC3AB72C5869514AC9FBB057B8834650E7183688A57
4B3B3188EC6DF281C80B25E26D95C7031C937CC5AA45FB7CB7677C30A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E039670DCE4A33E4656E1CD16627247034E9535C344F9276
BCD1184E4CBAFCEB9A744DFDBB2B24B83444B94A006DCC75C1747FF301150AC5
0D4CF146F4D93B1B3AF560AAD8F7A7490EAF6000790C1C1D0ADBBAF0EB8787DB
C419EFE2BDAA0E8FE3A8E1CB81221F5C1A14D41ACD313D783C2BC59EA0BAEDB0
B7D8AE9925C9A8170AC68B213F2E3626DAD8A6F7825E17723ED1EAF9B88AD6A9
CCB5F6F72FC0614C2512D989F9D80B15A0764CB951D16524B621E0A4FA9D6017
4D4DBF909B2858AD23360C680E94E8B190B1CA160E70DC726AFCBC56E7963B09
2951E7F28E41B6198EB076A4029497905BD4FE34394358212CB5E6B63474D602
FB6D02F57F18066ED53549CF9E7C3EF75CEE70F5BDB495EFF99DE85EE281228C
7336E07F172F3A50C3275885620061EB2DF4472122948167369C36F5B6C1A7BE
4066E1E941A608D1ABEE882F8B8E7E3C02DCBDD7E2AC003FF35033C237D55F6B
18117AC178223A52A656B1A57D8BDB3D7B62537DA14915258826A5E4052ED21E
50BBC80F93F95F2F4AFE08768C4489590992254C9ACFDA5D5D5A18E5ADCD42EF
2EC8AFEE797BF8BDE5D7CC3F8237395F6037F0180333B6DA2C1BFDC4E3406847
5EF1CECC81F0CBD9533A766C204BBF08C343D3AA6D7065140BF2998E6C318682
6954F8AAB871ECDD9C87C2352AB057C78C12B423635C615766761E290D9E1774
A0955F7A1770C2F25785DB6F15A159D900FF96495BB9B54ED7A963CA7625C148
E6C5DE3591CD03E726B1EA1DA0D2D3A0C45ADBA046345E1D25AD1A01EC4C3181
9D2DC7B35CF2D9F0F492A21BF11E2EDC39FF4DBC037FDEEC19CFB7C208155162
65CFA9E68D9392462B76A67EA8D37038E0B9D9C7A888D0E914A8193C18E7F401
C44816311719E11D1FCB91BF653EB0FF18A376FF6FDE547A4CD3C7D183BC25FD
6D5A812EFB4132ADFA39B4F873B845ABF2660C7253EBCCDAA30204CB7959E437
397D97A33B2F07421073A39F761F19C2BCC97B7E3E1222DBE1385139E26D2B3E
168EE1B0AEBB2ABAC2B90A514D97941B12553D8BB26DCA26247A2D23E1068AA8
DC7910808480E6965705C897B2DAF5748CC962C2E032AD6D106CAECCB3A125FD
03C5DE5384AEF8B6C7C5DAB64A0F3DBA016C3F154D4E5B3692276D8435C2A3E0
1214CC90D74A9FD008103E9C54875B2146E9F849F9E4AC043A1A15A971EAE3AF
9382824A4B9912865C6FACD2B6555E8736C105079299E68D61EEB26E5F3981B8
88B1A3EF45EEE1119A77341C19ECC2E78F6BA5E79950549BDCCFF714A5EE013E
80D4E092D8B192E25D2306A9907DF8E4AE45EE4BDB168DBA8E27EB9DA43541D7
D09EC95204F7B23D88EB36BC2E699A11EC1AE28E0E6F2B383713FC7758362210
962B3400AE0CDF57242EA8A7DA9113C1877640C27032E69A65588CD61115FC96
6FCFE51F06B2E037FB2EE97F5290CC0000476C0235F3CD2DC61DF8EC42A55A21
F2525A8CDD9D762EDD8A41EE4E5A335F726406002FA2421F5675FED3B4BC7779
14F71E8C1191FC3D85580E60350C3A635A2B883261095DEE426BF12F8A8BACD0
154C4727E881704817CBC33E6444B8070D31E6FC60F8C7961BA96362CA771E3D
B9DFFC97B554FBCB62F90A0A80260CCF63AAE519616F25D3466870C3B0F9F47F
FE4EF9561A25F70102C8091AF9EE5D5BAE73131662CFFF5E427A5F5DBB56FE1F
CECC86E287DE2443F8EF01D255DC5C45C28FD9F66E5ADAB89EFFEF7EF9EF46CD
604D79D4F83161C24A1CA3D3503C52AA8A07127BE1AA3359A90834F4A5C6383B
C454E4389A1FDB3F30FFDF2121376CD97019E10B79180B078E5C8EC998673E8B
1A7FA3C723DAC77B64A179ACDED0CBBF76726AA2B9E780D6954E154DD58C659D
576EC783186F66BC0AC8953B06F99B4CF1A5FA7ECC1F4CC63F2B9EA92EAEE2AE
999771B71AF9B30F2DA4BA4543C27621FDBA8095A57A0ED59D1FD8F749BB325F
A3283B2D61796769BCF858C4EDD356EF78C8112FC5D496ECFD6D06B9A5AFC8C8
C46BCFF335C364E266DA52913DE8E26E48E8AF62FD65FB576024A490172DEAF3
9BDC40B3CE28A9BFF70E85FBE7E7CFB5E768340694949F1BD28A6201A92B2B37
B9D012B8BC5C0F3450243B70B07A7F9E0672714E2AE73E4139D9E1523BB244C7
8E629FAB784FD76372CA9417FA67F292A501D5EC3AA812E09406550B33757833
953343D5DB7F056B3D608F4089340F038C4A68DEEF068032B92727291A6F8D05
3F2EB3FA8BF2C5D6EFE5B2BCDF185179C3894F4E5545FF91A27912F60DE02E09
F6EDD7742F9D186D57B74D8268BEDED04246B2492652DDD3D3E53A58039F45D8
7E787DC0EC3562E8A8F95F922F3AE74C6B43EEF7035544EB76199525FA7D80B4
A7D80DA766DE4ADA28877B6B867613D53FD6CF230F4B050403F9641EAAFDDBC0
82E579A06D8A3A323458808BAD06081F0D8CD5BB65171F3AF111E2722605554A
462713C29C6E238795A66FE9C57B4981A6CEDCECFD566DDCD1B92E0D08B03A11
4275D2FD721D8FF2CE1C8897DBD79DF9243C4E6488D2D3CC9C266FD12E129320
B5159FB329E4D0744DC2F3EF68DE59428D533DB0EDA6484035371F2AA523BA4A
DE325CE7E648920DF308FF968BCDD2C3C8C4A6A8D661A6CC8A1F07F8F4CD9BDE
3CE0EA3FBEF65ED35C6D8E31D2914E409D64B390B0B11E041001D41BF85A2BAD
AAFE357B446B13C8880EF8F7B56DC959DE82E9467C98255B361BFB67AF9124FF
E8EE27653324215D2855B6955770F81C522441AA67B18D8FADD66BAF9417F5CB
6B3A9186E34D1710C01C839A5CCED84E6A9B242B04ACEBD27260F059F014B12D
4A1C980FE488F8D49D3A4BB2B27C838A1EE98409EE7CAB38570490E07CC72DC6
67B7655B5AF313C62F721FD642F61A533698803DFB2A20226E582EFF3AD88628
45C373426BE65CD959E960C59C49ADDC24B5E43E87AB11CD2BA1966F4EA30DF5
66B55D4BDA83DA7A66C7B79CDCF20805884943DF21C1F7CB9221317C8F77373E
23764E9A5DBE640CA98585DA2A4AF9DE5A504609FD4747AB61EB86AFC45B70EB
42F8CDA0BAB89ACDCB1E9411784F90B6F9F596730F28FE49829809557E9227F2
06D6C63C6B1A85CD6A38288D1C1A551889A3D80A0C925A38C143355AED03337D
EDA21A5BB90DAB18D604CF9A4DC9F45190E73B45F78AC1CE5BA5CFE547A418F6
F122A2F250E805C5A55E36BCFC73585F0C578B53C31C3E2C6EAC73507D4CBFD1
6D0B592E7A24A122ADD6648E6681439BF1FABFE565F3CC7111BF7634B2C0423F
951E6785D3FB5A046D818FBA90295153CC3FF0A4FCB3B2F24922F77C733167B2
CB7DA20C340ABA91FF0B3C926798326EDCFA642CEE775E9EF547255845970C5A
B0DFC8CAA76CDA4FDA13B91D0B53F41B0F31EEF6E5CB36F29D51120BC314331F
7A91B4F74898E2FAD14576F81B1D688DDA5D3614550395F5A21DBE11C89C293A
D6CB2415433D3E548B9BD474843E3A99ED6986DCAC79DB20904E41A09E68DE8C
8BF53AB40E03103A5A199CFC46CA3D96BE9DF0E72C6C5FFA28489391031EF6DC
2E9040E85D23934575F0665477F1D1B294824781CD883EABB77A8D8A93CE85FD
A9F9F66D9078BABBFE2E4AF4652A045415357139734003FCC7B68477A595DAC9
53D2D9A84688526A8006AA67BDDED5D220D9CD208CD8CD85CB0D4F824D86E193
671DA5585BA475D84C286D85B6CDF0F348A9853F0BE3BB7473BD7CD3F9F720E7
58D344A4CFB4F15A942D04E4C6E9A1B08B3C2A698E4F95DAE539B5E403A07714
21FBBF38BFC8CA5FBA4E4E99A88103935A91A910B6AC680A8D81030FAD181E79
1B69F4DA8D9F0BA385206A85A4ADBD8F3B8243B1847292D7D4C7EABDB0E40641
84CC0FDD2BA71AE6808D98937A7AF5F2E15801E0708687B05220470E309616B0
A7A154D9577EB6EDFB9F157911E60BFC3DC5BD08876048521F937A458A63396A
578F0213154790D5DB7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC0124B33
4921069ED4EB4830E5E1BE4EE7195B4650686FB865C1D7512AB6E16FAB0A633B
D4BC90EBEBBBAAEA670B5196A07CD13F4F32038FC8BAAFC17A8E9B0CE1A954DB
D97AF3548B794EF9FE03CDD2EFFE47BA11E5BC1B486017CFC4341EA63944C6C3
3736FAF77CF6B26F1A455029BDFBD93BD0FD77ED5438028BA7516AE712838BCB
856C1CD7DE9E9C0848692C38D1E3016BF4B4E37EEBD2219D8FA49A6B1525AD2D
1F56968D9CFA81E0551A545C20E21D6D22B965F0AC5D56AF4491B6C4DB377699
C84E1A158E799D50610BA45F2003568AF44E2EE4DC9907271EEE88240C4AC5FD
A25B65AD51D3F9F90AE53EDBECA7711B75C6AFECFF846191F4C6B573815A3AA9
7B5374F8BB006B180067B2F9E68C5528E0DD9A56E20DB4DB3FBE96443C3EDB23
C3544E1DF0BBEF26102990E067B8C07EE8A0BB368DBD6E533D154FA36FAB2CA1
95E397F971ACD9152362D162698BC6F7535E14CF202C75FD9C72602A065760CD
6959497D1C453008AF26856BDD3C2C6412CEE556A76F3259898B56A46537F645
070F1AB8B6C116F03BB593307B759B93432F1A710625681DEB0AA33A96377F04
8A63FDBFD917BB718E9C44F84195CC47261D453B7609E685C1A00D822718BBEF
12CBB30F4304FE6A96644D376A01518956381347C7BD2E67F7F7AFF7656BCFED
6B07D654AE74A7F8B19F9CC9AACA37D69717C8BA612B65CCAF94A1B90B32120A
BFF80827DBBE528FFED11D4470276B176E704F3E22C9B97CD4154BD644837243
16CF0A0F1770DABFA09730FEC742F9287F2792B92AC122AA903C3D3F360ABEFB
007D46720081C49801814BB3BCA93946148F1ECA353AD07CB5125523DF789441
DEF17927C9D06F57169144E77188271A42DE0CD89406E432FD56FEF121AFDD16
58A7FF5F8BF26006164709596C0E78321C9CB5060800D617CCE9F638ED284BC5
997AF8B3AEA37B570C5A08CD028CEC212A30D4391FF1229E4F84AB4DF31358F0
220A9C72BAEAA3AC1DFCE60C71E20313F9E3AD9DB070559D7BCBD73D1561064D
A0D11E8B2EB840E1818F6F1CA1D2BF156521A0939E9A444E468DF4A833DD510E
A6B70885A134AE14DC6B1CFB81E838B97BEC540629204632C45B68C653F933D6
CEFD146C84A94AA7AAE84A6D87A7317DF34382E4302DB3EDE6A964FBB99F8AF1
70A5FD7DC04A51283C822A47B5069F7527ECFB9E79DF4FFBF19FD0FD664AAD88
699BBDC9D3FE09EDE49A4B4785A6F1FBAE9CC0B3B1285D1EDA04B7D11568CC27
1208DE70870D97AAFAC76496D80FBDE4CD2AFF544E59A633B5520AD35E512373
2F66788A17E10B2C434A2821DE83747E516D0557F47087834CB6BA824EAFF494
AB782067526084160AFECAE8B1362BA3A2DDF29C622FA55D54800823824AF57A
0BA8B0FBCED45414AD2285ABCE7D352FBDE6EB1E0CCDD7FF4B5719114C0DA6D1
B0AD44E8FDB48008504174751B3CADFF36A58BB760E6EF9DA2B8DBB44BF54B6B
8675A676DA0B21819E209EFB5641184DAEAFF3FC3E99EE5D9196677E02D47DB2
4D4967158F415484BF9D6A2AF4632ED451DE2E75ADEE792D7D611BD1053C2B9B
1397823F52848AD4A1D16EDBB8CB4667B1C9C8795E869B9B7338B4092A8B3139
5D9C7991FB310C65922E86F99352A290855C049C95D62D8089E4AE7B8D46F33B
1E073A8738C05B8B1E7C3534BF816D19A02789F1E1BE623EDD5DAC3A49FBDB14
0741D2C8AA4AF19F22592587A05FF0A32616DCC21B126F607D31F950B24B2C90
42139D5E7DD43BFF1AF691487872585C17344CC47AC7862F32859E7D2235E520
6FCFAEF68CA01BECA56517AF0ACDFD9C0B72FC0335AA7F73D90272AF096968AB
75F3F1EBB30B5DDD623272B453337003BE0392AF8359E416849A0B2DEBEF4356
2887C2BC9484005A11A8D4F968E95FDE6C8C6BA09493239E7D0BBAD6E383CF9E
8D0ECE8EC47CB9D61C5F5940A8EB8342C2773CE38E1EC3132A28B15C075DA951
FA546D18A604A0CF33C594D5A5B386A2B36900589DDDD7C0627B9B1A8838AD07
317657050B505070A9C4DE98D7A9D72FE8977B2DF4970EE03C65448E5F85C74B
44F1E843EACAAB6E2ACEEDF17D2D7FE4232862C16D1DED415D443183D46B10EA
B91C83A0C09316FB0A6FF881EF3CF35546609FCB048910F3D70211659CDBCE05
F0733AF96931066C16E1C212D194750A8A223D02F28A0B8845A09F0FFE11CAB9
73A92078EE12F3DEB4E33DCD967D167E9A300155C920430B9B73AF085CD308DE
598078BF655B04BC4D5EC219D9C8CA25E69488DF641E3A087A0EBC9654A68D6C
CE78CB5D59BFF85288F1BEEBD85C8A2EB583446E2BBF2C8521AB6B8FC85ABE68
9B800B8365F09F8ADA0A53258C6A96EBFA86A669F671B2056B5206CB2889AE83
23762D2D4B60D7A3E379BF000C72C3891E4D22B3955CF3EB23AF2E20702F9888
B531CABC31F73E1809D293E755EE7F9DB99A4CB309AFB6D06F28AD54C9C388ED
9C090F240D1CCABC97F3829D48F5E78825737DE521197FF039487CC65DE1D661
D58585D675467E6606632B9E52BB4148521096B1240EDC18A069CEA146770040
3A1960A08E254804C9126F6A007AD697659D0F4B9B7BE0BE1E7D18DC0DAE9A91
044DD214031FE8339581A9798BC43C8DCCCC0C922AEF593F091226BD53504A41
4099BA8E0CF713EDF6820E69D5CC3D80B2834416E19C17F6D8445996EFF51667
A11F7CD5CF8FD053E67223B64D740B7B53091E8B252D3920883C966C6C44E7FF
C2E83ADA764F9A3C307263A6075CD4784CB7994F0C9F5DB86C3109AFAFF575C2
96EE579D2F20575F4CA3B9DA9E2DC2EFF49CBED9A95C1D66866465AD9DFD2D25
D7026D8483CADDD89086B1034E440AF248939790081C2D4760DFBE929FECAA9E
183FADB03DB2896A8BB113136337F88C41B0FEEE9F64FDCAC4A7034BD05D83CF
C244D7DB0CEC691FA2A16811239914290A07373ACE6F9ED34CF5FD1C81292D7E
C99BCD8E7AEE127E914C372C6E2DD84989E78792EC3F51F453D2C294C3516F1E
E4C13CAAC355E995A962D992766BBC57CC16B87F75A33EFEF432A1E2A8E5FC47
B8C0712569F57D1429AE67240FBC800AF56751FEEEB699048495B7F23D344B5B
3F2A805F8F3BBBA4BD19649A69BDA5C4ECC8F04DE5000FE419755D087A3F3D52
16D8AA3510EEA9F221993D48754421E6444BA95515862E744155CF172092269E
14A11BA6A5BC7DECE20029034C88696774E6E31A0BE95CC782FFA77F2824E605
1A7F871A464773DDC78289D2EC32B466D21C9B802FF1810458E2756AE9680676
164D7B4054DD4FED1E8DB315795037F147ACA3D0692E755BCAF6AB8F5B958F7B
91385E510CDAC287EBB03172319F54E9E05755F04702A145F80D07676331178D
2CB4374636F2E5DB8CF80B65E415BDD44B433185E5270E3D59FA7958AC9BB93E
2BE97037023BD77C5AC2AE459D0E92C1FB18CC4B968D70DFD13C6223FAC9AD31
25D7FFACF79771B4E47D07EA87335F94152A9A489FB0D7EB6E4AA0656AE18670
DAA3BC88E7A85599FC794A93D3BE83D6FE5D06149532684067C78D1E6AE1F11B
D1DF347889436C77BD8C8D332D0BCCD1046DD47CE6505D1BE30AEA47F9AD8CF4
505C45A38D08DB2EA29D2C00B939B1A48FBFCF71D9D041AFE0416F4F1A755E97
F12D7026336808D20F3953C0807B3E840E1D1D755B40C834FA1B7089B2724E56
2CE367D96B03C0B14F5DFD867ECDCEA7739106F97A0FF2D6894AE97057B7FCE5
DA36C70DEF611A5EC1AFF25CDAD43BEC7AAED1F6BAD964197FDC6B983373AD7E
52F1BA59AA153AEFA72AF88BBEC2E2464A4535B20E5C30CE4E498AFDFEE90938
2EF0E686A3BEBF3DDFEF4727AF2C873A42C13AFF732ACC9BB83BF2862E7DA086
EC6968B878036C6EC2CD975545CA4ED25EB096A30560F002498AEB3445D8CF8C
EA7FDF03568AF44E2EE4DF2DD772CE2772DB7D5B3A765D09AEE0F0178E20124C
FABD7C46FB3284186CC6BA6A41105AF4BE60E0FE5C1E439707D78A9A97D2774E
F4D5FBC8032955669B0469E3556AAEF1929CA192818AA9BDE03FABE59313873C
B1AD4DD17A02979C16D8514CA4A9D6C1CF093574382D325641687B4B622D8651
9A9A42FB03DD17290E01444DE0216C33604AAC54ACC206DC00F5B58A70D546BD
E99255756E49A8E7CF22C48D74DD85E83A3C976FE83802D4CCD9281B61F1B899
CB78C94227A3AC6A6F78E48B81A8CA11977B624E6175E9B3AF676603DD8C5F5B
037022B38CB7DEAD3AA065390AAFDBA137D3B30AE2D428B27933780412D9766D
A1E06DE0CCD39F4F6C393C39A8EB2A7B29AC7409B9F4C59111DFEA8B5DC7B742
EB20E7EAA201549DB7B98CBF9DF7C77342796363A7B6B294CE26DBB9179DC20B
FA57853D65DB474E4CEB98EAAAE80FEA3557FC29EABE8FE096ECD3B8D6F6F508
EC1F59EE227E4F6A352AE8B13FA1539967C49407FF5E0D54358CA6C8C48F7238
147E51E3B5F1A3D1BDD00765D8ABF6FB6645816F11C172CBEA408B2B3F92ECCD
384633B1CFBE950D0C420E2AAA2D24D2B7482692E8C4487E1FF5F45B9A4E0A50
A5974ED4B92E67F46388416F4E74B4C94398140C11B0D3D8C485E662CB55BE23
01E115BF38D18AE8461F466E20761518F3DDB1F7B334E90E1996E4C2B83A5863
391C91A7C76BAE046587EA1350C84F0ADDDB4FE35701CDDDA2CE68D78F0CF9F0
CD0870270F0F40EFC13B6DFBC3D285A49C54363CA64B3D00E8B27F5559C0B2CC
64B17D898289F9661544D17A9535FDD857AD224A2DB7270781DAAA348B1DF881
AA21E8523BC287BAFD0D4CB5B549B69AC94FEF47EE1DA53DD38776B3E05B8A14
55911AACF57CB21C581FBEA5C97B6B8F4763D21E005D89FAEBBD7D8B06F3FBFA
E6705C3F01CDDFED987C8BA8B72D68CA6B490E990C49415DE99814AD4A079839
2364FE0BEFFF89A5599AA78B7660ADB2A13755A5048E47B03087A55E15E6BB75
DA4C90636A011123C4CDFDCD5ACED4224C927D32A783E2060C67CFFC61330B58
9DAFE477C1EFFB80CE9FFD454DBD6F8D606142E4B244E66A85437E20B97683C6
9DA60A90BF33E0D0DDA4D02A93E18795A8AA1D4994D871C6C662572C23DC7D7B
9AFC3EBCAFCF7D634D4C558A8EFA9EA15085BFE8588C946F09DABCCD5FE74AC5
D873DD414896010FA22C764E0B6B9844980A089F0DB4798087F2B4F1766E859A
3B1664A2B40A16962B16BF6F1B477E9E7884FB22BF1B10178ED4A484DBEC72E0
B3FFC47FA639D36DB36A36ECA3A2B2AD548B7E6BC11F3404DFB91962B727CDE8
B2EC957EA523BD60F37EE2857AFEC47E250048A0E2C6D6CD198B29532908C44B
42DA92FEAB15171D205D87B0405EABD1DD34C94719878B9D613AF0C9401D35B9
F3BC81EC898FD5AA0592946E26AA2690EF19CD745C092BA787903E034A2D1417
98D21C74A0F0666B13E895EF114C3F5A3DDB5381CFCC78F31123A59E84A773A3
DC1830E33B1895F8F935628480AE0BDF7201D4C38744B2BF09F0F5BD70890100
0DE64F33B95D5FA87CFE2F881CA08001300D51C912BE7CBA6297E68387A161F7
2C87517C880AAD1BBEED508E7E03D41B3D060A92B1958407869740264A8745D7
1E9F46002EE1FFC4DE496A308467D2DF590C33B10A5336BD1E521D18869E4C61
65F558F6608D57E9465971C6B191B8D3ED752968F923AECB58B21B311C6E7987
55FB13C9221F730F4CE2BECA91F339C38F051954042ED8855F3D5E9ACFBF5A65
8832D462D39FD08006EC67483124923A2145E64953D1431E63A25EAD33A6D0A3
DC9FADFEF45E209717A157AB0CF1881601EF2293105DF203CAB41F0E6C48E170
4F311F51451DD607AD96DF892AF19D50CFF1C8E6F121CE477BC13FB3235F53AD
83EC1CFA93D5D6087892FEE1D0B7EECA805A8ECC0464AA467025504983813DD7
F264D0CD24F900DAC40CE1A01CCB18F9F1704B5B90966A67F84AED0E31A74143
E56931F2D1075EEF8C1225F96B9660E087FEBEEBFE490809C3BDD72737EA6DA8
147E273879B9C1E83A892B9736062109974B99C3A0363AA5CAE125EF0F3B74E3
5560D0B8E80E8C8D9AC87926FEC30CE2BA0C6CCCA124165898606CB73A83DD53
F4D15F219219825BEA068392E9EC12F726232CE65A88DE5D265331409E9C3FBB
2C0883CB5C5B316AEFB764BFC86DFE3CE4A2AD2F1014CD74242AB02A32154997
E95DC1364BAB09FF0740310E86A38C6001D1538724FB731C3D6403E3C10BC977
ABCC68ED6F3A25C50BB0CBABE5BF2E6C34ACDCDED7FFF4837E72EE7A98A872C1
BFA5A90471B7D471C3BDB86F519E59A0C711944F631669E0D271F30024C0488C
71FB30791F330A89ACCD0234199E1D6FA71F8A4F048F596C8FED28F07755AAB0
ADC58B2383B63BDB575DAE9F7E9405A46CD16E6C06B01CB6F4617F7E89159585
FE433559D3EAA329DB6E6962A14358864BFE617F341FF75A1C8ED65AFFB7BC41
2A55E7207667A9E7AAE4E56BBC0B835DFA93AB4221A0D1F6BC517A913EE90FD2
DA342EC40809CCB56B7CF0858847C5892228EA6BFD853CB859085AB38822032E
A83C4E0E2E64636F77F4A0CEDA6815412C9200C5AA078BB566934B9A2AE93014
5C65F0034DA4A3A49D63DC034AD7F900090A037EE1DAF46C232601AFD3FAD238
103E10FA29A1770D38441A486C7B34AD90BA1FA4C3229B27B382D584E4E06BCF
F708B6DC29E0E0E03461C073EA895A1350F29F8692F0931B6453892F0D0030FD
C24A8EDE5317300C7A64086AF836B0755A18A2FFEE66D5C981727C612A133B05
D9A59F1EC2EEEF10B1F05DA3F61BD9CA0F6E188D1D17E9DF008A9A52F7D58401
1B90DB7CE477EF1006AEEA4251019D9DB3E715ED47FE68CAE79898785FA360DB
A40DCC1F7945FCC3F5D9B0066B051DD9E902E81F262602C9D87938B75EF30E0F
A14DA5BD9E017D60FC01124BABE23FF62E75FCA2E874A39F28909744DD2A0E85
4D72C2587B6CAD29EC5BD4C3D437A962DCF0CEEC7F65AB8458CB439BC970F971
2F01C681C5905A6024BD3208FED44320B723392E3F9B20EF75A6099B5ACE61B6
E0B19B92671C4E22CDA2B708AEA93947553BAECD57F4EBDAA673AD0E3ED5F7E7
086D0D8109FAF5273613D3368B9DCD15C20059F4AE94766A257435C53DF6B013
8A284A29A37284134AB99755852DC7319405FE473DD7934595BD991C103E9BF3
AD15E500D54F410172A1F8FF0BC592B34CCE89E60D54EE0982FB0432DC7F3222
F70D637355379AE65C6F45F790E12942D17E4443D8E8AC5ABDEF81933B95DC58
23F569E692C0FAC88E53A6E2A1CC08CED58694BD5993F661B75F403B0327A58E
94861527D7189B29296AD304E50151C166892AA2EA7387CC066E1DB337F411AA
33D18F78001B6CF1EB96A7D775701841336E06093D7B810770E8EBBE1F29DE7B
E080555DC0CB4D5F359941CF174D9115BE3F5F21BDE05757D3FD361873A3BF88
95DA6F09568FD192E619591F4674B74BF4CA9EE2A6652DE25916753BC8C79949
8EA80CB2062F319454FAE4B64A622EBDEA00FFFEB8C51B57F75ECFE7238BDE6C
6195EE87EB93711F2A49C15DD57EA42ECA4E6E8D58BD7B7C335DC5F878639CEA
E3E2E03FC534751C24EC1C8BD852A355CB6F4CDC952EECB9CEA4547D57B9EEB3
ABC95968E8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE19ECA64E74E1870D2C0207A
FE2AC4355EDD30E62A1FF4A14E4E214379EBA92EF2EE4E7B73DD295274E1D416
F7AD7339AD8F13E83EE1FB4E3367DE4DB71312CBB85ADD21D5A3509CC5563083
845E02E4DFE54656D599F468223E890E50D3D6E572A05AF4F329B3BF19F5F289
AB7897769D7C74C0FF12D600355A8B683939396EEF9288431B264019F43F5FD9
C71A33CA2BF8CC642FE76223DF030DC8CDDCABE73337AD9D303C1AD9AE2D07C9
CB545B38057D64A90C41E349A0441092CECF2BE970E6C4DDFADAF21BA9C0D030
F2F68C45ED7A97E0AACDAD46C96565D2A528C6A92646975A56E261E3C16937CE
A1C949AEA315D42609A279E8E3D4698F925E037E82E12B021B099D63E7D74A4E
73C9B32EA493E60787AF090ECB75DCE7C6FF16E37D5951E76363CE7E024B0EB0
82DF83FDE3D055C571BB6CCB2BF3DE8FCCEC8F095F164208E827A9C6017F08AC
DD3DF47B13105568834430FF8C5A60522C8532AB6C7F92FA8218DC8D54D0C604
72D21B79F7049C07EE9240CE786B16D833E8E745FEFD1863457C2ABF892D6322
3BCD6AAE63AB47DFFE7430382295E44B46CCACC5FB7EC73446083C4150686DD9
88A89EA4C7FB495CF36760D1CA5A56CB7EB397CB229FC7A76466650B00DCAF38
B8C9332CA8DC2E6F451974F1CEC84B04C87E046D425D2C67D68D0A054F8A3F6F
F85F5F8CAD41225BB627A6D60FF613EF2279B10F44600CA4BB5E63C8A2951F77
1CC656327D1134617F6B1B60CCAA6282EA013B359983AEF8630E66386F7FE09C
53EF74CEBA02F544269DAEB43889C7D20B7EEBEBF6977DFA340BB21236E42B64
F1DE8F7B8246C840F68A08DFEB68B4A892C6E4B4BB39726EC682E85BA7C7B988
B0CFA983FCA43C19D34D54AA899ECE4676D86C0801FF95D786308774B5A16856
7172A98D456B58D9BA157CCD651AD086E2B07C5DF7D0D9CC2DADEEABC2CC812E
F947700A630BFD6A51E3BBF1786B432C43F3C7361171FF479FB4FDFFC81474F1
189E78D1764621CBAE00163B9A8DBB7DD83111643D962CC8B5A461462F841C69
7C15231814EA2F97D671F5E751E31ADAE0B467F3CDF0CDE12200B62FD5533598
246A0003576DF2D32C346D6A51ECED2875F7F94A744C65138856D90B90C3F3C6
65E41CBBD9BE223629132D9D77EBC9D0C31707470E0F5DFC1FCD7A928DF0CD38
8ED13DD12AF5BA8160DABC41DA079DA4A751DF9A6109796D18581C08BBC8AF96
26B1DF061FFD64D5E9727ED81446B5F0F9DCF26A4DA2D231954FB93FB790C6B8
EAD46FE7E186F8A19F77E45AB50CDF50B9F75F0A6338BA2148B768FE2D526762
7FEF41D96344A05EEE4C43E2AE24657176BDA87E537227DE9FF96147F750256C
E1DF6441DBCF22615D39563FF74AB96D945E03481E0640B8DD548160E762955C
B7CE178C529CD741BCF3E19A3AD3094F5C09CC2F91BBD3BEA22E12E9C4197D0F
3835C0942AD6487F50CF80C9F8C3C012829FA69B8F87FBA0F1F8CCF619FBA3F8
7C05915E0B9DF531CD017AA860B96CA41C168548C5014D086304643B80ABAE1C
B6A67ABFAD25F281D32B528E113D50C16C7ADA4B3A932692615492C046257CAC
1B8BF3321C6361D12879D78AC6396BC3936BD40FF1476D13C94EE8FB43AD7CEB
AA1E8AC903FB1EF52F939E9170E0056F21C2C0139D85FA6FFD6D1FE5FB3CA1A5
07FC6FE52A7FCA8C9AC9557F97784FBE0050F215500F281FDAE57C111E11236D
9752D9686B08933405DBB607CF1A015698E3DF11E5CC965A61D7320109A4205C
FD1917BB1DA9327C3606A752F86D5A8B2FFEBEE83ACCBC73C481D1242B24B072
7ED9A42949C0DB281F577FEB3FA5D85CB000D190FFC22AF831712233AA23BA99
4FB0C2B8AD9955777CC388FDC131444CCE5F7F1A98BB3A8572F20EF1C658416E
23478AD56C865CF48739976AB5AC152FA12A69C8777A0C5ED8C8CB4191E950DB
CCD311A20B14B417714516AA361965E1876B223B74553E18AE14EF37FC9FB823
9868020D41EAA7F6C1A9B682B344B7DC94AAEDADF812941C266417C8A24A4EEE
010E977C6C61D3B4B6B0FBF3AB9663873429AC429977FAC1C877ACEB28FC471C
ADD1FF0737BABC8E1328AB11B432CDDE1BF3F0DBE4C9F38DF4FE6E983CB566D6
3D97119CB34E5B87902E04E190BDC8CC0D1357BE9CAA1126E0B29CCF37CA4419
9F828A69CE468362C949A4A723CB17E4E79D677AD54A7FA4821E61CA438B8AB8
4B9C06208C49657151410D1A7C631959ACE13C19B474AE0A92A80ED24D98F32B
EF868FB88C1D8DE829A43389FCC27560074CD7A9D04043F8BCE201DCFDC435D7
522163B2871DDB76497570C90861F3ECFEFFE8E695E526BF8394BE7D685F4AE3
5AA17151913D7CB33BB94AFAD750F6EA9BB43271084CD876A14CEBEB839CF883
412B07E613C4798B2BB2DB9D168701DEC925490C7D9A722117650C8F7ED57684
A4CDF5D554B1CB65AAC7F1DF8E3F4824B954594A1F97194B19FA8DADD2164043
21C50764AE6E78BC4E9790236910A06B75B6011FC24D5FCAFBBB1509D7071570
9DF16093A1AEB5365720129762C3528793C574A33D7CCDB6F875BBA9E474804E
B59474302E7A8703A70517C9FE24A6930AC314870AC4DD9CE100670E67B8FE79
0851B16E71241433FEA5650A3E73173D272FF301608967581C38905B333CCF34
4D42512CAA7E5F142C781072CFAF2D3371632319B253DBB32F790308BE4C8F5D
B698E081FD5E431E713D3FE047C72AC601456C76D4296225700B5BF6002E0860
30A0B1324E44A1AE092A7FDB9B3BA6BB7A3CDDCD4ED2E3DFD19A39954ED266B9
B4E40E5BCC6F9D38A98AEC711A55C6C0DDCB787DB16730051EDAFC10D2A983B5
A2CE0505CD251AFF6E57D012715E3B92493BB601205A40E58A483766BFC637D0
C4166E42246934DD00C08EF218B03254F3561F5D031336E30CA4C05B1532C6D1
5624A83CB86FC4DABC0E42E167293ABBAE194FA860BF629EABFCEFAB8D28B360
BE94F4426E5D273581A6D2844444D82093FB03482D81C55D82385C083D07AF13
3BB1BC941AFDD9F34D5E0E297D26FF7AEDEB09DFB0B956B404C74657B72A77E3
3A5F5ED930E9021BEA3D463E8FA8B45EA921B9FED12309E7F74D3064BADECD22
08915F105B9B3BFE688D3C21C0B994F3E8DB557C4E8C34903DA01C0392D34BF3
77544AEF916D3F56E6CF780B37CE39F605793D904FA4650A892198944249609B
D0FE79F0F3FC3A15E19E12114C8E8FEC927143EABB7A16445864494B181A579D
373539E8AAFFB0E83E3E95F08F5FB761C442515ADDF084844FF1B1F58AAED892
FF4193C2D86BF671648E5BD96008A6B5354DD0405B5C95624723F4B3D3771D39
AB8B9BBDA8C46E2CBB9D6201C7DA9C846205E522DDC3FC90FCCF6D6AD0B2AEBA
2F8E57345DF144731DD2332B0F7F5E84C46AF3D4CAA30A41A99E5E09087A89E2
55BCB6B83201298C08C58265D8B9959A9855B99748A4BFCBA72B340615323312
8E70312D5F48C59537B1582FFC314CAE502517B502C0036C47A485B062196657
C6B0CA8422DC11C6CEAAD5273C12EFFC2E3FE1428B2DAA1853FEE27EF30CB0A4
94BDF0EA9B991D38296EAC8C586A47FA1F63A1AA4A80655D0AAA3E907C1DB5CA
65E297B0DB9B140DF4659E33C22A315C72B31AB0E0721BF6B14C2F3295817E73
A240269C5FA05E957A0BE481889125A9F918B0D589B3F75130C214C2D98C3CD0
7C942610177BA2E331993DF752B5F9DA89772567B5B1997AD2FE0801171A58B9
43DF0EA5AA57BA530330233066FCBA83EE6C45350AA213AD5635D93E01D1FF00
39569338D455D8D3FE8A18A737F324C6059B531483B686F719BA31A4270C71CB
B107FBB3EA012B818B682AC6FD1663FF007576DC5FC6BAB912D35F1184DB824E
F99B489E54142E2270684BA59F008D3EC824C5F88DC830599502D7744D6B5E6C
7FCC1C073E436593FA7E500695EBF7538738098E8D5A38841482904EBEA02580
0872D6EB729465787DB5585D9C731EB49F2F48C81B70AB75392BB58596D9F820
955718607D6154B1F70DA6ED4BD6582E09826E1D64D3E97CB7BC932223C67D27
171F259460D79F3EB5418F210BACAA8C1F5E8B3A6CA06B306BD132632FB4EB92
1EE01FDE8E072A7644F56B21B1EFDA76346D43B8FBA26A9AFE2B570B65078176
2E7B55D1FBABA7F297F7B18FE6A222C95206751EA4E9DC946A608EA2655E2E88
795E67DFFC22EF342EA39CA8AA7507C6FD532C57D134087CC14AB94788C300F1
D3214E4D20A90D6BBEE6C0ABE39767BDB7BF9AA37650E6A3D1A58ABB54F1F5BD
72D086F48AE37050F7776DD5EA62522A8D06A25135505CFA9D5C15A03FFA8F08
49DA66502A9BC805EC4CF4412623C384AEBED728FBD6C6064D137FE6DC30ED0B
263D1A5C73925E0C3FC122AEF8B1B75E0A02E4EB6F6E4843360310B0D78825A4
10A5F3FED4FE5578165BD4F7D12916D852062C5A9056C7848BF3BCC1B1452E48
658A2D23DB1A0AB93A240D22A5A3D353A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D60B471719313DE
3C81902848649B8F93332BDA82C4109E89E74AA67EE6A71034357B85B6650001
BE80A48A2B187B75386D23C7203BF06858F3DFBB04B2A3F6C00DE3EAF4791087
531B1E987FFAC89B13CD6B40748446A7F3AA81126A7DEBDBF96773D2F86DAF0F
BDA9D2E7F9AB662F5C5FA74D8517BAB427D2B3258E4C4646F7AF1F6F88D1FE89
234DBA4AD8EFF150E92112CCBD815A60CA119EBE7E37AC81F9D0819DA9EE1F6F
67A0D65D35E3D0EF63274B611B201D7E280371E1F963484EC4796E7CFA879014
52811837D40C7BECBE1C6EBBBF065C283B7C7B3BD085EF1D7944260036DD3A63
9A660A25A88E5EC19575B847323A08AC7AD4E9217EAF912C86CB6CD5BBDF876C
BFB011B6C12327592F8B086ACDB860B1B84DB9BE5929167694E1FC7E62FF0800
968648454AEDA4379B7D1BE6B07E1C5BB164A3361765B4356C4E2C8E6ED843D9
845455F4F39629920D97C36F4AF1E5E72A5E71387BA13D63A2DF6044F4707F3F
4239774EC5D2A5353ED438B15409AB90833C957B8902765548C8E22E9DEEBE73
5CE28EE4ABC81450157CB7DDACCB72A0FB560BD034F31C23B04EE90FCB4484AB
2053E8DD69A2EC54915EE69CDE1336040C536CCFF439BC8E43553D800CFBB6FD
875ABAE3E6DAD7E057361D7CA6285803894F6A33B67D29ECD0A841751F69F516
8EDCD3F3DF7D327BDC7B8D4D86246B3091906127EA8E50EFCA3430DBEA873AC7
B461E0FB63D7C1CE62B8FF34647199271693ED1013818E5121FABE4DCE1B5AE3
5D7122F1ECB6AED5544B06AD48DAD5E377C2F375CAD13A9044182BFE2AB22E27
7B1AF591127CA8A28EB491FD849172DD9D4F594DBCACC60041E039B805BAE98B
8E3A5A1B7DE535607DB32A001779973DEAB1CFF05FE0BED47D9B290554B076E8
575ACBF0888FAAAF03996D966AE4E2BB70E64EEDEF0CA24784A1DB7F945DA3C9
310C9020849F2C6234B253A36D82E0B00686B0E8BFE3F4AFD1EB2B2787C65B14
7FB7AA49FD7B056D8E1B1611D2D7799E5286705C46394020E39A769D9235CF73
5AF23CCBF2CF9B24F12BFB5ACF759FC36E69B32230D2A51482FBA1FB7D44FCB5
48EE2EF56D3E57F221A0D224268AABC24AE22C90AA37B1DA67BC83A83F169F62
6A33771F450D9C48289DC7F17674418D5DE5277152AB81BEA51FA99398860E1C
252C17EE576B7ED658ABFF2E9ABDBB7EF226F862C9EC8392AB9CBD174CA5E3CA
4F221585703F20FB70E37A26C6C3F2E101693C9462E8708F3A11FC2712B27C31
57314BB5A8D210044D0993CF50A0ECBD1743751B2A5746D139A591AA3CD97B86
2A90D62328EF718ECDBFD7503A0750027042AE2D2DBE35AE5B6CEB2B2A3C2A50
85BB0E87DFD0B90AC7CF3725FB707ED9526ED054C471B82AA52B6C090D4A8953
7D321DB5621BE2BB042A97301D2FE70F509161F730765D9FDBB769014EB777D0
3A2D20FD7ED73DBE1EF745F2E3EE3C0F379E76451D99AA82119E8EEFA0F30FFC
24EFE5C7FD42DBC5FD7EC83D687FCB4D1D8550643AB0BB89428A16AB1066530B
A1C89585BE48B92FA6A323C0FB989D53EB4A5AC25A0858B10DC043C84036588A
4234FC70CC583D630C563D9C33FCE5BF7177876CE1CFE159231A026D3A3F8904
7579FD28BBF82F9DEC7BD65B80885F9C3574339A61253C3234BF4864C7109103
FBDF1B4DA7CE2B7194624D33B42527A190E9EAA689EBC39EA345CDF83CACD2D8
70186012B0526E8F49CE50FF9DEF3B4A4C1BEB3848EAA347734A49C409A00967
4D3973F49E02479CFCBCC6F3F4448229D15D0FFA4E22B5A0CB4FC82C4BB848D0
7EDE0C150C876A61EE0592365D4A01DC96667E2896098DC756EB95C1625B55A0
E9FBCE5C95B7240F7804FB337193FB904015AA56AE725E5AEE820FFAC056863E
893BFA770EED87D94F45B85F3948863924D5F3355F74426C91FADCA29EA131D4
82990CB64C201664D2D13D7772CC0518B7AF4FC2F56904C2849F7F05BD9E5029
B6C34329FA3F773B665ADFF0135A65ACB5311765991CF95780825F9C769CD611
F343C793DEDEFB0A2B19553FB4D299C662F932D9ACE5DB35BEA759F586AD85B5
8F0E770E97CE991AFD7C74C059790FBF0497F8CCCE350E08DF242157F4D3DB05
19EA9095EE0320B1B6AF51F7F499C10BBFBDCF134E1D1EB8B314610183673442
C0006F857EF419616A0D2E3D646143431C318824F8E14C709409A166796ABF2C
FF02A492B25295679DEC771D6A52EE169C6D6044F0629A5F980593A1A0EBF1E5
32E38AB2B0CF3AB3029E31BA333586646EEAD71A17D09253A010AEDEACE01E30
D3CB3FE2944C3A15D42E7F981236E31F14BC8FA2BC3BAAD162DEA2677D403162
21A59C6AAD10E16FE5C7A72657A80F1CFB288A14AD3493874D67FB56FED2C58D
D18152F75E9E3A6ADA7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC952A2C2
C9BA623D7424874E55FC5358F9F242AE84A25D03167D702466832B32DC035DFA
F601E2EB6615EC361900BAAF4D8B1B920CEF7D5709BC60E2B71D71304795E3A4
A5C17DE6823755F59BB9E3A052F69C780568CDF685AE08E368090C56CC9F59ED
573A530FEADBD8E45BBB76C8EC67F7132885ED7689F4D0D4F5A7BB174702119C
2D414E4812B2BD61FB558B9D8E869262920ADAEA3372171FD26DC9C4A2DFC815
E36687F76589224B0BA4B135CC8709B34137EBE447A68F1A9E858F9874A3F85E
82C396D9E2891D8E0D6E5571D4EF19FFC3A7C06483A7FE49E9118C94F79ADB28
0E5CC38F2AE4E4FF707C55BB3148051B2B6F2E8AD884FC8A2D3197A5688E0D0D
7CD1CEFF5E355D691E098D1FB675E15D34781B178A186480F3532DD7FE7613B1
A5B4DEFBCB892CD8541D4066FFB88BA2EE4ED4246CA01552C68F3E43237D8682
2376F40EE3FDB00E6D5249BFEB2939CE68A552AA47F3854D2757F509F2B1769D
6E78D66C3C9EC85EB4131305F467878052E009E0E1AF6179EED109C2306A4A8D
FC475F01E5A312BD9C984EE52E2F74A4D2FBF20E45EBA5D846EF69573C5C757A
1F1451EA13EA8230F0AF49C0A222FFE340112C6C063B2F9C67B3942225BD45F6
FE01CB6C10015841B66CD6BF4C7642FF2FB0900BAEB2AA27813C1EC2319A6B3A
A2D5AAE86F6D08C55795337D8A456AF592730E8722A632641B2778AD606A02FE
2D7F65FC9B12C8E0531F33227904D8D5F5F2750CA2C6E1EC6F00CB6C62BA52D1
7FC66E06ACCE76602A065760CD6959497D1C453008AF26856BDD3C2C60C866F2
43547ED3120BF4959153CBC63778C1315F65AC6BB0619C29348A1E71382C8468
9EFA8B5C6DD39FA7CDDF9F9B2E3719BE0D9630D6F1F89DC240E5DD1E46D4206D
B45BAA486A85DBC2F45566226D9EA08B48360A2A440F05A240072203661C62E8
CB19072CA76705E81701AB06B2E626F2383C1CAB8F5D9079CC78A958BD373873
43DF97B3D34B2D59D4B2A379AE1347C5A1FE39542C995AEA41ED4A22883CC403
C4D9B3656E83BF407D06A0FA27FF47F46CFA54D4184BA475B5D0F2361EAADB75
74BBF63101FB89443353F1F032FF5D7F7C97A02506798071F35E24A93F4754E2
8F4ECADBC97BB43F687E2003D74DB38D515086F457B5AEBA634AE5C759717330
44D6473DFA561FADB35D9A3FDEF856C43D283247162C392D23E2A535426F3112
E17476602F3D7B5AA66AC7125730106E7C6755853F3C54A4A5A823A807BA732B
ECA0EA73E1E82D7D4ADF9D2843FC809A040B9287F0C71D93F7C2B3273825EB07
1D57E293719487CF5D51F3F8FA688FA1B9F01022F2095323D07B0B85927A34AE
B7CDCD670DB229D765D97C9F848B58E6A98079BAD89C257E8738C6C6322DE5BA
2529610091D8A9F09161A41BAC6A15727CE914A1058A74F19CAB46BEE6168EAE
D2B0EC9606F6300D6B12BA381DC1EA42375BB856547B82DC006747FE5D968555
10C332BFB654B8EC5201F17A7C3397C6BF0D4B077C4E6BC4A9B3B3E4C9483036
1C8115DC829905CDD01E943AEAE7F7996570C3B0F9F47FFE4E053DA704E6D9C3
015A23B111A08ADCFCD2CA43728C2380D4F7E5191554672123916E7F4DED614A
2FCC83798997B6AF9A887A21D593537B2F15B5E5D41F7F57F05CEF3838ABA82A
086855D63DD58DDB133B33C3F21E04B04EA715C84B6D69CFF950270D3D9187F7
39D08BD8BD7DB82E80C5C78220CFACFF1538E9B8032D1946A359281C29D5AC09
09EBB172D9C690A53425CA7CCF57F56D75777F663BB0DA931A45289D2735B978
9FA83E1FDAFA7FF188F74F08626093D94E0561EB786F9F7BB862DE9557DBBABF
3A9BDFD6C700DB2889C827204956D533E0A0670D60CBD73D1E1B9865CF99A18F
AE3535115200C6D6D2BC9DA0BAB7DA969E929C05A9C58F6CA8228F29E7E73BC9
CA5E20B1B2C5ACB704C3DDF8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5E
160BB1CBF198EC9C64B9689AD5A4315AE0F672BEC79DDD855705AFCB9AA4030E
2A40E6AB74022C86E54E3F990F8F10D28EC176F81A2A2222B2117545EF265D6D
D1B5139002DD5225DAD211F5C72F3127A60A33D311387BDED23A61B0572821BB
E055765DAB0DAC8449427E9AEA9C41AAF3214DC47D57754E55CE6588CD0FDD9D
151FA8ED469CD6AAC616784D91B39AD85200341B4B33127E9ADD95DC518CB551
334B31801C22BAC713DE7CEEF020D643C8692113CC15C94DDD294049748B473F
D5F4AE9C316C05854C9877E9E4121D68FB545124ABDD73C8F73191965753E040
4213C6A94A7AC4F217E3AB4BBA8870B2F58453EBC222CB1270F3A107F5418942
6BE04FEC25758A69A016FC934705542C841542BC1FDB26DBE389CED1905E5CE0
EEFDC575B41DE40FC8E52F0331B58CD9A51ECAF70E97AA2B3B5EA40431A79BB1
5A93FF08E3782FA0F3150E5621B4061D680CF64AE0E7C27027236C04B7C52A3D
53785FA63388E0EE37C82618BCF2BE11F46911B3329A3EC78F6A911EC2EB5598
4542B7CEC8CF6D19962FBC57FDDF53C16F183E9E658A4368AEC49715FEBDC8CF
5C4999A26AAE7F316592E7DE134F775A835D46A69D1C4ED9F4A53C5CA6FA9E91
D8A28C719F9348509C0E17D632FB620E077EC8EE339C4804180FAB47078057D5
5EA08026BC0C88D7C77FB1097C6B36D6495916FD69B176E7FB8498B2C8A40E6C
B11C31D9C29C7AA3B71450BDEAC4AE6E2ED2B5C32E6E5FEDBEF4DEE936B01E6D
8AC3C275EEA7DBC3A8C76F4F6F7298116E7FF68A8348389D3052344CF3509035
46BE455D07E984809CAF607B7B16433C9775A3370AB3C99088BA3E5E9954C28F
54CEDFC72A14124976B7337FF348449C01E851C4736321D6DFCE20133FC6B8A8
AE43F782C9C7F3EAAB68393918581E5D402BDB2555294390E2C94CCC44A38C2C
E2AC5E22AB57C488C22E32241E3E2F47B265EC4F5C6D3D7F2A15B42461B54353
F2C60C9667C727E4FD346CB11D121777114AD0F0BA58886962785E4CCB6A2039
BC15B70DF7A0EEDE6E2A44D4BD37D712779C8ACE51DDE1FDD856FAE2C86A1A03
4284BFD04CF075F70A8BB95BF53E8BA3FE48CD123E24A210114AE2CB3B276FC7
A03B593C2123C513B4202A3015E8DEAFFFC0A69B14BBD009A0C0F023D4D6706C
CC0540166DA11ED9CBB29E514659D45B139AB83B87241B6FE3DBAF1F6D0503AA
0DE9C012E610B9840E263707E73B9BC76D256FCBDC8CABB9120CB6FE9C2A2F5E
9385BA8C88A3D7750BA2C340B265B989E10F811FFAADAB3C186FE522C6C82B9F
5C93E475FE35EEA451EC5FDD0BB5AFB31BA272431AAA0DCFC1B35B907F5C256B
9AE75E68192943D8E26CCBF43EE9C02CB6F255587300FD433C3B4D9FF47B54A4
EF83D3DD20FF35ABD92E13ADF85FA7B62AFD402ABCE47880F9AA8145A18255BF
BA19DF9635CD0EC25363552AEB53ADE69B38794E048CE0C6DC07949849C1ED2B
E9BC38EE8787EFC7FAF8A4D10DF88C738EBDF0415685C86DB4032EA0C0ECB7BB
C044D8B0C662A0B19CE44106FB8ED849FEC7A065461871F62A56555CAE6BD34D
7EA270E629F307A64B286C02409330317B4FC830F5415581B93AD457EB25B2F7
F992188F3C5E9E5A35D543A9700E1CB18BEF7A4D2DADA9C2961A75BF513FCCD4
5751A59787C7C761BD35610617C6A55D5AD394D2A1DEAB5F0549479E200D0CF4
B7C375321C5B541002722DAF3AE4D0F61F922CDE36DCC0F40361ECC45C4D38BE
8911C50F4375885C19FB751B46C7972BDAE3C044E0BBD0FFCFB0E17D3638ED70
E86F742C3B5D9421E2AF8F2412E78CA82BB0BDDA16D96BEDA842C9B8078D60E5
FA106E39801919E65EFE0005BBBA6A3CBB9136B2830227D9B5207C1B5AED0187
CBB418B5B2786E77B69ECA81864B4F28882C7503F11BCBE74EEC946B4412B039
8A980FF85A6100CA4EC3B133ED8119F306CC5F2623BFDAF5600168775DF39D60
1BE6810E04C1EE107555A6B9B15BFD37418CA33E352E161446687135708C6BE0
71B51FDE425A0AA57249851AFD775E2535BE0A136231B269B2B71D44B77142FC
C0C09F78B7A7808A55CB323A05ECB3A4DD40E0A0A26F9177819A5264EE7B1DBF
351FD9F074C98C6D159862B0A8DC79CBD08EA5AC1920F4E395EB7A69DCE16AF7
79DB5A412D41A3701DE89F53C20F1D823F2EF64DB77DDFB68AD1A8C9415419E0
B7399145BA7A01B9D57754D643A8EA8130DCE13A19A62CFF57309C7872612078
DF99DCD01E23061D33CCB7730A625DA384A7CD8DFDCE93CE7D08EB6DB08FDB01
97F1ECCA581B102A8C283F3B0F9995EC0B1D92445FC32005C6BE4758530F02C1
0DAA800CFA681EE7ADB38A6CA58290D557AFA6B2F76D3C2C0D7C2FEF36DDE11B
9E9AE8E9D60E06A3E169A1A02B17E1E5A321FB11D21ADEFC852D2E598734CDCC
CFD8C05DDC3040E38DFB588B4F4C828D7FF50D459FB6C913BB52FEF3A6D478F8
2A190831DA30BD1A0AC04F2851504C8881A81C1DF0788F4B1460B49A9C1002E4
C38C0D8088CCC17B6CD45436165101ADFDDA5711CF4DDD77C9561F3682A81CCF
964AF821F94E9C9CC7BD30C73E7F151C5C6505DECBAAD14037A5E7FDB9D0A5B7
C5A4AAF583DF1E93211411DC75EACE7A154765411925D03D58A22DCD2AEF5406
DF4662C7C9D24FA7770BE6068F5403ABE805AB2A81CEC34D986965169E9E7AB8
A1ACCA1756D2D72F0D4A81042FCDF00745DB00FE7A2187D2562E08382F94973E
E4F7F6CB903957FF97719A22BFF5D31C9C6C0FF56F9B3DF196373664EC1C411A
4F04267EFF030EF48F8A72C42BA53B14487D1F983A795F6783F803312AB2DCA1
903A7216A3CE3E2D27533ACF63963449B77B31498F1C66256C554C63BEF3A1F7
0EFE840959AEF3E34287BE6E17CA0E265ADB2CD4A90DB34E373B20F891363858
27B7980C2FE0ACB1C7819FC6B424F1D39D11670BA89B298DE40E91D1CBAEDE08
6F5B7A2CEF0B8831E122CFEEC2DECF76AAB9B3BC37CF3D8C47D478FE1788AF76
8FE9FE3A7434E53F28C04ABF30345EBA5995673CB82C886682E6E3EB568F46CB
E8FBBEB119C6057DBFC2B0085C818FDDA774EBDBE7A953AC19C2AF85CBA7D0FC
FEE888CC7FFDEFCBD57372571329A18FACB03DEDB6AC72F21880180631C81482
322560B68B06B993088E210C91279AAD5922A3546551F93A009A8BCDD2C3C8C4
A6A8D661A6CC8A1F07F8F4CD9BDE36362F6A00D43CEADAC9612A2D0B045892C6
85D8D662722A8D7116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E55581FB844F
62D48618611F1FAE737BD2925C54BCD4ACFCB26A831D89D241613946E097CE77
A82F68C92DA11EA6F45CBC8D3BECEB718B49F2297D416D2A3401DAAE76C78739
194EA386994A41063D2E2E868BBDABD1252190201338B976C4056DFB27F05392
1193C59DB289A41889E30647A4DFF91B1D7636794038D4BC5D6DABA9931AAED2
2A7706ADAF1B24FEA02222D4B0EE989B48B94474AEDA71D4FDE8251B5C7BA4C5
3E71A504255AB985B37051E2051697E7A5AB01D4273EFFA969966A789FA2F37D
76D4E33ACC3053926BF4350D36D28E2E8B90CF14F0639B23BEDA16D96BEDA842
C9B8078D60E5FA106E39801919E0A5A0E5D680DEC393ED6DC3040FC2F1DAA952
BA4B4EFA54808617B87F28E6C6EE881A8F2F137A3962ADF24CDE2109C4D54D66
B5DDE6B64A27590E6CC234C4F66BFDC300B51202BFF8AB5B5A9B4EB45A97E404
E705015940765F5D0754B270FA7C180D3CE759114D5D58C58CADC2E836378BD2
EF0242021D85C50EF4F0FA7E8DDAA7E09B0BCDC0661F6D8F43A7264FE50D3A4F
194AE8D5D20A730474C71D425F9409954DF168966159B2A302B801CBA53BB3CC
8EE6C44899633FD2E401CF66BCB8365EF29A3B8B9E5B2D53EF2921E8BE24A159
2F6A0B472AA97B877C586024714534463F25D7CB28E1C3E568D0E8F5DD1D4E5B
A8A68ACF4E48AEA4E44DD23AD5437110523A7748795527327559465FFB90BB57
BADF1019900BD7DF733F062BC4DDD09A780E3211EFB72BC5B2CF545D57AB4B9C
41F16E8FEE1661A8D1A476FC1744FF59909EB59D1EF232060686D3DC4FC1E20A
83DFAE731EAD0363A7BBEC37D95AD3847C8260D9A06D9CEE4499D8C2C46D3302
2CDD5486E73204CD30889F575471AA6CF5F9D27AAEAD9CEFBA0C15C9C22722EF
EC6BBCDB14DB7688A8A314499D796AF9C8E75B6C6298719600992548A68772C1
CAEB0A3EA12C1A1FEE981541B50456D7D18E788D2DF9753691F48105E200C720
37F7B8FD8B789AEFE644F929E005007E35E1A53941A65F73AED95051BD333C98
8C2585BBD1019C73C077FA15398CF620966AE73D22C7312708911CCBA944F844
E44FB47949643896ADFF67741FF8F24D7ADE3A85139AD06FAE9113F3D8561BA3
8C75DAB52F0F1124DFBD404DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF386
1DEA14910656948887FC431311F9A5F0D5B1E3F86AD05BE9F70669113065923D
7A6457012D7D59BAE248FDC2B1D1D07C190A30D72F4DC185613B31DF5DDE2713
3BDEA6FE7C406DC55C0F4705EBE271BDCBEBBFD886BCF57CE6AADED282DBB600
935FD62F962FF4C8BEFB1D63627913E323C2C363E3D499F3DC7411DCE3D20E2E
9F6703E65EABB0F94ABDD9C681FE691EF3090EA8853E8A160507A7743B4C506F
4F4A5A37C01FA41DBFBFB965C82A676036617E269E4E9516BDC07982DEC8AD1E
D4C507F8928A47283186D67327CD487B978FD50D9BCA2508355C56B75313210A
EC71AED98317186244404D4812EB1E27AE1C7FDFA6452E0BAA0519CB64DDE628
2787A7F448D78C3ADB402FD0AB800B022A9B59AC93D44CA1463EC3CF8DED9A2F
E50C8A915F9509A822FB278023E56BEEA38DB11808A2A6AA2D5871519431A85D
597A49335CC40D38639C467B51F09D2625AAAAF2A089D94C253CDCE592272B6B
3F4D15533971E855DE727A53B5EFC3A96E559D7356F5A810B1C767D7D6063025
F94638F565E8882EB7FADFE44E39894CBCF394C781FFEA191AD06ABEBE440B9B
4484E6018A3DC0501293A5FA8796AC1ED4DCAA4A65894CE21E1EF7CEACF4063F
1B86C7D5C49C840257BC69181660A7140AB9DC46A3E01092F57C1CE1A5474A92
C4CB86DB7E570C1792AC0CF18BAF9E6FC668A573248CAB6872598F862EF87FCA
9016BA8B65D9294431598E605A1FEFE5AC33D4EAE5F2AB5F1EC097F812672369
8234387F8C1944A27A9AA8A21F616EC20C91834AAC2A80D5684C5220B2B99D09
865F4E86264A28C739FF0A626C59DEC2406C0020E5F0CF45E34F3E676F57892E
7B84E9F184214C79017EA3BF11CA27B0493E7015852E7EEB380DF5047B9C5515
D9521283139769F56B466B95CF4D412DF23AB757C998AB1EBCE160ACB6D82AB8
1483F5A1915A280689D022BA7622E2E44E7C653774029E709393A4F8DDC880F5
AB92AF673E323BE5D63D0929903FB45F56B11CC71E80A63D1A0160817288A83D
C3CC63DE40C1316698F13C82A72522EC18F41F738AC7FD3ABD6EC50BFA7ED45D
C363A633B445704A546A9A1AEAFC042118AEF126FCEDA04C4F79E92444AE54D5
C6FF284FD81E544D200A0A4826728B75BF20C63B321F0584F9623A71F05B694C
7382FAD60205A873CCFE928E92132194E96EF9706DD439CBD53194C7DE43E873
35570FA82647AAAF3DDC1CB2A8C5462B4C454DEDD546F479E7D69BA4A8758656
2F7EAF7EE05CFC1D03708D1935EA2E69C1EC6EBC648DA1E2FB3A0283285985EF
99E3302B40CEB35592BBEB7BC05AE1507B4B1BC1B5F69AABE2F964CBA4C0ED54
16A20F102C82B88CBA0DEC07FFC5DB8427CF5683A5EE4D7FAB4C37B6A8052362
3AFE9034E573034979B6D0F7D62021E05D26262D8AA4DA1DB50DABC0C0F1EC42
48CFF24B78C4B4DEACF10F27EED9832D3215B3B1C180712B4A6F4B7EA8705E0C
914E2EECA87BD9E1FAE18F1A7D26F4B731C3F387F590C69C38A5817C8C965A59
3B9D9DBC5013FB08C6736BD27044CE41C30BB402DA4D3FD3FC0AF52F2190F679
B4AE72EBDA867E2657828356256B69B89D275EFFE5BE1AE9715EDE6761D7D722
DB82FE8AB04756697C6B1C89C6D96311E088FBDAE805AB5ADEB60FEE09F826DC
F07D7418CD75C377D3C5C7267BEFE151C52A60427176D702F5F979144FD3EE6E
CB3F8B59115379A09AEAB66EF7165E039A98068F254ED1A91F7031FA0B828C89
F0402B564833C129C31F9E8C66735C59EA38E3BCACCC6F85A6E455F52DE35283
00002FEF053DFECF68261DC400897B7D2AA9416453DE7C661ED5D3477A95C249
80073E63DD9C91F36FDB4ADBB1652A3583ABE38CE55C584D2618007F433D7925
6754C40290FC6BD7E6D48C69F042F7A5179B5F745C8B4C943BE06E64726A02C5
C91F41CD1B73300A2CA19FC526EED1027787E23EA108C7FBC17D2C074997AE69
ED04886A269544DE0EDDA501893797CE29995D5C68F55C27A9F0DC4B7EF5BFDE
9EA4A64D445BECC73A40B86139A2B545716DCEC01F7A80C3ACC17CB6A528591E
F27911265DA8B40258E56469BB61EF8C8A95B45F5B930BBF7F25CAA524C8B374
AACE6AEAC8CB4182A887EF4B294D82147C048B07CFE453C8070B0CC35C26E832
23783CB35121CFE17E2DA671A7FA88213B596074FE4D777E041408A3372CA1DA
C1ECB83AEF8ACB06C7977F5BFC46DA5C7E7131E0EFC7FA91D2E9AB6B3ED5569C
5C5673B886473693E4A54487A84A1FE0826D7F99326A41155CFC70A17B565BA5
117DB4AAF5E956EC5D20F1C64FE1D7838C72F9D1CA0C650C18287C6E4392ACEE
9A1C8FB7FD9395E3BA7425B7A59A362B11C163A54E4CA1005281F055219BB2E6
B23B1DDA74A819B97A3F23EDFB82C88901DD8D0F3CDF16D6CA98017C7C118D8C
67F71A4BC3C8794BD9AEAA4C02C18C315CD2390E3CE5611FD77CE4D5343389E3
DE1AAC43F4EC19D387D38B78DBDAA0645B2FB1C9E82B2C6B67B0552D00C4D311
4908981F51AC4E66A3F8207BE596545945C5EBA0E4FD6B949B546AD49D1BB161
EDE789A3E2D3B21F23C56F76E3568322057E16C7309215718630ADA1BB60B87B
9F39D486C776B1FCB57C5F991B521A4C89C522B27B9A66BDA5717AEF7388F7F8
E97844A475CBB069CAE6BC5F117865AF3389F9B24A1D21A9CAC5CB8DD60FD6FA
D3C8ABCD673A03A694FA7709C320C49906EF901997FA7F292F76A8F584E39836
743766E384E7646767B2D94549A80ED3563868A3DE6E265309F86289FDF3A4EC
26ED6581AFA8B6D5AD4F28DD5B022349FF221F58C49D240F662BB23D7704D4E1
8B68FF3BD876AF832F13C8343C21E274982FC4533EEA16716151F6E7C38FF3C0
7247CE5236EB13B7F1E8A15AB9B0819C35691F9B90D04ABDE47EFEC71E4973F6
29B392CE3475109E23F15C46073D42A8AAE4A6F8B0B2ED3A99469BCF9EBD067B
0DD696F94F94A574D4E7276F96E891EE4B905F728630A17798176EFC2CCAEB2D
E003E4825A689E15BA0AC1EEE78408B2D37A45A80B6EA8EC9363C4496E88651E
5B92E3D19E816587D025EA6DC053011212523A5C86E50BDCE0E5B5EFEB67FEDD
00215C3E170D67E4537DA0FA7F3A8100A905E88E03863FA67D3BD8E03F418C44
A895C52FAF16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED34534FA6FA9F76F
DD45FCC5C10CBF2640628BA4D6D643D5C428B9DB6DEAC8754AE29EAE5AC87616
C0C26855C794EF8018E16ECE31415E2010323BF7B94C460C35EB72CBC4BAD470
3A5EA471A67BECB8728CE2C4E7C3E63CF5267AB9DCE91B5AE82CBF821D0CA239
4715CBF564DA98410DBFE40C853B5C7E05E982BBEEADD7A39624091AFEBBD951
E04215CA250B7C6831F55435E628A295E895BAF7072ED33B200AE21D0404DCF3
2BCB28A7373F882020C7101D6D06E838F7245B1347921D8D93659EC8BF5397E0
939B1D202003469068A5BD2017D3094B67D6A21F2D345D2B920DC304A252193F
1D935ED5268A6AC194D216CF744DE8FC7FCFF15F02AF05BE0EC725003E6D283D
4085DCCB8A2F8972427A47CE65C55791AC67DF9ADFAE75DFEF9EB200D9C0527F
9576C9CA4DCA2FB7C7EBBE81ABB2AF159E9E240E0ADCD0DF9EA71FD357BA6B94
419F2E7627042F143B3959C09ADE231B76140270F0A05D53FCE4F35F1FE9E7FD
BFE860AF590E6F180B5759BD37EBC68AD65723EBB35773DB0933927DC21081E6
7E5DCF4E44031324D58247DE6ED8D91F32EBED2672A3B75FACE398892CC20AF2
F22969804D5A884CEF35791B1630B8CC42EA0FB206DD0229A2B37F520136C4E3
D2C9EADBE885AE2AC1E78BFC240BAEC20AD4AAD8378F4376FCC0454612F218AD
65564EA5B099C094DA672C9D042051FB5E063E72A1418AA997C16C2988EF7E01
48A1DF74DA038B947590B4BB05D4EC307CDE098225A478F5F2F4C32717B3CBB8
7C15D695F3947BC776B062381C25057FEA90D02F10F828CA80400840A563CE46
48B26718FE184DB3337DECDAB99CBAB90443083A74742E895C8B2BB07DDA9939
0DD0CCA242798CABEC88FE22762491796E95C793C00FF6450174D9096CE251AB
40E97F9CED602D05F6835AA84C809E49C4416075E1290D0B0309D7EBAD12E195
5C958FE636BFF1F4A94CB02B67C9EFE3A2930C444B7792A4619E3C6AB2D1B333
9108E2D924FB26FC7F1A6123A48DB52722FBE54A90B12646B3A5FE44632BED79
898DE54B590F421D5BE7BA35B34EB84BD59C8FC9005C544BC83CFD4BABA328C7
45443F93B1C31CBEA19AAE4FFC83A933D8DC9C2609A3FCCC76F5ED4C048FE634
30BCEE7CB73499DA0FA50091FEAF534CA528E5D88EFD8566893F56B21E34971C
27E56CC157560A9FEBBFE627DFFC6E90B9C4CA0704A975D2C77A9E4B76689F6F
C544FDD4A65861C14C1436BADFEE4DF997633E53480A1DD992F8753156C33321
D2C07EC33F36A5E3BE297EFDF302D8E8D5CED4481E9736FB436F629EAD2AB3BF
6C3781D123D7B13FA06625BB41BFBB41433632A244D2CE10DDA45FF84DB78BEB
13CD3E0CA363E13729C17C71597FA2E546CF55536EA2B941512E7F57DBEB3C0C
5724BAEB74A9F6C44159C4273172CA7AFAC6B628B895011B8D2DD6CD203D4094
F98FD9046E7E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E6C64A7C22D64A78A
0997962F15B4FF0502157BE9B017A0DCFCF0D9BFE8B01C6B3DBE65473EE16EC1
039ED26276748A72D9586113BBDECEDB4192AE9991497A922907E0C8678FEA5F
B6D820FE9E6F5613F30B43AB82895F7B7C0F19A84DA1B7F2BDD3E8ECCE1499F3
925DACEC43096D5C4BB7F6C1FD5174F5EC78D1B2379918C8034B08588C4DD53C
18CA4063BCC8EE90AC1756B426A936BAED123DB1E6548B37019825227FD74D17
B8E54FAF294389E385B61A86D2E91844C22A3CDE0856BD8640D2B9B1844E06C8
2D36CEB7BE8A5C27AE952F4946D01DD1D65C1D50D53EE0E54A1BC5E7269F5317
D031A400EE8C4AD035FFAA147F8069B0E1781EDC78E93F64C1B30E31886B7B33
9B151D756D0FADC205A0A26BCB8C098ACA6C8E1A94F6DC023BC5B37314539BB4
25959637C0BCE46EC223C08E02CA7A59F4864B176AE297116D9396DCD9134130
8ED6D2C3BFFDB77D17D0D9A6112BF0D1484EA741D84587FD64889F349207CF80
241D991BBD44DEBFDAAF7F5C4D7959D642B442931D89A2D64E9CEFFBF0E3792A
219D478D9646F0FAAA527B45679B55EF87316782B17F7642785A8AC29D45E34F
C40DE4F2C1AB3B8A063D0C75AEF4964669597F39996A34BE0B0F5BFA99D987E8
4774F6B4620EFC8EEDDC45179F7225B6871B570EBE05C9D95D8F947BD62D495A
09910970249C242B5765DE750086910D16FD291CDD155AC5F7D9DCA52F5EE2BC
41E415CBEC45468CB3D4A12AC59FFF274B4E1CA95D4E35208026AB554031EA65
F4862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57A763145CFC13D346DED4E5C
41BA28ED0B2D4F7D552B0B81B93BC82B897C7A9CE0513B4F6ECFB861950F9DE7
3BB4354FC2FD02F3F6970F6306B22213A308C0C5BC567118D0208D3C2EAD0BD5
AD97E55CAC100AE563564FC1ECF7B8F8CB85EB85B1FE1D7C558D596C7D0097FA
31399B2B567240E389590D1BB9D82D6C8D5A1ABF35B55863009C4117B56DF72A
4239D252DACA3195B1DB317AF64FFA94EBA52406037E2B86C88F3E83C98EC71C
B8627476F53A2EB15434DC3DB6BB2FF28A98266D9C2FCEBEBAD94363664E9672
63E234E7803297A2737C39EB7D148F457E28F6963344C2A01874EBC120B8A728
EC0011B6E29D31EC6838AC8D43CDB3A383FE182EE89A49C28C2D635A28DAE4FC
FB1E1F43E822EE2721E984E4FFF861E8489076F78F91B01E61A2DD28EDA14B5F
F1EDCABA25574158A8FBD31182935B9F6428D10FB47BD327A0077445CDB87807
064C538F6BD473E34EF116BDA16A8764526105E28B42CD1736E18B657D33C2B9
836FB5DB6A0D80E2FFF61759AEB9872AF546AB78693C639B5AAB5D013CE6B3FD
BB24387A4C80ED8F1CDA2D49D7672E195B09727629C1A7442BACBDA9EADBAD6D
7267995C72ACC0658E69A52A6FD054AA459B4B19F3D15F6C7215840AB673F35C
1710F0BFA193308D8D8B1A8028B073456088F14B0E5EA8266419754F5108CE1F
B984C9C5B21CF8236154D849C83E34DF5388EF29BDF6223F82F41B3259A86D65
41C9150BDA44AAE85F241E3F8F815FCE7C8E07C2A4258E17D658232EE4ADB9A3
915C53AD8A5BE8C2B56F53C1931C7FC6AAF62759CA93717B7CAFDD08829CE775
C1F5D2A21749E38370B5E52199FCAEFE1B7B1EB81FAB00C2CC543AC02886D400
C91B5F5A7979906E7215776C277A087496601C3069DA27795EFE5F6E32A89FFB
C59649CC759617E70E0C738C05216EB395BDC03A687ED357992CBFBF2CE2833B
62758EB6457D12F88119EEE99BE63E39D377C6085617E5EA9D1991BB213AD960
278AA498A967D890C29577E13DAE3392E4D5B7DF63406467FC8E6A63DE565844
A601FD91D4876A83184F0F93C9A09C65A698455D1EAD58E6E6772D9F4081BCA6
83FFECEE5B7BB6173763C2E6DC19453BC3B926DD8420D84FF4FD6D3263FB9E97
AEFFF80739C334560610DD15BFC537D546370C27D93395AE375A34487E4A6B30
A7396CE6843E57FF9B354CCBEAA563A624148953187801CC5CD18FC784F3E7FF
E8F2DB95A06D8D60239EAADD0D24164AC3F8505DFC7A4862BCB56008CD11273A
EB78CCE20956F1F48D71825B795DCE254FD11835AF4899CD0B44378CD3B235D1
BF759930EA2C17E56C256BC7D144CD4193EBD65A905E50DB692AB573347274AF
0EE46A887C53B1B7D289B8CDAE74EE3FC78C98CDC980D0B50FA873765FAC542A
CF3BC988693C547BA8224B2492EC2C5AF7D2458ED57817947BB237807480A48C
624ADC97DA44BD9FA34500F72B7B38CEB82581732326526D9439800B20C7E958
E434402D7B35FC32C14EF2F6412C5AA2F385A84BB64B27DA576A7BD8350C2860
90358BB952AE750CFD0800ED2EAA1DF4D0E3D7D524C711D490FDB8A2A0FC919E
9FB3C3D2E60EF60E536988E2D43DDECC9A45FB7AF6125AA712EB1370A040B5F0
2569854EB83C9FDBEEF1994B9D5F1DEDEC68DF370CBA39313F827CCEB26C18ED
C22D384218A20D5D321A82DF59D3ABFCD57A0AF41D8F227E899502C57DEBAD12
1103551BFF1CCBB703ECB074D6258A8689F385201488BDE49708FFD98F547943
2E304CCABC3657EFCAFE9DE81CE612656952E4368234CA0EAF8E4C4869BF957D
21ADC7D34BAD59E86A86E2D092690B2F7B00D1057A21052F1A28CE3435385ABD
69FFF5A9A7B1874BC65B1F468763282BC437C15500C357B350D466B4D20EE132
FE168BE61D4FF95136003330697B0E81958D7D8343C840CD6FD8CD9CF8AEE920
CD46525FEB4BE079BFF644AEB6B8B421E14F973B47F318D424859429DCB4ECEC
7DD282636A3D07044AF41D3B0E1CA012094938952793C03F6195A204957D175A
D4DACA36C0C4403C71A36FEECBB23E7D2774D28AA4C90134399ABB496936E2D1
390EE9BB7953614354E1D423DBD40763D57C1CAA5CFD9004575AA9F1AB91191B
962D632E68A4F965AA2AFB5669696B08202B034852C673ECC4B0F41AD0561F50
EAD7CB37952D1A0E9F744FBE8041D01ACF1E5774AEC12CDA3F68A61B0DD5FF9C
A582782EEC425C7498A7B5262D6F945FD708A4B04A9E22F5347DE2BE0EDA3BD8
97156E72985C4E6BD2E7C6A96DC29BDE648CFAA305BE5821CFB8DA9DEC9B6DEE
0EC34592289E850BEB242DD9DFD4EA2DA553162A2DB3EFD07706D953C5BC77E0
1C5CF828ACB0730F46F17A34B04C110AA8EB461973BB8A678026968855B88283
552DD3CD9831BE0D77849EB7E26BB1730B9E3B03982F0297A1FE852B945B10D7
40B1E3F135AF77320C9E19C51CDB28026A4E4AE68BEE4E418C9D3B15FB9ED133
0AB93E9A8D466EDF09418F4680EE25E1D6B414166280459027A3723BC597196C
06D15BED4B3C59B2A879FE85E298C8D2785749531EAD8FE255EE7F9DB99A4CB3
09AFB6D06F28AD54C9C388ED9B5D6E2C50A6E3D62384F9ECC1679B6514C107D7
B3A617CB3E58021E4F7A64B77EA34F99843C388AD5EF92932B85C5468C4C6C87
CC693DEC50289A51CE9FE17DE915993051873ADEE581FAFD1F33A85B6169D479
4B1D739408D98E581783BB9D29E08772D7252FAFA67396872257020B2F818D8B
16068294BEABA5CBD4F32EA6822EBBB7B8C80D080C4EC92A953711D45B6F82B5
A3EA5231FC9E447D59225DAA397A7BB4C82A4F1EA6C7682F1CA89CECD219CE3F
BC1B112A60ECC73EA9E5580A8247A32855A2BC6E718511E79DF1586378263B64
C3CF49083322176397107930FF26A1AB03592F9372AF27DDEAEFF8B80E1A4986
E2BA1FA26A25992856ABBD718CD5D9CCEBBD7DF399D750A9676AA0B493D7D546
F9D46F5873F4E4017972364FD6F21BA9C0D030F2F68C45ED7A97E0AACDAD46C9
6383D2045F576D9C446DD56ECEEA07228F0B0DD146071562748E5CB12B8789A8
A267C1EEA6D458112EF1FA850B7FBE19390E4B63696553E3B2843AC6516F43E6
C280FFB2F22395A029F7CFAEC61194397D4F36743FDA257F5F01E63B272FBD24
A46D9F5365A783EBD5BC945C595C9F9E34CE5F96174DE5818862B948215A40A8
7CFE2F881AC56B2A041FD896A90E8613DFA8EC49288F55CC3673EFA4F5C603AC
C0D73ACF38F23DF776F5F3106A9747916B591EA73B5CF621EFA31491F5716595
A08356F07039761C9513E087DF8DD4B02241AB3B1541899171BC12C8A92EC23A
87C3DE5937D454593751EDD711F21B6DCFE6A1DDF9B89311C8D330F0AD6E3986
5395536828DA89CD961A38CA6FC4604D4C1572EC48939DEFA7221CFBE92AAB64
D2CBF708EDDB1B5DEA54A92603EF47888C851EEDEE0DF9862F2CAE2F8B6A8DB2
6A1287AB3DD941A92AC57B3890F7AFDAD204076F8CCF230961BE8AB89D792D69
00C20979445680372EB8A34D972A13ABA38387B2D6B7121641C68A322971F6A0
B8C2FA887BFD5F3B2C23FCEA752669531DC6F43B3E523AA8313C2A4ED52022C5
D8E514830B60DF7A27D153F5B5FAECE0ECB558341F4CF2448D0B3C4347FB11B9
8441AC98E80F6F1927389F1E876DE7292FCBE0AC3DBD4F5A7BDBDA43B38A384C
2DBF592B09055C222138D2BC8E401B5D986ADA9C7B016BD78E48AB404DD29609
76543E664CD26055E8F13843591A8845A976231FB4599FE5AF10E3513D141C31
DD7109BCA7E9DA9FDFDA70174FD46DA36BEAC07DF24404E050CDB6C3D08ABCCF
393561712972B4422D91CC4843EC97AE75953CE32B661EA9C1B94B2EAC616248
3BFC6A074E90F0395C67544DA793044AA4A7F090ADAE3FB781C6580DBECF4D6A
688A36CFD52E35476EDDFB262C71A697E8B15D380E731E19AEBB6A5817AA9927
4DF957210A401145ADFAC3E74D0C26166D5A49AD37BCFC2E5AE335976E04B58E
74EF3493E1219B298DA01C6F8EB2A860446C717D6BFCDC0BF1F6D7E6A9E866BA
E054F5EE51C829C26F9B88AC114AB5B024F120A3F47243D609E4F31AB7E5EF97
2F4B5509417AACEB544E53701C7819926D034CEB66639B4FD8C5C33392FB562C
26C291810DE035C150F276290101A89AAC22E3BC4257933F986FA58C106E98B2
56E229329FB2A4EE929D0E702360464B8C3411B12176D834E8F8609A034F8C39
7A34C42CB977A3CCD90B96ED207BDDE15712A0ABAFC23501A34BB3758EBD90A3
0EEA3648C55D7E4CF46321A5D3A5906E2108DF5E38FCD9C55FF4147243F04530
18AD53F67C2BA8AB5D4CFE4E217103A3A34AF5F237D9D5639E3D24E6C41BE139
B761890E3FF013C7077A55255230D00D4C62F1885A3465B64BBEB2771D9E8DA7
A93CF05CD8CA02AE363A07636134DA706107BE60290327BB57599BA20E77F724
9C753F46700B475E00D41DC4E9B7035647C141740881202D286AFCC07C9AA589
241760F1E8DC707AD40BD7C35EBF67E940285E59CE23C3733E68667D61D91219
C131EE556BCC9C4374EA6B2CCD2D2E25AA01AE8644621FE81A4307B9643CFDC0
45380001DE68ABE0CCCC8EC2079FE9F74D53DAB010AA035CF2DED35C74E7DA1F
AE6C0E145BFA019E1685D4F8227777FC7DBF49F20E7ADF22AE9612796DEB9138
059A4C12D101264C3A61A645A681C23966AB83B4D93D4FC5D149A2A4D116D45E
95601049B03FFAD238726AEAFA203ACF976EFA4056A749DDC15C7A56AC870774
C97200F0601ACB1C5F7856FA2C8C10F6B6CF80898FAB4BADFEE9ED0300A10545
3FECCD0AF58C15FBDD5D36338CB0ECF40BA236664C8271D5613B831E9FA76E06
A298ABAE1A432799BA82C712F86A496E7C77173A0CDA0BCC46683C239700CA3B
4334D268CD33668C976DEE2B6D22C154BBA43B1368EDD9B86B39E7C589EF576D
93988FC7CBCE8F8EEAD34495BA9D9FE70A9C4D0076715533B2F948ADF90E8319
ED0A6DD33C692252237B500D16D93E9EC5E63A2E348BFE4F69D333F2B0E7F1B5
B2EA1E8C322C161A6A43FBD8DBDF4A3D1C8132F311B70AE10E12E863CF044F38
542BBBA7AC857C81448D5B0F13DCD56D6897F315817CF8D7E20BE994BED0241E
39A771747F79A79D9BFE1996455980D1E064BF860BCFC54F567DB1759D188BE7
86BEA67E104BF78C3E4696F2C87153F6AB7F4B5CB19B83C8063AEC29A780F2F7
19812D43D7807770C927143018447A70FD10F36933B7194FD9F3E4EAF4D145E3
0BD9AF179FD6BC16F15A36FE45E57BD5CE0C7A57713AF055C0A0F972EA179296
CBD0A038B6BA98B6078C9FCA1556AEB8E16DC9E282E127BBE03BEA8601B45356
F811DEEB1B7B1AE9597BF43606F42819D52B47DCCCE8D129A4C05778EA6E4D98
630BD629CEE07E06DF83614E2E11CBA56062181F7F08B749E97F6C22EC02CE64
CE9F9DBE52947CAF49A78FBE0E587CAE703571A817E2A7D1FE8496B76E5248A3
CBA0E861A239212F05BA154584A312D0DC1C199035B90AB72D759A2B9606E8E0
74B6742A1847C136340CD545E0375B4E9E5DCC2E4B1C631F005C08F425117300
1AC87F440F28CD183D707D3F0E3EE831F67EA52C8B139B17C131887B15464E7D
C2E8F4F4B83CFF8B1EA27CF25FC106EA688D6DD2CCDCBDAE0CBF85858B9A3020
F76D668D0F9BE3736BDD36A22E617F623FECC043475A0FD680DDA11ACCCB2ED4
351666F90CC1B2CD008B5941734D404641B17C758B40E87EFB947F6EF31DCC61
CDDFC39A2771876139A151A2A42FDCE3C59C556E5235557DA055A16C35C9E53F
11D28E9670AE565FF9CA7C5AD3F494E59E191AC6EB3D7FF335AD00BDF147756C
177D2FFFAA8396C204EF1D71A8944F2F414D6447F9187E9D4A38B2A861EC78AF
F94209889A98A0FA33D9C337F0D03AC1AD45D28C63996D4F888EB2B5E2F8CD8F
21B4A6E6FCABA356F58CAA4250A681E27E2C4AE26093689327A256571CE9457E
7CE100D81925A8BA85A9363FC5924585E86456B993FF4A3BE22F001742B77917
1454EE86CBBA0E84F9060C62A6DC2F31E78F5416F58A9AD099D024AE7F293E55
725E4B32103B1BD1720380BF14DE59470962F632C45DE55DA2940686D6A0CA26
D77F403C06D65B7394BF1FC7D06D38669637A90BFC57B1A5CA1A11C56146853B
EE469B0815B9832D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2D6D495F5022
34D7275F749AC69C7826A5EF683AD4C7DD7D07CC91527462F8C8B2DB60A318DF
D08CA53AFC3C51A1CD1CEE9A99D86612C4B98534A361D06F65A71B56E069B492
A5B86BC3DF5CC35CC5254CEB2975B401A1E45F30D3BEC68717E95B7597AD7CAC
DA2A6A4E8808BDF0A81FD6D3088895C3A2BAA31C54AC236B499AEFCAF7E22F41
8F3912D9BBD9393247D435B57D760BACFA908B124D93EA0035946C6E3002646F
CD01738AACB9AD52BCD0D4541E7B78F1B38562E968F162D67BB5DB67595670D8
2DE692F527D4E82FADAC6C38292458961C7716671EA29442E2ECB89C6B7E2213
C6BB5DA31DFB05876A64386E82E7D63B158DCB9A85A656F047B16448D99F4990
0ED5C767B148F7712C064081A7EC21FD1F6781D44DC2D13880390F815E3EBB14
C6AD0EA3E77DEADCB28F65FD2288E411F060F4C7F19A7195E992B3C0533C07A2
1CC042E626D5D4F54BEAB6227878AB001472B32BD540B24672F73F99BE8740A8
16C9CC7B59EEB58335FCDB592821C7797C13C4D8F52122B8BBB73BDC31C477A7
F1FC73B49906D8D54905803F4C580F80546B2D997B174FD53FA4041B0FD1A4E0
0A3D3E50EE934563FF9416FD0CE199660202304EFD497D46D286CEEFBB71E57F
70E9EDD479DE21D36FC0D0ADD658D704F64C52A77F03BE07CB52B6321F7F47A8
A716214C94E8BB270EAAA64F832A334E642E512DAA163EA27DFFFCCC05E8B729
072A4681FEEA1658DA75F4B4C8256B927E96167CD0DF22344570CC1FCD2159FE
FF9040255634DF0E134FBF59212F1F589806F5A9586A7469004DE7F40568FC53
8A0EA2E76E1F62790DA67887ABAEDF4BD1282D0003D149F5A121965CFC7B2CB6
0EAD23BF6B79E0791D1D6BAC0AEB0A22D63057F34DC891DE938EBACA06E09D43
8052E27B75787AE81EA98B34D8DAEBF3A0945A9F872338E9CB2776777E42735B
55DF5BACD19EEECF16BB5E61951DAFF2A3E9E9B46B9A5B29A2F79C887386AA90
32575B2891FE7BB08E2B6EF58B741F645C37EE0469468AD648DF75630D5E2991
2CD7E6362E528BF22104F881BFD29B6D9288B1F2C2AA5F487DF644CC73C1C801
444ACD693258A53F98DB0DF475C8D74928A382AB3ACFB615F3EEE17497ACFB30
D8128E3752762CA027DB8E94E120FF8B0AB25D953DAEBE2006856F96C8893AF1
1040EC171DE0B4C6A03AD8C04C59A7A86BF1BD10D50E329B7C8B977EA77A1536
0150DB0B9574A830F9EF505D1E7923E65853DF916BFAFE3341CFA4DBCB1CD87E
F0BB77B3AFAF00AF6D367DB450F76362FD9E1C29E1A3441FA4ECE765A6F5C39C
5A27A1661D9C192421E79A5C0BA3261CA53ECEB88F7A7E15CA638CE642522876
168F0EA388663DB06992292E4EE841E84D80C291C9516038B49F140CA8215BE1
67083176AABDDD13A6A87466BB5C0EB3D639082EBAC87CC6DFC9037D44F95539
FD703058CF63EE8BC26CE436CB8730DD1D4D5EFAF5FA6A47330C63B76DAC7350
7D4CBFD16D0B592E7A24A122ADD6648E60EB632C8CD853C485813E28C4028936
0E6C4A9A5C311A19A7DC6D9AF57EA283EE09BBD61FC4AF42608C6E01E005059D
D79D487A67EA1D9A22A508EEA8494F7BD45B8FD23E763B4BCB3721B6370725CC
F2BA061DE84855EC91939FAAEC6CE3913A5A406A455C4AE0BC827DEAB8405156
892093700FC74B0439374F251F8BEF1154F701F3FBC6B93DE6AB078CED5FB3D4
EC94C08179DF1D96F5D2C921AA36E77E24639C0A32F749D69F2696457E3F4973
4AE7CCE271D9F3A9068D32ACDB476F04E5FFEACBC97E59EEAD9D879E84D3ED2E
8B205541195129A01DF4507E086E6882BF37C3726993CE2E3BB3F4CDEBAC6A13
D24C034B8C32F9E827505B27AD12B9AA2BD0774AB3D74F9B3F6AD5DFF58FFF4C
5A60CCF5DD51CC3DCE518DD210DB1B63A7A01B3042CB34B1025509BC87450B4F
D9E8A02BF03897CDBE4141F92DB575C1BB3E34E3C41615A138B1F4A47067CD85
EF39D00AF0F37FA2971CB3884245656DE07AF6BBAD26B18AEF9346E29BFD4C1B
622E05E600E47023AF8046E8532AF543E46B58881A512884C04147E593985418
0966B29031A79FE3A1CCDAE03EE8CF0E20E7D4ABE410A6E4FF24EBEB2BE5F482
07C4F9F63C4253C69DBF98657427DB751702FF8E7DDF6E039E073F472A7B9D67
DE8F24A9DEED6D18D629AFF0357AA99B59A29F51E2CDA6EB3E3CDD069A8D0083
467D88AC57C62ECEF68A2F10B6125505ACFA3D838E3DCA6843B76B9B3F7CC59B
B58C7B041EF49EBDC17F49804D19359F53090C4C06B1E107B3C700F342975BDB
A5D48902331A045A4349F7CC8A141201E1EE4498B7F8AEBF68A600694C245667
C46D5168844504450958CBC3FD7EF6D0B586320E85CF476D0884C9F12ECC6EA8
BD938949438A3D3510D28B3A9C69805FA48E4A12569BB09A57D05DE428708C44
6C51F462BCBA597AA9B51673BB078799F0A752F3F7DE5CE57978C1583A2D8E5C
8C129AE6DDC88039288277AA477D07BBE62BAE6A38279A4429B293905951355C
4D4A4F65BF1A74708E4D6E1B63D9A188961A3A75B1638F4C12EE82A602331B44
A36FB4C3A6761D48BE17ECA852F8AF6C2441313701F966B13DEC5A5D7DDB8876
A06FFBBBD35F531B45B926FA81193C5C8E44E09048574455C2B8BA0F91B47280
B50C8BDDD550A7161D67A53165065BAD5B108A1E56DF6EDD500A80ED96EFFA1C
F769F4A2A6DD033D6A0D6D86FA2E2E897C1AD9E6A375D7771A6AEDB0E02641A9
75B8DF045D6052894C5915607E3BD7DCA54D8D3A8018F56200BF146F398B9FE8
29119A4ACEED02EBA65E3D0C3619C86C560FF935F7987487ECF74CFA1CC3A21E
456DBA063967BE0389CA1678E09D9D2EBD374BD0E2F84C305A7FD1F4545EBC55
591235C56A4CA40CB555A4BA1A2E7E3B3E9C27CC1079AFF08657A926F5506C19
AD3E8183EF47399892942E5C788F6BE145D99F42153A89FBB6EE8E13657CFDB9
4695D45D8582AE345AFD978844C404A5C631AFD59D6E77D53634C137AE6A6E83
FC0D04CA55D144C67177A203D53DC8B5A858574BFE1E1A7B100DFE9723A8CD49
3F5CA6351ECB3F8570D5DE3EC220C719B63A9693E92399D39EF436CBA30F8EB1
A6E543782DABE3FF83E68C0183FA16E59C55091C22CCF313C333CBF22FD74691
71E3F21E030748189C553B9F62C83765B0149330CF00D91AA88BD8E49C55BC1B
68C60B75E2F3010CC15E8199213E40222126B2F695F1A7E22D58E88CE48EBB53
9286CF5B19FC11B97671068172F99A7F085D9DEC3446B57146811EDD07010911
E6A7AC69B91B15400EAC8A99506C91841E8D1718EC76B4126B1DEFC3C980F9B6
85AAD8798D1193419E3A48D571DEE01E6C1591107758A825039FC672CD702255
BE42C0D46909A3D892F83A2264C4FEBFD78F57F16B0103D116CFBD51821884D5
26E8D6153FE5850ADC6A87A8ECF7BC89E2A66A0139EDB6BC86825BC9B0AAE1BE
C4ECFEB38C54549BF4C27D2C9F792B326C1DFCF240C9426E90F57925E6B90462
A69B5B7B8D3A99D320E3896277F31BFE9A0EB3B3C4C67743D3F1EA2F17601299
73548FA2D9F932CF0A4DC5BF1285F890D57422B6625469A79F286B1B6AF89EFD
59ACF8A7D257BB6C90E7CD54B4B4C1D5C999577B904ABE46C34F53AD927E1F4C
AEF6DB6D2BE36A796C72F8CC40A6E2310524A7D4AC3D9A6B746B400E29AB5ED1
71928761FD70A787E72F4615317C30E53627A041FB357CC41ABF6EE382C902AF
1A86C6489D50E804B90053F3A32166361D08A9FA7CB257626DFBE7C5BA464B75
AAB9F44B7926FACAAF72D74A4B649397C4C2ECC5DC9EA0984246FBCE4F85E31D
EE9E5C810306FCCC44ABEBA6E6CB975347C8939B30B6F69EEDDECF63DF525BE1
F2DC4423F5343F75C984BE7998B64260F3E65D0A734E7B87A3F3B07463632223
58BAC6B366B8377EA44AA962C408454303CCC5D900475B8C533E71308560194C
2F2259
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C16/decimale.dvi)
@start /Fa 137[25 1[25 7[21 2[13 3[23 3[25 18[34 78[{
 enclmec ReEncodeFont }7 41.511 /LMRomanCaps10-Regular
rf /Fb 22[20 111[20 5[17 15 2[22 23 1[11 2[11 3[20 23
20 1[21 18[31 1[24 5[25 4[29 7[22 22 5[22 22 22 22 12
15 3[17 17 40[{ enclmec ReEncodeFont }26 41.511 /LMSans8-Regular
rf /Fc 255[52{ enclmmathsy ReEncodeFont }1 58.1154
/LMMathSymbols7-Regular rf /Fd 205[33 33 33 48[{ enclmrm ReEncodeFont }
3 58.1154 /LMRoman7-Regular rf /Fe 206[42 42 48[{ enclmrm ReEncodeFont }
2 83.022 /LMRoman10-Regular rf /Ff 194[65 8[42 42 1[42
2[23 1[23 44[{ enclmec ReEncodeFont }6 83.022 /LMSans10-Regular
rf /Fg 22[31 31 109[31 1[33 2[36 25 27 4[36 56 3[17 3[31
36 31 1[34 97[{ enclmec ReEncodeFont }14 66.4176 /LMSans8-Regular
rf /Fh 139[42 4[59 1[93 3[28 60 2[52 1[52 30[84 68[{
 enclmec ReEncodeFont }8 119.552 /LMSans12-Regular rf
/Fi 188[84 14[66 52[{ enclmec ReEncodeFont }2 119.552
/LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525 -608 a
SDict begin H.S end
 -525 -608
a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -525 -608 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1345 1579 a

 1345 1579 a 1345
1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395
1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461 1529 a 1461
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1511 1529 a
SDict begin H.R end
 1511
1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1511 1591 a 1523 1579 a

 1523 1579
a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564 1529 a 1564
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1606 1529 a
SDict begin H.R end
 1606
1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1606 1591 a 1606 1591 a
SDict begin H.S end
 1606 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1647 1591 a 1647
1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1689
1591 a 1701 1579 a

 1701 1579 a 1701 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1701 1591 a
SDict begin H.S end
 1701
1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742 1591 a 1742
1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784
1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825 1529 a 1825
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1867 1529 a
SDict begin H.R end
 1867
1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1867 1591 a 1878 1579 a

 1878 1579
a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920 1529 a 1920
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1961 1529 a
SDict begin H.R end
 1961
1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961 1591 a
SDict begin H.S end
 1961 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2003 1591 a 2003
1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2044
1591 a 2056 1579 a

 2056 1579 a 2056 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591
a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131
1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222 1529 a 2222
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579 a 2234 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292 1529 a 2292
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1529 a
SDict begin H.R end
 2342
1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342 1591 a
SDict begin H.S end
 2342 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1591 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -517 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517
-517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517 -517
a -517 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -517 -517 a -517
-517 a
SDict begin H.S end
 -517 -517 a -517 -517 a
SDict begin 12 H.A end
 -517 -517 a -517 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -517 -517 a -517 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>]>>>> /PUT pdfmark
end
 -517
-517 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600 -287 3024 230
v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk -500 -350 a Fi(C4)p 1 TeXcolorgray
-529 -458 208 5 v -529 -323 5 137 v -325 -323 V -529
-321 208 5 v 68 w Fh(Dichotomie)p 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
220 438 a Fg(dizaines)138 b(unit\351s)473 b(dixi\350mes)100
b(centi\350mes)p -174 484 2431 4 v -178 620 4 140 v -124
578 a Ff(...)p 162 620 V 270 w Fe(10)299 548 y Fd(1)p
501 620 V 554 578 a Fe(10)638 548 y Fd(0)p 840 620 V
893 578 a Ff(,)p 1179 620 V 316 w Fe(10)1316 548 y Fc(\000)p
Fd(1)p 1527 620 V 1580 578 a Fe(10)1664 548 y Fc(\000)p
Fd(2)p 1914 620 V 1967 578 a Ff(...)p 2253 620 V -174
623 2431 4 v -467 717 a(3,14)26 b(=)p -178 759 4 140
v 162 759 V 501 759 V 781 w(3)p 840 759 V 297 w(,)p 1179
759 V 316 w(1)p 1527 759 V 306 w(4)p 1914 759 V 2253
759 V -174 762 2431 4 v 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb -600 1751 1008 60
v 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray -340 1732 a Fb(F.)16 b Fa(Na)m(tivel)29
b Fb(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fb(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(1)7 b(/)h(1)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
